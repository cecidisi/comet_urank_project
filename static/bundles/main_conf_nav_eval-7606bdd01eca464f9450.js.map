{"version":3,"sources":["webpack:///./plugins/urank/js/config/globals.js","webpack:///./plugins/urank/js/config/views.js","webpack:///./plugins/urank/css/urank.scss","webpack:///./plugins/urank/js/config/config.js","webpack:///./plugins/urank/js/controller/urank.js","webpack:///./plugins/urank/js/helper/jquery_func.js","webpack:///./plugins/urank/js/helper/utils.js","webpack:///./plugins/urank/js/model/RSContent.js","webpack:///./plugins/urank/js/model/dataConnector.js","webpack:///./plugins/urank/js/model/keywordExtractor.js","webpack:///./plugins/urank/js/model/rankingModel.js","webpack:///./plugins/urank/js/views/contentList.js","webpack:///./plugins/urank/js/views/docViewer.js","webpack:///./plugins/urank/js/views/neighborsCloud.js","webpack:///./plugins/urank/js/views/tagBox.js","webpack:///./plugins/urank/js/views/tagCloud.js","webpack:///./plugins/urank/js/views/tagcloud/tagCloudDefault.js","webpack:///./plugins/urank/js/views/usertagBox.js","webpack:///./plugins/urank/js/views/visCanvas.js","webpack:///./plugins/urank/js/views/viscanvas/ranking.js","webpack:///./conf_navigator_eval/static/conf_navigator_eval/css/style.scss","webpack:///./conf_navigator_eval/static/conf_navigator_eval/js/server-connector.js","webpack:///./conf_navigator_eval/static/conf_navigator_eval/js/main.js","webpack:///./assets/main_conf_nav_eval.js","webpack:///./conf_navigator_eval/static/conf_navigator_eval/js/action-logger.js","webpack:///./conf_navigator_eval/static/conf_navigator_eval/js/urank_options.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,yB;;;;;;AClCA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,K;AACA;;;AAGA,uB;;;;;;ACfA,yC;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC;AACpC,8CAA8C;AAC9C,8DAA8D;AAC9D,2CAA2C;AAC3C,8CAA8C;AAC9C,8CAA8C;AAC9C,8CAA8C;AAC9C,gDAAgD;AAChD,sCAAsC;AACtC,+CAA+C;AAC/C,+CAA+C;AAC/C,0CAA0C;AAC1C,uDAAuD;AACvD,qCAAqC;AACrC,2CAA2C;AAC3C,+CAA+C;AAC/C,+CAA+C;AAC/C,0CAA0C;AAC1C,mDAAmD;AACnD,0CAA0C;AAC1C,uCAAuC;AACvC,6BAA6B;AAC7B,oDAAoD;AACpD;AACA,K;AACA;;AAEA;;;;;;;;ACzNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,aAAa;AACb,mF;AACA,iD;AACA;AACA,SAAS;;AAET;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;;AAET;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;;AAET;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mDAAmD,+DAA+D;AAClH,SAAS;;AAET;AACA;AACA;AACA,mDAAmD,+DAA+D;AAClH,SAAS;;AAET;AACA;AACA,mDAAmD,6EAA6E;AAChI,SAAS;;AAET;AACA;AACA,qDAAqD,+DAA+D;AACpH,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,+C;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+DAA+D;AACnH,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yE;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA,qBAAqB;AACrB,iBAAiB,E;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0F;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sEAAsE,SAAS,mCAAmC,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,SAAS,iDAAiD,EAAE;AACtI;AACA,aAAa;AACb;AACA;;AAEA,yC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;ACjtBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,2EAA2E;;AAE1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,qBAAqB;AACzD,wDAAwD,qBAAqB;AAC7E,iBAAiB;AACjB,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;;AAEA;;;AAGA;;;AAGA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB,6CAA6C,sBAAsB;;AAEnE;;AAEA;AACA;;AAEA,KAAK;;;AAGL,CAAC;;;;;;;;;AClKD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,oC;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,8DAA8D;;;AAG1G;AACA,iCAAiC,wCAAwC;;;;;;;AAOzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC3TA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uDAAuD;AAC1G,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;AChDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0C;AACA;AACA,MAAM;;AAEN;;AAEA;AACA,eAAe,2BAA2B;AAC1C;;AAEA;AACA,eAAe,+BAA+B;AAC9C;;AAEA;AACA,eAAe,2BAA2B;AAC1C;;AAEA;AACA,eAAe,+BAA+B;AAC9C;;AAEA;AACA,eAAe,gCAAgC;AAC/C;;AAEA;AACA;AACA,e;AACA;AACA;AACA;AACA,oCAAoC;AACpC,GAAG;AACH;;AAEA;AACA;AACA,6BAA6B,wBAAwB;AACrD;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,6BAA6B,sCAAsC;AACnE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;AAGD,+B;;;;;;;;ACvGA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE,0DAA0D,oBAAoB,EAAE,aAAa;AAC7F,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iFAAiF,wCAAwC;AACzH;AACA,kDAAkD,yCAAyC;AAC3F;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,kDAAkD;AAClD;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,kEAAkE,YAAY,EAAE;AAChF;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oDAAoD;AAC/F,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,SAAS;AACT,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET,gBAAgB;AAChB;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,2CAA2C;;AAE3C,qDAAqD,6BAA6B;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA,sBAAsB,iBAAiB;AACvC;AACA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;;;;;;;;;;;;;;;;;;;AClWA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC,oCAAoC,EAAE;AAC7E;AACA,gDAAgD,kDAAkD,oBAAoB,EAAE;AACxH;AACA,sDAAsD,+DAA+D,oBAAoB,EAAE;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,O;AACT;AACA;AACA;AACA,aAAa,E;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,6B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,gDAAgD,gBAAgB,EAAE;AAClE,6CAA6C,gBAAgB,EAAE;AAC/D;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oCAAoC;AACpC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;;;;;;;;;AC/QA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,wBAAwB;AACxB;AACA,4DAA4D;AAC5D,+DAA+D;AAC/D,+DAA+D;AAC/D,gEAAgE;AAChE,iEAAiE;AACjE,uDAAuD;AACvD;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uG;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,SAAS;AACT;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,aAAa;AAC5C,qCAAqC,SAAS;AAC9C,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;;;AAIA;AACA;AACA;AACA;AACA,yC;AACA;AACA;;AAEA;AACA,2C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8E;AACA;AACA,a;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sCAAsC,yDAAyD;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gIAAgI;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA,mCAAmC,aAAa;AAChD,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA;AACA;AACA;AACA,qBAAqB,kBAAkB;;AAEvC;AACA,qBAAqB,eAAe;;AAEpC;AACA,mBAAmB,yBAAyB;AAC5C;;;AAGA;AACA;AACA;AACA;AACA,sCAAsC,gDAAgD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gIAAgI;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,KAAK;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;;;;AAIA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA,SAAS;;;;AAIT;AACA;AACA;;;;AAIA;AACA,sEAAsE;AACtE;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA,aAAa;AACb;AACA,yBAAyB,wDAAwD;AACjF,8CAA8C,0BAA0B;AACxE;AACA,sBAAsB,QAAQ;AAC9B,yCAAyC,uCAAuC;AAChF;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;ACltBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+C;AACA,a;AACA,SAAS;AACT;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,yBAAyB,mCAAmC,EAAE;AACxG,+CAA+C,0BAA0B;;AAEzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uCAAuC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA,8CAA8C,yBAAyB,EAAE;;AAEzE;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,MAAM;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;;;;;;;;AC7KA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,sDAAsD;AACtD;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uD;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA,0BAA0B,mDAAmD;;AAE7E,mCAAmC,yBAAyB;AAC5D,eAAe,0CAA0C;AACzD,eAAe,kBAAkB;;AAEjC;AACA,4BAA4B,uBAAuB;AACnD,iBAAiB,iCAAiC;AAClD;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;AACA,kBAAkB,kCAAkC;AACpD,sC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,qCAAqC;;AAErD;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,oCAAoC;AAChE,eAAe,kCAAkC;AACjD;AACA;AACA;AACA,mCAAmC,qCAAqC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,2CAA2C;AAC3C,2DAA2D;AAC3D,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kFAAkF;AAC9F;AACA,qBAAqB,2CAA2C;AAChE;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,mBAAmB,iDAAiD;AACpE;AACA,GAAG;;AAEH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,gC;;;;;;;ACtMA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C;AAC/C,4DAA4D;AAC5D,sDAAsD;AACtD,mDAAmD;AACnD,iEAAiE;AACjE,2DAA2D;AAC3D,2DAA2D;AAC3D,sDAAsD;AACtD;AACA,aAAa;AACb;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,6BAA6B,2BAA2B;AACxD;AACA;AACA,qBAAqB;AACrB,iE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,a;AACA;;AAEA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA,mD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,6BAA6B,0CAA0C;AACvE;;AAEA;AACA,aAAa;AACb;AACA;AACA,gCAAgC,+CAA+C;AAC/E;AACA;AACA,+C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8C;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,iCAAiC,0CAA0C;AAC3E;AACA;AACA,qCAAqC,cAAc,wF;AACnD;;AAEA;AACA;AACA,qCAAqC,0DAA0D;AAC/F;AACA;AACA;AACA,aAAa;;AAEb;AACA,4BAA4B,2DAA2D;AACvF;;AAEA;AACA;AACA,gCAAgC,0BAA0B;AAC1D,+C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD,gCAAgC,oDAAoD;AACpF,+BAA+B,YAAY;AAC3C;AACA,oCAAoC,yBAAyB,EAAE;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4B;AACA;AACA;AACA;;;AAGA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa,wDAAwD;AACrE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;;;;;;;;AC/ZA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,uBAAuB;AACvB;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,oDAAoD;AACpD,qDAAqD;AACrD,2DAA2D;AAC3D;AACA;AACA,SAAS;AACT,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mDAAmD,gBAAgB;AACnE,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA,qCAAqC;AACrC,yDAAyD,mCAAmC;AAC5F;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;ACtNA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,2DAA2D;AAClF,0BAA0B;AAC1B,SAAS;;AAET;AACA,mBAAmB,gEAAgE;AACnF;AACA,uBAAuB,iBAAiB;AACxC,wCAAwC,oCAAoC;AAC5E;AACA,aAAa;AACb;AACA,wBAAwB,aAAa;AACrC,wBAAwB;AACxB,aAAa;AACb;AACA;AACA,qBAAqB,mDAAmD;AACxE,qBAAqB,sDAAsD;AAC3E;AACA,aAAa;AACb;AACA,yBAAyB,2BAA2B;AACpD,gCAAgC,uCAAuC;AACvE,2BAA2B,gDAAgD;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,uBAAuB;AACvB;AACA,6DAA6D;AAC7D,6DAA6D;AAC7D,wDAAwD;AACxD,oDAAoD;AACpD;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,6BAA6B;;AAE1D;AACA,6BAA6B,6BAA6B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yDAAyD;AACtF;;AAEA;AACA;AACA;AACA,4CAA4C,uDAAuD;AACnG;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;;AAET;AACA;AACA,iCAAiC;AACjC,8BAA8B;;AAE9B;AACA;AACA;AACA,+BAA+B,oFAAoF;AACnH,aAAa;;AAEb,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAiD;;AAE5F;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;;AAEA,qDAAqD,aAAa,EAAE;AACpE,0CAA0C;;AAE1C;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wCAAwC,8CAA8C,EAAE;AACxF,wCAAwC,yCAAyC;AACjF,wCAAwC,yCAAyC;AACjF,mCAAmC;AACnC,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;AACA;AACA,S;AACA;AACA,2B;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D;AACA;AACA;AACA;AACA,yCAAyC,6DAA6D;AACtG,0CAA0C,sEAAsE;AAChH;AACA;AACA;AACA;AACA;AACA,8BAA8B,uEAAuE;AACrG,2BAA2B,2DAA2D;AACtF;AACA,uBAAuB,YAAY;AACnC;AACA,SAAS;AACT;AACA;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,uCAAuC,iBAAiB;AACxD,uBAAuB,kEAAkE;AACzF;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,sF;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kEAAkE,iDAAiD;AACnH;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,S;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C,4DAA4D;AAC5D,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kFAAkF;AACpG;AACA,2BAA2B,2CAA2C;AACtE;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,yBAAyB,iDAAiD;AAC1E;AACA,SAAS;AACT;;;AAGA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA,SAAS;;AAET,gFAAgF,gBAAgB;AAChG;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA,2CAA2C;AAC3C,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;AC/lBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB;AACA,uDAAuD;AACvD,uDAAuD;AACvD,kDAAkD;AAClD;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,kCAAkC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,4B;;;;;;;AC/FA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iDAAiD;AACjD,oDAAoD;AACpD,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;ACzLA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iDAAiD;AACjD,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,qBAAqB,EAAE;AACpE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,mDAAmD,EAAE;AACzF,6CAA6C,+CAA+C,EAAE;AAC9F;AACA;AACA;;AAEA;AACA,8CAA8C,mGAAmG,EAAE;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB;;AAEhE;AACA,wCAAwC,eAAe;;AAEvD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;;;AAIT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,mDAAmD,EAAE;AACjG,qDAAqD,+CAA+C,EAAE;AACtG;AACA;AACA;;AAEA;AACA,kDAAkD,mGAAmG,EAAE;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB,EAAE;AAC9D;AACA;AACA,gDAAgD,gBAAgB,EAAE;;AAElE;;AAEA;AACA;AACA,uD;AACA;;AAEA;AACA;AACA,2BAA2B,uBAAuB,wBAAwB,EAAE;;AAE5E,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0EAA0E,eAAe,EAAE;AAC3F;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sDAAsD,mDAAmD;;AAEzG;AACA;AACA;AACA;AACA,sDAAsD,kEAAkE;AACxH;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD,+CAA+C;AACrG;AACA;;AAEA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA,4CAA4C,qCAAqC,EAAE;AACnF;AACA,4CAA4C,sBAAsB,EAAE;AACpE,gDAAgD,qCAAqC,EAAE;AACvF,gDAAgD,gBAAgB,EAAE;;AAElE;AACA;AACA;AACA,sDAAsD,oDAAoD;;AAE1G;AACA,oDAAoD,+DAA+D;AACnH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,kEAAkE;;AAExG,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,gBAAgB,EAAE;AAC1D,4CAA4C,0BAA0B,EAAE;AACxE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,oDAAoD;AAC5H;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;;;;;;;;;;ACxmBA,yC;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED,iC;;;;;;;;;;;AC9EA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,MAAM;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,+CAA+C;AAC/E;AACA;AACA;AACA;AACA,aAAa;AACb,8DAA8D,0BAA0B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uEAAuE;AAC/F,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;;AAGL,CAAC;;;;;;;;;;;;;;;;;;;;ACzGD;AACA;;AAEA;AACA;AACA,uB;;;;;;;;ACJA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mGAAmG;AAChH,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;;AAEA,6B","file":"main_conf_nav_eval-7606bdd01eca464f9450.js","sourcesContent":["'use strict';\nvar Globals  = {\n    STR : {\n        NO_VIS : \"No visualization yet!\",\n        DROPPED : \"Dropped!\",\n        DROP_TAGS_HERE : \"Drop tags here!\",\n        JUST_RANKED : \"new\",\n        SEARCHING : \"Searching...\"//,\n        // UNDEFINED : 'undefined'\n    },\n\n    RANKING_STATUS : {\n        new : 'new',\n        update : 'update',\n        unchanged : 'unchanged',\n        no_ranking : 'no_ranking'\n    },\n\n    USER_ACTION : {\n        added: 'keyword added',\n        deleted: 'keyword deleted',\n        weighted: 'changed weight',\n        bookmarked: 'document bookmarked',\n        unbookmarked: 'document unbookmarked',\n        watched: 'watching document',\n        unwatched: 'document unwatched',\n        mode: 'ranking mode changed'\n    },\n\n    LEGENDS: {\n        rating: 'How would you rate this item?'\n    }\n};\n\nmodule.exports = Globals;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/config/globals.js\n// module id = 3\n// module chunks = 0 1 2","var TagCloudDefault = require('../views/tagcloud/tagCloudDefault');\nvar Ranking = require('../views/viscanvas/ranking');\n\nvar VIEWS = {\n    VISCANVAS : {\n        ranking: Ranking\n        // detailedView: DetailedView\n    },\n    TAGCLOUD : {\n        default: TagCloudDefault\n    //    ,landscape: LandscapeTagCloud\n    }    \n};\n\n\nmodule.exports = VIEWS;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/config/views.js\n// module id = 4\n// module chunks = 0 1 2","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/css/urank.scss\n// module id = 5\n// module chunks = 0 1 2","\nvar Config = {\n    // ROOT DOM ELEMENTS FOR EACH VIEW\n    elem : {\n        root: 'body',\n        tagCloudRoot: '',\n        tagBoxRoot: '',\n        contentListRoot: '',\n        visCanvasRoot: '',\n        docViewerRoot: '',\n        usertagBox: '',\n        neighborscloudRoot: ''\n    },\n    features: {\n        keywords: true,\n        usertags: false,\n        neighbors: false\n    },\n    // NAME OF ATTRIBUTES FOR ID, TITLE, DESCRIPTION. Add url, etc.\n    dataAttr : {\n        id: 'id',\n        title : 'title',\n        description : 'description',\n        pretty_title: null,\n        pretty_description: null\n    },\n    // RANKING MODEL ON CLIENT SIDE (if isLocal == true)\n    rankingModel: {            \n        useLocal: true,\n        host: '',           // only user if isLocal = false\n        rs : [\n            {\n                name: 'CB',\n                active: true,\n                weight : 0.5,\n                attr : 'keywords',\n                pretty: 'Content Ranking'\n            },\n            {\n                name: 'CF',\n                active: true,\n                weight : 0.5,\n                attr : 'neighbors',\n                pretty: 'Social Ranking'\n            }\n        ],\n        rankBy : 'CB'   // any RS name or overall\n        // rs: {\n        //     CB: {\n        //         name: 'cb_score',\n        //         active: true,\n        //         weight : 0.5\n        //     },\n        //     TU: {\n        //         name: 'tu_score',\n        //         active: false,\n        //         weight : 0.0\n        //     },\n        //     CF: {\n        //         name: 'cf_score',\n        //         active: true,\n        //         weight: 0.5\n        //     },\n        //     overall: {\n        //         name: 'total_score',\n        //         active: true\n        //     },\n        //     rankBy : 'CB'\n        // },\n    },\n    // VISUAL ARRANGEMENT\n    rankingRepresentation: {\n        // split_by: 'rs'                  // rs || feature\n        split_by: 'feature'                  // rs || feature\n    },\n    // KEYWORD EXTRACTOR ON CLIENT SIDE\n    keywordExtractor: {\n        useLocal: true,                 // use client-side keyword extractor or not\n        isIncluded: false,           // keywords already present in data\n        minDocFrequency: 2,\n        minRepetitionsInDocument: 1,\n        maxKeywordDistance: 5,\n        minRepetitionsProxKeywords: 4,\n        excludeStr : {\n            url : true,\n            contains : []\n        }\n    },\n    // TAG CLOUD (draggable tags)\n    tagCloud : {\n        view: 'default',              // default || landscape\n        numCategories : 5,\n        selection: 'click',             // click || drag\n        tagStyle: 'word',               // word || badge\n        highlight: 'background',        // body || background\n        minFontSize : 12,               // in px    \n        fontSizeGrowth: 0.1           // minFontSize + fontSizeGrowth * keyword.score (df) \n    },\n    // USERTAG BOX\n    usertagBox: {\n        minFontSize : 9,               // in px    \n        fontSizeGrowth: 0.8            // minFontSize + fontSizeGrowth * keyword.score (df)   \n    },\n    // NEIGHBORS CLOUD\n    neighborscloud: {\n        minFontSize : 10,               // in px    \n        fontSizeGrowth: 0.8               // minFontSize + fontSizeGrowth * keyword.score (df)   \n    },\n    // TAG BOX (droppable area)\n    tagBox: {\n        header: {\n            enabled: false,\n            useHybrid: false,\n            useSplit: false\n        },\n        // useHybridHeader : false,\n        aes: {\n            defaultBlockStyle: false\n        }\n    },\n    // DOCUMENT LIST\n    contentList: {\n        aes: {\n            textDecoration: 'word'\n        },\n        header: false,                   // boolean\n        custom: false,\n        customOptions: {                //  only used when contentListType.custom = true\n            selectors: {\n                root: '',\n                ul: '',\n                liClass: '',\n                liTitle: '',\n                liRankingContainer: '',  // will be formatted\n                watchicon: '',           // adds watchicon in placeholder\n                favicon: ''              // adds favicon in placeholder\n            },\n            classes: {\n                liHoverClass: '',\n                liLightBackgroundClass: '',\n                liDarkBackgroundClass: ''\n            },\n            misc: {\n                hideScrollbar: true\n            }\n        },\n    },\n    // VISCANVAS --> RANKING VIEW\n    visCanvas : {\n        view: 'ranking',\n        ranking: {},\n        aes: {\n            lightBackgroundColor: '',\n            darkBackgroundColor: '',\n            hideScrollbar: false\n        }\n    },\n    // DOCUMENT VIEWER\n    docViewer: {\n        attrToShow: [],\n        aes: {\n            defaultBlockStyle: true,\n            customScrollBars: true,\n            textDecoration: 'background'\n        }\n    },\n    // COLOR SCALES\n    colors : {\n        keyword: ['#eff3ff','#c6dbef','#9ecae1','#6baed6','#4292c6'], //colorbrewer.Greys[7].slice(2, 7)\n        query: colorbrewer.Set1[9], //.splice(colorbrewer.Set1[9].indexOf(\"#ffff33\"), 1, \"#ffd700\"), \n        usertag: ['#4daf4a'], //  ['#ffa32f']\n        neighbor: ['#4daf4a']\n    },\n    // FETCH DATA \n    dataConnector : {\n        urls :{\n            get_data: null,             // GET\n            get_keywords: null,         // GET\n            get_tags: null,             // GET\n            get_usertags: null,         // GET\n            get_neighbors: null,        // GET\n            urank: null,                // POST if this one is used, the following 3 are ignored\n            update_ranking: null,       // POST\n            clear_ranking: null,        // POST\n            show_more_ranking: null,    // POST\n            get_document_details: null  // POST\n        }\n    },\n    // CALLBACKS\n    callbacks : {\n        onLoad: function(keywords){},\n        onUpdate: function(selectedKeywords){},\n        afterChange: function(rankingData, selectedKeywords){},\n        onItemClicked: function(document){},        //done\n        onItemMouseEnter: function(document){},\n        onItemMouseLeave: function(document){},\n        onFaviconClicked: function(document){},\n        onWatchiconClicked: function(document){},\n        onTagSelected: function(tag){},\n        onTagInCloudMouseEnter: function(tag){},\n        onTagInCloudMouseLeave: function(tag){},\n        onTagInCloudClick: function(tag){},\n        onTagDropped: function(droppedTags, dropMode){},\n        onTagDeleted: function(tag){},\n        onTagWeightChanged: function(tag){},\n        onTagInBoxMouseEnter: function(index){},\n        onTagInBoxMouseLeave: function(index){},\n        onTagInBoxClick: function(index){},\n        onTagFrequencyChanged: function(min, max){},\n        onKeywordEntered: function(term){},\n        onDocViewerHidden: function(){},\n        onReset: function(){},\n        onRankingWeightChanged: function(rsWeight){},\n        onRatingClicked: function(documentId, index, rating){}\n    }    \n};\n\nmodule.exports = Config;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/config/config.js\n// module id = 6\n// module chunks = 0 1 2","// var $ = require('jquery');\nvar VIEWS = require('../config/views');\nvar Config = require('../config/config');\nvar DataConnector = require('../model/dataConnector');\nvar KeywordExtractor = require('../model/keywordExtractor');\nvar RankingModel = require('../model/rankingModel');\nvar ContentList = require('../views/contentList');\nvar DocViewer = require('../views/docViewer');\nvar TagBox = require('../views/tagBox');\nvar TagCloud = require('../views/tagCloud');\nvar UsertagBox = require('../views/usertagBox');\nvar VisCanvas = require('../views/visCanvas');\nvar NeighborsCloud = require('../views/neighborsCloud');\n\n\n\nvar Urank = (function() {\n    var _this, config, views, colorScales, callbacks, rankingConf, attr;\n    var dataConn, rankingModel, selectedId, data, rankingData, keywordExtractor, tags;\n    \n    ////////////////////////////////////////////////////////////////////////////////////////\n    //  METHODS PASSED TO VIEWS AND CALLED UPON EVENT OCCURRENCES\n    ////////////////////////////////////////////////////////////////////////////////////////\n    var EVTHANDLER = {\n        // TAGCLOUD\n        onTagSelected: function(index, id, is_multiple) {\n            var stem = _this.keywords[index].stem;\n            var term = _this.keywords[index].term;\n            var tag_color =  getSelectedTagColor(stem, 'keyword');\n            var tag = { type: 'keyword', id: id, index: index, stem: stem, color: tag_color, weight: 1, name: term };\n            // { type: 'keyword', id: id, index: index, color: color, weight: 1 };\n            views.tagBox.appendTag(tag);\n            views.tagCloud.updateClonOfDroppedTag(index, id, tag_color);\n            _this.selectedFeatures.keywords.push(tag);\n            \n            // if(!is_multiple) {\n            URANK.update(_this.selectedFeatures);\n            callbacks.onTagSelected.call(this, tag);\n            // }\n        },\n        onMultipleTagsSelected: function(tags_arr) {\n            // var droppedTags = []\n            tags_arr.forEach(function(tag) {\n                EVTHANDLER.onTagSelected(tag.index, tag.id, true);\n                // droppedTags.push(tag);\n            });\n            // Add CALLBACK\n        },\n\n        onKeywordEntered: function(keyword){\n            views.tagCloud.focusTag(keyword);\n            callbacks.onKeywordEntered.call(this, keyword);\n        },\n\n        onTagFrequencyChanged: function(min, max){\n            views.tagCloud.showTagsWithinRange(min, max)\n            callbacks.onTagFrequencyChanged.call(this, min, max);\n        },\n\n        onTagInCloudClick: function(index, id) {\n            // FIX HERE --> request bearing documents to server\n            var idsArray = _this.keywords[index].inDocument;\n            views.contentList.highlightListItems(idsArray);\n            views.visCanvas.highlightItems(idsArray).resize(views.contentList.getListHeight());\n            var tag = { index: index, id: id, term: _this.keywords[index].term }\n            callbacks.onTagInCloudClick.call(this, tag);\n        },\n\n        // TAG BOX\n        onTagDeleted: function(tag) {\n            \n            var featureType = tag.type + 's'\n            var indexToDelete = _.findIndex(_this.selectedFeatures[featureType], function(t){\n                return t.id.toString() === tag.id.toString();\n            });\n            // _this.selectedKeywords.splice(indexToDelete, 1);\n            _this.selectedFeatures[featureType].splice(indexToDelete, 1);\n            if(featureType === 'keywords') {\n                views.tagCloud.restoreTag(tag.index, tag.id);\n            } else if (featureType === 'neighbors') {\n                views.neighborsCloud.restoreTag(tag.index, tag.id)\n            }\n            views.tagBox.deleteTag(tag);\n            URANK.update(_this.selectedFeatures);\n            callbacks.onTagDeleted.call(this, tag);\n        },\n\n        onTagWeightChanged: function(tag /*index, id, weight*/){\n            var featureType = tag.type + 's'\n            var indexToUpdate = _.findIndex(_this.selectedFeatures[featureType], function(t){\n                return t.id.toString() === tag.id.toString();\n            });\n            _this.selectedFeatures[featureType][indexToUpdate].weight = tag.weight;            \n            URANK.update(_this.selectedFeatures);            \n            callbacks.onTagWeightChanged.call(this, tag);\n        },\n\n        onTagInCloudMouseEnter: function(index, id) {\n            views.tagCloud.hoverTag(index, id);\n            // var tag = { index: index, id: id, term: _this.keywords[index].term }\n            // callbacks.onTagInCloudMouseEnter.call(this, tag);\n        },\n\n        onTagInCloudMouseLeave: function(index, id) {\n            views.tagCloud.unhoverTag(index, id);\n            // var tag = { index: index, id: id, term: _this.keywords[index].term }\n            // callbacks.onTagInCloudMouseLeave.call(this, tag);\n        },\n\n        // USERTAGS\n        onUsertagSelected: function(index, id) {\n            var color =  getSelectedTagColor(_this.usertags[index].tag, 'usertag');\n            var usertag = { type: 'usertag', id: id, index: index, color: color, weight: 1 };\n            // _this.selectedUsertags.push(usertag);\n            _this.selectedFeatures.usertags.push(usertag);\n            views.usertagBox.selectUsertag(index, id, color);\n            views.tagBox.appendTag(usertag);\n        },\n        onUsertagMouseEnter: function(index, id) {\n            views.usertagBox.onUsertagMouseEnter(index, id);\n        },\n\n        onUsertagMouseLeave: function(index, id) {\n            views.usertagBox.onUsertagMouseLeave(index, id);\n        },\n\n        // NEIGHBOR TAGS\n        onNeighborTagSelected: function(index, id) {\n            var tag_name = _this.neighbors[index].neighbor.name;\n            var tag_color =  getSelectedTagColor(tag_name, 'neighbor');\n            var neighbortag = { type: 'neighbor', id: id, index: index, name: tag_name, color: tag_color, weight: 1 };\n            // _this.selectedNeighbors.push(neighbortag);\n            _this.selectedFeatures.neighbors.push(neighbortag);\n            views.neighborsCloud.selectNeighborTag(index, id, tag_color);\n            views.tagBox.appendTag(neighbortag);\n            URANK.update(_this.selectedFeatures);\n            callbacks.onTagSelected.call(this, neighbortag);\n        },\n        onNeighborTagMouseEnter: function(index, id) {\n            views.neighborsCloud.onNeighborTagMouseEnter(index, id);\n        },\n\n        onNeighborTagMouseLeave: function(index, id) {\n            views.neighborsCloud.onNeighborTagMouseLeave(index, id);\n        },\n\n        // TAGCLOUD\n        onTagInBoxMouseEnter: function(index) {\n            // TODO\n            callbacks.onTagInBoxMouseEnter.call(this, index);\n        },\n\n        onTagInBoxMouseLeave: function(index) {\n            // TODO\n            callbacks.onTagInBoxMouseLeave.call(this, index);\n        },\n\n        onTagInBoxClick: function(index) {\n            callbacks.onTagInBoxClick.call(this, index);\n        },\n        // RANKING VIEW OR CONTENT LIST\n        onItemClicked : function(documentId, index) {\n            URANK.showDocument(documentId, index);\n        },\n\n        onItemMouseEnter: function(documentId, index) {\n            views.contentList.hover(documentId, index);\n            views.visCanvas.hoverItem(documentId, index);\n            callbacks.onItemMouseEnter.call(this, { index: index, id: documentId, title: data[index][attr.title] });\n        },\n\n        onItemMouseLeave: function(documentId, index) {\n            views.contentList.unhover(documentId, index);\n            views.visCanvas.unhoverItem(documentId, index);\n            callbacks.onItemMouseLeave.call(this, { index: index, id: documentId, title: data[index][attr.title] });\n        },\n\n        onFaviconClicked: function(documentId, index, state){\n            views.contentList.toggleFavicon(documentId, index, state);\n            callbacks.onFaviconClicked.call(this, { index: index, id: documentId, title: data[index][attr.title], state: state });\n        },\n\n        onWatchiconClicked: function(documentId, index) {\n            views.contentList.toggleWatchListItem(documentId, index);\n            callbacks.onWatchiconClicked.call(this, { index: index, id: documentId, title: data[index][attr.title] });\n        },\n\n        onDocViewerHidden: function() {\n            views.docViewer.clear();\n            views.contentList.deselectAllListItems();\n            views.visCanvas.deselectAllItems();\n        },\n\n        onRootMouseDown: function(event){\n            event.stopPropagation();\n            if(event.which == 1) {\n                views.tagCloud.clearEffects();\n            }\n        },\n\n        onRootClick: function(event) {\n            if(event.which == 1) {\n                views.contentList.clearEffects();\n                views.visCanvas.clearEffects().resize(views.contentList.getListHeight());\n                views.docViewer.clear();\n            }\n        },\n\n        onParallelBlockScrolled: function(sender, offset) {\n            if(sender === views.contentList)\n                views.visCanvas.scrollTo(offset);\n            else if(sender == views.visCanvas)\n                views.contentList.scrollTo(offset);\n        },\n\n        onResize: function(event) {\n            views.visCanvas.resize();\n        },\n\n        onKeyDown: function(event){\n            if(event.keyCode === 27)\n                EVTHANDLER.onDocViewerHidden();\n        },\n\n        onRankingModeChange: function(mode) {\n            console.log('rank by = ' + mode);\n            setTimeout(function(){\n                if(rankingConf.rank_by !== mode) {\n                    rankingConf.rankBy = mode;\n                    views.tagBox.updateRankingMode(mode);\n                    // if(_this.selectedKeywords.length > 0)\n                    URANK.update(_this.selectedFeatures);\n                }\n            }, 0);\n        },\n\n        onRankingWeightChange: function(rWeight) {\n            var indexMapping = {}\n            rankingConf.rs.forEach(function(conf){\n                if(conf.name === 'CB') {\n                    conf.weight = 1.0 - parseFloat(rWeight)\n                } else {\n                    conf.weight = parseFloat(rWeight)\n                }\n            })\n            setTimeout(function() {\n                // rankingConf.rs.CB = parseFloat(rWeight);\n                // rankingConf.rs.CF = parseFloat(1-rWeight);\n                URANK.update(_this.selectedFeatures);\n                callbacks.onRankingWeightChanged.call(this, rWeight);\n            }, 0);\n        },\n\n        onReset: function(event) {\n            if(event) event.stopPropagation();\n            URANK.reset();\n        },\n\n        onRatingClicked: function(documentId, index, rating){\n            callbacks.onRatingClicked.call(this, documentId, index, rating);\n        }\n    };\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // URANK  FUNCTIONS\n    ////////////////////////////////////////////////////////////////////////////////\n    var URANK = {\n        \n        // Initialize views\n        initViews:  function(_config){\n            var viewsConf = {\n                contentList: {\n                    root: _config.elem.contentListRoot,    \n                    attr : _config.dataAttr,\n                    options : _config.contentList,\n                    cb : {\n                        onItemClicked: EVTHANDLER.onItemClicked,\n                        onItemMouseEnter: EVTHANDLER.onItemMouseEnter,\n                        onItemMouseLeave: EVTHANDLER.onItemMouseLeave,\n                        onFaviconClicked: EVTHANDLER.onFaviconClicked,\n                        onWatchiconClicked: EVTHANDLER.onWatchiconClicked,\n                        onScroll: EVTHANDLER.onParallelBlockScrolled,\n                        onRatingClicked: EVTHANDLER.onRatingClicked\n                    }\n                },\n\n                tagCloud: {\n                    root: _config.elem.tagCloudRoot,\n                    // view: _config.tagCloud.view,  //VIEWS.TAGCLOUD[_config.tagCloud.module],\n                    attr : _config.dataAttr,\n                    options : $.extend(true, _config.tagCloud, _config.rankingRepresentation),\n                    cb : {\n                        onKeywordEntered: EVTHANDLER.onKeywordEntered,\n                        onTagFrequencyChanged: EVTHANDLER.onTagFrequencyChanged,\n                        onTagInCloudMouseEnter: EVTHANDLER.onTagInCloudMouseEnter,\n                        onTagInCloudMouseLeave: EVTHANDLER.onTagInCloudMouseLeave,\n                        // details-on-demand click\n                        onTagInCloudClick: EVTHANDLER.onTagInCloudClick,\n                        // click to update ranking\n                        onTagSelected: EVTHANDLER.onTagSelected\n                    }\n                },\n\n                tagBox: {\n                    root: _config.elem.tagBoxRoot,\n                    // options: $.extend(true, {\n                    //     useHybridHeader : _config.rankingModel.rs.CB.active && _config.rankingModel.rs.TU.active\n                    // }, _config.tagBox, _config.rankingRepresentation),\n                    options: _config.tagBox,\n                    cb : {\n                        onModeChanged: EVTHANDLER.onRankingModeChange,\n                        onRankingWeightChanged: EVTHANDLER.onRankingWeightChange,\n                        onTagSelected: EVTHANDLER.onTagSelected,       // triggered on atg dropped\n                        onMultipleTagsSelected: EVTHANDLER.onMultipleTagsSelected,\n                        onTagDeleted: EVTHANDLER.onTagDeleted,\n                        onTagWeightChanged: EVTHANDLER.onTagWeightChanged,\n                        onTagInBoxMouseEnter: EVTHANDLER.onTagInBoxMouseEnter,\n                        onTagInBoxMouseLeave: EVTHANDLER.onTagInBoxMouseLeave,\n                        onTagInBoxClick: EVTHANDLER.onTagInBoxClick,\n                        onReset: EVTHANDLER.onReset\n                    }\n                },\n\n                visCanvas: {\n                    root: _config.elem.visCanvasRoot,\n                    // view : _config.visCanvas.view, //VIEWS.VISCANVAS[_config.visCanvas.module],\n                    attr : _config.dataAttr,\n                    options : $.extend(true, _config.visCanvas, _config.rankingRepresentation),\n                    cb : {\n                        onItemClicked: EVTHANDLER.onItemClicked,\n                        onItemMouseEnter: EVTHANDLER.onItemMouseEnter,\n                        onItemMouseLeave: EVTHANDLER.onItemMouseLeave,\n                        onScroll: EVTHANDLER.onParallelBlockScrolled\n                    }\n                },\n\n                docViewer: {\n                    root: _config.elem.docViewerRoot,\n                    attr : _config.dataAttr,\n                    options : _config.docViewer,\n                    cb :{\n                        onDocViewerHidden: EVTHANDLER.onDocViewerHidden    \n                    }\n                },\n\n                usertagBox : {\n                    root: _config.elem.usertagBox,\n                    attr: _config.attr,\n                    options: _config.usertagBox,\n                    cb : {\n                        onUsertagMouseEnter: EVTHANDLER.onUsertagMouseEnter,\n                        onUsertagMouseLeave: EVTHANDLER.onUsertagMouseLeave,\n                        onUsertagSelected: EVTHANDLER.onUsertagSelected\n                    }\n                },\n\n                neighborsCloud : {\n                    root: _config.elem.neighborscloudRoot,\n                    attr: _config.attr,\n                    options: _config.neighborscloud,\n                    cb : {\n                        onNeighborTagMouseEnter: EVTHANDLER.onNeighborTagMouseEnter,\n                        onNeighborTagMouseLeave: EVTHANDLER.onNeighborTagMouseLeave,\n                        onNeighborTagSelected: EVTHANDLER.onNeighborTagSelected\n                    }\n                }\n            };\n\n            views = {\n                contentList : new ContentList(viewsConf.contentList),\n                tagCloud    : new TagCloud(viewsConf.tagCloud),\n                tagBox      : new TagBox(viewsConf.tagBox),\n                visCanvas   : new VisCanvas(viewsConf.visCanvas),\n                docViewer   : new DocViewer(viewsConf.docViewer),\n                usertagBox  : new UsertagBox(viewsConf.usertagBox),\n                neighborsCloud: new NeighborsCloud(viewsConf.neighborsCloud)\n            }\n\n            //  Bind event handlers to resize window and undo effects on random clicks\n            $(window).off('resize', EVTHANDLER.onResize).resize(EVTHANDLER.onResize);\n            $(document).off('keydown', EVTHANDLER.onKeyDown).on('keydown', EVTHANDLER.onKeyDown);\n            $(_config.elem.root).off({\n                'mousedown': EVTHANDLER.onRootMouseDown,\n                'click': EVTHANDLER.onRootClick\n            }).on({\n                'mousedown': EVTHANDLER.onRootMouseDown,\n                'click': EVTHANDLER.onRootClick\n            });\n        },\n\n        loadData: function(_data){\n            data = _data.slice();\n            // EVTHANDLER.loadData(_data);\n            console.log('Loaded data = ' + _data.length)\n            console.log(data[0])\n            //Start ranking model (REPLACE)     \n            rankingModel.clear().setData(data);    \n            //Build views with data and/or keywords\n            views.contentList.build(data, views.tagBox.getHeight());\n            views.visCanvas.build(data, views.contentList.getListHeight());\n        },\n\n        // Load keywords in tag cloud\n        loadKeywords: function(_keywords) {\n            _this.keywords = _keywords;\n            views.tagCloud.build(_this.keywords, data, colorScales.keyword);\n        },\n\n        // Load keywords synchronously with clint-side keyword extractor\n        loadKeywordsSync: function(){\n            var keywordExtractor = new KeywordExtractor(confKeywordExt);\n            //  Clean documents and add them to the keyword extractor\n            data.forEach(function(d, i){\n                d.index = i;\n                d[attr.title] = d[attr.title].clean();\n                // var attr_desc = !attr.description_clean.isEmpty() ? attr.description_clean : attr.description;\n                // d[attr_desc] = d[attr.description].clean();\n                // var text = (d[attr_desc]) ? d[attr.title] +'. '+ d[attr_desc] : d[attr.title];\n                var text = d[attr.title];\n                keywordExtractor.addDocument(text.removeUnnecessaryChars(), d[attr.id]);\n            });\n\n            //  Extract collection and document keywords\n            keywordExtractor.processCollection();\n\n            // var kwExt = cleanAndExtractKeywords(data, config.keywordExtractor);\n            //  Assign document keywords\n            data.forEach(function(d, i){\n                d.keywords = keywordExtractor.listDocumentKeywords(i);\n            });\n            //  Assign collection keywords and set other necessary variables\n            _keywords = keywordExtractor.getCollectionKeywords();\n            this.loadKeywords(_keywords);\n        },\n\n        // Load document tags (unused)\n        loadTags: function(_tags){\n        },\n\n        // Load user tags (from user model)\n        loadUserTags: function(_usertags) {\n            _this.usertags = _usertags;\n            views.usertagBox.build(_this.usertags, colorScales.usertag);\n        },\n\n        loadNeighbors: function(_neighbors) {\n            // TODO\n            _this.neighbors = _neighbors\n            console.log(_this.neighbors[0])\n            views.neighborsCloud.build(_this.neighbors, colorScales.neighbor)\n        },\n\n        // Update ranking\n        update: function(_selectedFeatures) {\n            // _this.selectedKeywords = _selectedKeywords || _this.selectedKeywords;\n            _this.selectedFeatures = _selectedFeatures\n            selectedId = undefined;\n            console.log(rankingConf);\n\n            var emptyFeat = true;\n            for(var feature in _this.selectedFeatures) {\n                if(_this.selectedFeatures[feature].length){\n                    emptyFeat = false;\n                }\n            }\n            if(emptyFeat) {\n                return URANK.reset();\n            }\n            // Update ranking config\n            var params = {\n                rs_conf: rankingConf,\n                features: _this.selectedFeatures,\n                decoration: config.contentList.aes.textDecoration\n            };\n\n            rankingModel.update(params, function(_ranking, _status){\n                rankingData = _ranking;\n                status = _status;\n                // Update views\n                views.contentList.update({ \n                    ranking: rankingData.slice(),\n                    status: status\n                });\n                views.visCanvas.update({\n                    status: status,\n                    ranking: rankingData,\n                    conf: rankingConf,\n                    // query: _this.selectedKeywords,\n                    features: _this.selectedFeatures,\n                    // query: _this.selectedFeatures.keywords,\n                    colorScale: colorScales.query,\n                    listHeight: views.contentList.getListHeight()\n                });\n                views.docViewer.clear();\n                views.tagCloud.clearEffects();\n                // Callback specified by main.js\n                // callbacks.onUpdate.call(this, rankingData, _this.selectedKeywords, status);\n            });\n        },\n\n        // Show clicked document\n        showDocument: function(documentId, index) {\n            selectedId = documentId;\n            views.contentList.selectListItem(documentId, index);\n            views.visCanvas.selectItem(documentId, index);\n            views.tagCloud.clearEffects();\n            // Fetch pretty title and abstract\n            var params = {\n                doc_id: documentId, \n                doc_index: index, \n                decoration: config.docViewer.aes.textDecoration\n            };\n            // console.log('index = '+index);\n            // console.log('id = ' + documentId);\n            dataConn.getDocumentDetails(params, function(doc) {\n                views.docViewer.showDocument(doc);\n                callbacks.onItemClicked.call(this, { index: index, id: documentId, title: data[index][attr.title] });\n            });\n        },\n            \n        // Reset\n        reset: function(){\n            views.contentList.reset();\n            views.tagBox.reset();\n            //tagCloud.reset();\n            views.visCanvas.reset();\n            views.docViewer.clear();\n            for(var feature in _this.selectedFeatures){\n                _this.selectedFeatures[feature].forEach(function(tag, i){\n                    setTimeout(function(){\n                        if(feature === 'keywords') {\n                            views.tagCloud.restoreTag(tag.index, tag.id);    \n                        } else if(feature === 'neighbors') {\n                            views.neighborsCloud.restoreTag(tag.index, tag.id)\n                        } else if (feature === 'usertags') {\n                            views.usertagBox.restoreTag(tag.index, tag.id);\n                        }\n                        views.tagBox.deleteTag(tag);\n                        \n                    }, (i+1)*50);\n                });    \n            }\n            \n            // _this.selectedKeywords = [];\n            _this.selectedFeatures.keywords = [];\n            callbacks.onReset.call(this);\n        }\n\n    }\n\n\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // INTERNAL FUNCTIONS\n    ////////////////////////////////////////////////////////////////////////////////\n\n    var getOrdinalColorScale = function(colors, numCategories) {\n        numCategories = numCategories || colors.length;\n        if(colors.length > numCategories) {\n            colors = colors.slice(colors.length-numCategories, colors.length);\n        }\n        // if numCategories > 0, preset domain, otherwise it's updated on-demand (e.g. query terms)\n        if(numCategories)\n            return d3.scale.ordinal().domain(d3.range(0, numCategories, 1)).range(colors);  \n        return d3.scale.ordinal().range(colors);\n    };\n\n\n    var getSelectedTagColor = function(name, type){\n        var color;\n        if(config.rankingRepresentation.split_by === 'rs') {\n            if(type === 'keyword') {\n                color = colorScales.keyword(name);\n            } else if(type === 'usertag') {\n                color = colorScales.usertag(name);\n            } else if(type === 'neighbor') {\n                color = colorScales.neighbor(name);\n            }\n        } else if(config.rankingRepresentation.split_by === 'feature') {\n            color = colorScales.query(name);\n        }\n        return color;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////\n    // CONSTRUCTOR\n    ////////////////////////////////////////////////////////////////////////////////////////\n    function Urank(options) {\n        _this = this;\n        data = [];\n        this.keywords = [];\n        this.usertags = [];\n        this.neighbors = [];\n        this.selectedKeywords = [];\n        this.selectedUsertags = [];\n        this.selectedNeighbors = [];\n        this.selectedFeatures = {}; // keywords, neighbors, usertags, ...\n        selectedId = undefined;\n\n        // Extend config.js with custom options\n        config = $.extend(true, Config, options || {});\n        dataConn = new DataConnector(config.dataConnector);\n        rankingModel = new RankingModel(config.rankingModel, dataConn);\n        Object.keys(config.features).forEach(function(feature){\n            _this.selectedFeatures[feature] = [];\n        });\n    \n        attr = config.dataAttr;\n        callbacks = config.callbacks;\n        colorScales = {\n            keyword : getOrdinalColorScale(config.colors.keyword, config.tagCloud.numCategories),\n            usertag: getOrdinalColorScale(config.colors.usertag),\n            neighbor: getOrdinalColorScale(config.colors.neighbor),\n            query : getOrdinalColorScale(config.colors.query, 0)\n        };\n        rankingConf = config.rankingModel;\n        console.log(rankingConf);\n        URANK.initViews(config);\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////\n    // PROTOTYPE METHODS\n    ////////////////////////////////////////////////////////////////////////////////////////\n\n    var load = function(_data) {\n        views.tagBox.build(rankingConf);\n        views.docViewer.build();\n        // LOAD DOCUMENTS\n        if(_data) {\n            URANK.loadData(_data)\n        } else {\n            dataConn.getData(URANK.loadData);\n        }\n        // LOAD KEYWORDS\n        if(config.features.keywords) {\n            // ASYNC load if local keyword extractor is disabled\n            if(config.keywordExtractor.useLocal) {\n                URANK.loadKeywordsSync();    \n            } else {\n                dataConn.getKeywords(URANK.loadKeywords);\n            }\n        }\n        // LOAD TAGS (nothing happens if config.data_connector.urls.get_tags = null)\n        dataConn.getTags(URANK.loadTags);\n        // LOAD USERTAGS (nothing happens if config.data_connector.urls.get_usertags = null)\n        if(config.features.usertags)\n            dataConn.getUsertags(URANK.loadUserTags);\n        // LOAD NEIGHBORS\n        if(config.features.neighbors)\n            dataConn.getNeighbors(URANK.loadNeighbors);\n        //  Custom callback\n        callbacks.onLoad.call(this);\n    };\n\n\n    var destroy = function() {\n        views.tagCloud.destroy();\n        views.tagBox.destroy();\n        views.contentList.destroy();\n        views.visCanvas.destroy();\n        views.docViewer.destroy();\n    };\n\n    var clear = function() {\n        views.tagCloud.clear();\n        views.tagBox.clear();\n        views.docViewer.clear();\n//            contentList.clear();\n        //visCanvas.destroy();\n    };\n\n    var bookmarkItem = function(documentId, index){\n        data[index].bookmarked = true;\n        views.contentList.toggleFavicon(documentId);\n    };\n\n    var unbookmarkItem = function(documentId, index){\n        data[index].bookmarked = false;\n        views.contentList.toggleFavicon(documentId);\n    };\n\n    //  Miscelaneous\n    var getCurrentState = function(){\n        return {\n            mode: rMode,\n            status: rankingModel.getStatus(),\n            selectedKeywords: _this.selectedKeywords.map(function(sk){ return { term: sk.term, weight: sk.weight } }),\n            ranking: rankingModel.getRanking().map(function(d){\n                return {\n                    id: d[attr.id],\n                    title: d[attr.title],\n                    rankingPos: d.rankingPos,\n                    overallScore: d.overallScore,\n                    maxScore: d.maxScore,\n                    positionsChanged: d.positionsChanged,\n                    weightedKeywords: d.weightedKeywords.map(function(wk){ return { term: wk.term, weightedScore: wk.weightedScore } })\n                }\n            })\n        };\n    };\n\n    var getSelectedKeywords = function(){ \n        return _this.selectedKeywords \n    };\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Prototype\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\n    Urank.prototype = {\n        load: load,\n        clear: clear,\n        destroy: destroy,\n        bookmarkItem: bookmarkItem,\n        unbookmarkItem: unbookmarkItem,\n        getCurrentState: getCurrentState,\n        getSelectedKeywords: getSelectedKeywords\n    };\n\n    return Urank;\n})();\n\nmodule.exports = Urank;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/controller/urank.js\n// module id = 7\n// module chunks = 0 1 2","\n(function($) {\n\n    $.fn.extend({\n        pin: function(args) {\n\n            var options = $.extend({\n                top: 0,\n                left: 0,\n                bottom: 0,                  // only if relativeTo != 'none'\n                right: 0,                   // only if relativeTo != 'none'\n                container: 'window',\n                relativeTo: 'parent'        // parent | none | custom selector\n            }, args);\n\n            return this.each(function() {\n                var $this = $(this);\n                if($this.css('visibility') == 'visible') {\n\n                    if(options.relativeTo !== 'none') {\n                        var $parent = options.relativeTo == 'parent' ? $this.parent() : options.relativeTo;\n                        options.left = options.right ? options.left + $parent.fullOffset().left + $parent.fullWidth() + options.right : options.left + $parent.fullOffset().left;\n                        options.top = options.bottom ? options.top + $parent.fullOffset().top + $parent.fullHeight() + options.bottom : options.top + $parent.fullOffset().top;\n                    }\n\n                    $this.css({ position: 'fixed', top: options.top, left: options.left, 'z-index': 9999 });\n\n                    if(options.container !== 'window') {\n                        var $container = $(options.container),\n                            containerOffset = $container.offset(),\n                            containerHeight = $container.height(),\n                            //     containerWidth = $container.width(),\n                            thisOffset = $this.fullOffset(),\n                            thisHeight = $this.height();\n                        //   thisWidth = $this.width();\n\n                        if(thisOffset.top < containerOffset.top || (thisOffset.top + thisHeight) > (containerOffset.top + containerHeight)\n                           /*|| thisOffset.left < containerOffset.left || (thisOffset.left + thisWidth) > containerOffset.left + containerWidth */)\n                            $this.css('visibility', 'hidden');\n                    }\n                }\n                return $this;\n            });\n        },\n        \n        fullHeight: function() {\n            var m = {\n                border: {\n                    top: $(this).css('border-top-width') || '0px',\n                    bottom: $(this).css('border-bottom-width') || '0px'\n                },\n                padding: {\n                    top: $(this).css('padding-top') || '0px',\n                    bottom: $(this).css('padding-bottom') || '0px'\n                }\n            };\n\n            return $(this).height()\n                + parseInt(m.border.top.replace('px', ''))\n                + parseInt(m.padding.top.replace('px', ''))\n                + parseInt(m.border.bottom.replace('px', ''))\n                + parseInt(m.padding.bottom.replace('px', ''));\n        },\n\n        fullOffset: function() {\n            return {\n                top: $(this).offset().top + parseInt($(this).css('margin-top').replace('px', '')),\n                    //  parseInt($(this).css('border-top-width').replace('px', '')) +\n                    //parseInt($(this).css('padding-top').replace('px', '')) +\n                left: $(this).offset().left + parseInt($(this).css('margin-left').replace('px', ''))\n                    //parseInt($(this).css('border-left-width').replace('px', '')) +\n                    //parseInt($(this).css('padding-left').replace('px', ''))\n            };\n        },\n\n        fullWidth: function() {\n            return $(this).width()\n                + parseInt($(this).css('border-left-width').replace('px', ''))\n                + parseInt($(this).css('padding-left').replace('px', ''))\n                + parseInt($(this).css('border-right-width').replace('px', ''))\n                + parseInt($(this).css('padding-right').replace('px', ''));\n        },\n\n        getText: function() {\n            return $(this).clone().children().remove().end().text();\n        },\n\n        outerHTML: function() {\n            return $(this).clone().wrap('<div></div>').parent().html();\n        },\n\n        scrollTo: function(target, options, callback){\n\n            if(typeof options == 'function' && arguments.length == 2){\n                callback = options;\n                options = target;\n            }\n\n            var settings =\n                $.extend({\n                    scrollTarget  : target,\n                    offsetTop     : 0,\n                    duration      : 500,\n                    easing        : 'swing'\n                }, options);\n\n            return this.each(function(){\n                var scrollPane = $(this);\n\n                var scrollTarget;\n                if( typeof settings.scrollTarget == \"number\" ){\n                    scrollTarget = settings.scrollTarget;\n                }\n                else{\n                    if( settings.scrollTarget == \"top\" ){\n                        scrollTarget = 0;\n                    }\n                    else{\n                        scrollTarget = $(settings.scrollTarget);\n                        settings.offsetTop += scrollPane.offset().top;\n                    }\n                }\n\n                //var scrollTarget = (typeof settings.scrollTarget == \"number\") ? settings.scrollTarget : $(settings.scrollTarget);\n                var scrollY = (typeof scrollTarget == \"number\") ? scrollTarget : scrollPane.scrollTop() + scrollTarget.offset().top - settings.offsetTop;\n\n                scrollPane.animate({scrollTop : scrollY }, parseInt(settings.duration), settings.easing, function(){\n                    if (typeof callback == 'function') { callback.call(this); }\n                });\n            });\n        },\n\n        // unfinished\n        tooltip: function(options) {\n\n            var tooltipClass = 'urank-tooltip';\n\n            var $this = $(this);\n\n\n            if(typeof options == 'string' && options == 'destroy'){\n\n\n            } else if(typeof options == 'object') {\n                var s = $.extend({\n                    title: null,\n                    message: '',\n                    position: 'right',      //  right | left | top | bottom\n                    type: 'default',        //  default | info |\n                    root: 'body'\n                }, options);\n\n                $tooltip = $('<div></div>', { class: tooltipClass }).appendTo($this);\n\n            }\n\n            return $this;\n        }\n\n    });\n    \n    \n}(jQuery));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/helper/jquery_func.js\n// module id = 8\n// module chunks = 0 1 2"," 'use strict';\n\nmodule.exports = {\n    /**\n     * parsing functions\n     *\n     * */\n    parseDate: function( dateString ){\n        if(dateString instanceof Date)\n            return dateString;\n\n        var yearFormat = d3.time.format(\"%Y\");\n        var date = yearFormat.parse(dateString);\n\n        if(date != null) return date;\n\n        var dateFormat = d3.time.format(\"%Y-%m\");\n        date = dateFormat.parse(dateString);\n\n        if(date != null) return date;\n\n        if( dateString.length == 8 )\n            date = yearFormat.parse( dateString.substring(0, 4) );\n\n        if(date != null) return date;\n\n        if(dateString.contains(\"c \"))\n            date = yearFormat.parse( dateString.substring(2, 6) );\n\n        if(date != null) return date;\n        return yearFormat.parse('2014');\n    },\n\n    toYear: function(date){\n        var formatYear = d3.time.format(\"%Y\");\n        var year = formatYear(date);    \n            return year;\n    },\n\n    getTimestamp: function() {\n        var date = new Date(),\n            year = date.getFullYear(),\n            month = (date.getMonth()+1) < 10 ? '0'+(date.getMonth()+1) : (date.getMonth()+1),\n            day = date.getDay() < 10 ? '0'+date.getDay() : date.getDay(),\n            hour = date.getHours(),\n            min = date.getMinutes(),\n            mil = date.getMilliseconds();\n        return year+'-'+month+'-'+day+'_'+hour+'.'+min+'.'+mil;\n    },\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     * hex to RGB converter\n     * */\n    cutHex: function (h) {\n        return (h.charAt(0) == \"#\") ? h.substring(1, 7) : h\n    },\n    hexToR: function (h) {\n        return parseInt((this.cutHex(h)).substring(0, 2), 16)\n    },\n    hexToG: function (h) {\n        return parseInt((this.cutHex(h)).substring(2, 4), 16)\n    },\n    hexToB: function (h) {\n        return parseInt((this.cutHex(h)).substring(4, 6), 16)\n    },\n    /////////////////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     * format gradient string\n     * */\n     getGradientString: function(color, shadeDiff) {\n\n        shadeDiff = shadeDiff || 10;\n        var r = parseInt(hexToR(color));\n        var g = parseInt(hexToG(color));\n        var b = parseInt(hexToB(color));\n\n        var original = 'rgb('+r+','+g+','+b+')';\n        var lighter = 'rgb('+(r+shadeDiff)+','+(g+shadeDiff)+','+(b+shadeDiff)+')';\n\n        if (navigator.userAgent.search(\"MSIE\") >= 0) {\n            return '-ms-linear-gradient(top, ' + original + ', ' + lighter + ', ' + original + ')';\n        }\n        else if (navigator.userAgent.search(\"Chrome\") >= 0) {\n            return '-webkit-linear-gradient(top, ' + original + ', ' + lighter + ', ' + original + ')';\n        }\n        else if (navigator.userAgent.search(\"Firefox\") >= 0) {\n            return '-moz-linear-gradient(top, ' + original + ', ' + lighter + ', ' + original + ')';\n        }\n        else if (navigator.userAgent.search(\"Safari\") >= 0 && navigator.userAgent.search(\"Chrome\") < 0) {\n            return '-webkit-linear-gradient(top, ' + original + ', ' + lighter + ', ' + original + ')';\n        }\n        else if (navigator.userAgent.search(\"Opera\") >= 0) {\n            return '-o-linear-gradient(top, ' + original + ', ' + lighter + ', ' + original + ')';\n        }\n        return '-webkit-linear-gradient(top, ' + original + ', ' + lighter + ', ' + original + ')';\n    }\n\n\n};\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n/**\n * String prototype\n *\n * */\n\nString.prototype.contains = function(it) {\n    return this.indexOf(it) != -1;\n};\n\n\nString.prototype.toBool = function() {\n    return (this == \"true\");\n};\n\nString.prototype.capitalizeFirstLetter = function() {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nString.prototype.isAllUpperCase = function() {\n    return this.valueOf().toUpperCase() === this.valueOf();\n};\n\nString.prototype.clean = function(){\n\n    function decodeHTMLEntities (str) {\n        var element = document.createElement('div');\n        if(str && typeof str === 'string') {\n            // strip script/html tags\n            str = str.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\n            str = str.replace(/<\\/?\\w(?:[^\"'>]|\"[^\"]*\"|'[^']*')*>/gmi, '');\n            element.innerHTML = str;\n            str = element.textContent;\n            element.textContent = '';\n        }\n        return str;\n    }\n\n    var text = unescape(this.toString()),\n        textArray = [],\n        splitText = text.split(' ');\n\n    for(var i = 0; i < splitText.length; ++i) {\n        if(splitText[i].match(/\\w+-$/)){\n            textArray.push(splitText[i].replace('-', '') + splitText[i+1]);\n            ++i;\n        }\n        else\n            textArray.push(splitText[i]);\n    }\n    text = textArray.join(' ');\n    return (text[text.length - 1] == ' ') ? text.substring(0, text.length-1) : text;\n};\n\n\nString.prototype.removeUnnecessaryChars = function() {\n    return this.replace(/[-=’‘\\']/g, ' ').replace(/[()\\\"“”]/g,'');\n};\n\nString.prototype.isEmpty = function() {\n    return (this.length === 0 || !this.trim());\n};\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n/**\n * Number prototype gunction to parse milliseconds to minutes:seconds format\n *\n * */\n\nNumber.prototype.toTime = function(){\n    var min = (this/1000/60) << 0;\n    var sec = Math.floor((this/1000) % 60);\n    if (min.toString().length == 1) min = '0' + min.toString();\n    if (sec.toString().length == 1) sec = '0' + sec.toString();\n    return min + ':' + sec;\n};\n\n\nNumber.prototype.round = function(places) {\n    return +(Math.round(this + \"e+\" + places)  + \"e-\" + places);\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n/**\n * Math prototype\n *\n * */\n\nif(!Math.roundTo)\n    Math.roundTo = function(value, places) { return +(Math.round(value + \"e+\" + places)  + \"e-\" + places); }\n\n\nif(!Math.log2)\n    Math.log2 = function(value) { return (Math.log(value) / Math.log(2)); }\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n/**\n *  NLP \n *  Move to different file\n * */\n\n// // \n// var natural = require('natural');\n// var stemmer = natural.PorterStemmer;\n// var nounInflector = new natural.NounInflector();\n// stemmer.attach();\n// nounInflector.attach();\n\n\n// function getStyledText (text, stemmedKeywords, colorScale){\n//     var styledText = '',\n//         word = '';\n//     text.split('').forEach(function(c){\n//         if(c.match(/\\w/)){\n//             word += c;\n//         }\n//         else if(c == '\\n'){\n//             styledText += '<br/>'\n//         }\n//         else {\n//             if(word != '')\n//                 word = getStyledWord(word,stemmedKeywords, colorScale);\n//             styledText += word + c;\n//             word = '';\n//         }\n//     });\n//     if(word != '')\n//         styledText += getStyledWord(word, stemmedKeywords, colorScale);\n//     return styledText;\n// }\n\n\n// function getStyledWord (word, stemmedKeywords, colorScale){\n//     var trickyWords = ['it', 'is', 'us', 'ar'],\n//         word = word.replace(/our$/, 'or'),\n//         wordStem = word.stem();\n//     // First clause solves words like 'IT', second clause that the stem of the doc term (or the singularized term) matches the keyword stem\n//     if(trickyWords.indexOf(wordStem) == -1 || word.isAllUpperCase()) {\n//         if(stemmedKeywords.indexOf(wordStem) > -1 )\n//             return \"<strong style='color:\" + colorScale(wordStem) + \"'>\" + word + \"</strong>\";\n//         if(stemmedKeywords.indexOf(word.singularizeNoun().stem()) > -1 )\n//             return \"<strong style='color:\" + colorScale(word.singularizeNoun().stem()) + \"'>\" + word + \"</strong>\";\n//     }\n//     return word;\n// }\n// function getPositionArray (text, stemmedKeywords, position){\n//     var positionArray = [];\n\n//     var word = '';\n//     text.split('').forEach(function(c){\n//         position++;\n//         if(c.match(/\\w/))\n//             word += c;\n//         else {\n//             if(word != '') {\n//                 var returnValue = getPositionOfWord(word, stemmedKeywords, position);\n//                 if(returnValue != null) {\n//                     positionArray.push(returnValue);\n//                     position = returnValue.position;\n//                 }\n//                 word = '';\n//             }\n//         }\n//     });\n\n//     if(word != '') {\n//         var returnValue = getPositionOfWord(word, stemmedKeywords, position);\n//         if(returnValue != null) {\n//             positionArray.push(returnValue);\n//             position = returnValue.position;\n//         }\n//         word = '';\n//     }\n//     return positionArray;\n// }\n\n// function getPositionOfWord (word, stemmedKeywords, position){\n\n//     var trickyWords = ['it', 'is', 'us', 'ar'],\n//         word = word.replace(/our$/, 'or'),\n//         wordStem = word.stem();\n\n//     // First clause solves words like 'IT', second clause that the stem of the doc term (or the singularized term) matches the keyword stem\n//     if(trickyWords.indexOf(wordStem) == -1 || word.isAllUpperCase()) {\n//         var positionArrayEntry;\n//         var index = stemmedKeywords.indexOf(wordStem);\n\n//         if(index > -1) {\n//             positionArrayEntry = new Object;\n//             positionArrayEntry.word = word;\n//             positionArrayEntry.position = position - word.length / 2;\n//             positionArrayEntry.keyword = stemmedKeywords[index];\n//             return positionArrayEntry;\n//         }\n\n//         index = stemmedKeywords.indexOf(word.singularizeNoun().stem());\n//         if(index > -1) {\n//             positionArrayEntry = new Object;\n//             positionArrayEntry.word = word;\n//             positionArrayEntry.position = position - word.length / 2;\n//             positionArrayEntry.keyword = stemmedKeywords[index];\n//             return positionArrayEntry;\n//         }\n//     }\n\n//     return null;\n// }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/helper/utils.js\n// module id = 9\n// module chunks = 0 1 2","\nvar RSContent = (function(){\n    'use strict';\n\n    // function RSContent() {}\n\n    var getEuclidenNorm = function(docKeywords) {\n        var acumSquares = 0;\n        Object.keys(docKeywords).forEach(function(k){\n            acumSquares += docKeywords[k] * docKeywords[k];\n        });\n        return Math.sqrt(acumSquares);\n    };\n\n\n    return {\n        getCBScores : function(options) {\n            var opt = $.extend(true, {\n                data: [],\n                keywords: [],\n                options: {\n                    rWeight: 1\n                }\n            }, options);\n            var _data = opt.data.slice();\n\n            if(opt.keywords.length > 0) {\n                _data.forEach(function(d, i) {\n                    d.ranking.cb_score = 0;\n                    d.ranking.cb_max_score = 0;\n                    d.ranking.cb_details = [];\n                    var docNorm = getEuclidenNorm(d.keywords);\n                    var unitQueryVectorDot = parseFloat(1.00/Math.sqrt(opt.keywords.length));\n                    var max = 0;\n                    opt.keywords.forEach(function(q) {\n                    // termScore = tf-idf(d, t) * unitQueryVector(t) * weight(query term) / |d|   ---    |d| = euclidenNormalization(d)\n                        var termScore = (d.keywords[q.stem]) ? ((parseFloat(d.keywords[q.stem]) / docNorm) * unitQueryVectorDot * parseFloat(q.weight * opt.options.rWeight)).round(3) :  0;\n                        // if item doesn't contain query term => maxScore and overallScore are not changed\n                        d.ranking.cb_score += termScore;\n                        d.ranking.cb_max_score = termScore > d.ranking.cb_max_score ? termScore : d.ranking.cb_max_score;\n                        d.ranking.cb_details.push({ term: q.term, stem: q.stem, weightedScore: termScore });\n                    });\n                });\n            }\n            return _data;\n        }\n    }\n})();\n\nmodule.exports = RSContent;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/model/RSContent.js\n// module id = 10\n// module chunks = 0 1 2","\nDataConnector = (function(){\n\tvar _this;\n\n\tfunction DataConnector(options){\n\t\tthis.urls = options.urls;\n\t\t_this = this;\n\t}\n\n\tvar sendRequest = function(options, onDone, onFail){\n\t\tvar request_options = $.extend(true, {\n\t\t\t'url' : '',\n\t\t\t'type': 'GET'\n\t\t}, options);\n\t\tonDone = onDone || function(data){};\n\t\tonFail = onFail || function(){};\n\t\tif(!request_options.url || request_options.url === '') return { 'message': 'No URL set' };\n\t\tvar timelapse = $.now()\n\t\t$.ajax(request_options)\n\t\t.fail(function(jqXHR, textStatus){\n\t        console.log('DataConnector ERROR ' + request_options.type + ' ' + request_options.url);\n\t        // console.log(jqXHR)\n\t        onFail();\n\t    }).done(function(resp) {\n\t        timelapse = $.now() - timelapse\n\t        console.log('DataConnector: successful request ' + request_options.type + ' ' + request_options.url + ' (' + timelapse + ' ms)');\n        \tconsole.log(resp.results.length);    \n\t        onDone(resp.results);\n\t    });\n\n\t};\n\n\tvar getData = function(onDone) {\n\t\tsendRequest({ url: _this.urls.get_data }, onDone);\n\t};\n\n\tvar getKeywords = function(onDone) {\n\t\tsendRequest({ url: _this.urls.get_keywords }, onDone);\n\t};\n\n\tvar getTags = function(onDone){\n\t\tsendRequest({ url: _this.urls.get_tags }), onDone;\n\t};\n\n\tvar getUsertags = function(onDone){\n\t\tsendRequest({ url: _this.urls.get_usertags }, onDone);\n\t};\n\n\tvar getNeighbors = function(onDone){\n\t\tsendRequest({ url: _this.urls.get_neighbors }, onDone);\n\t};\n\n\tvar postUrank = function(url, data, onDone){\n\t\tconsole.log('DataConnector: Start request --> ' + data.operation);\n\t\tsendRequest({ \n\t\t\t'type': 'POST',\n\t\t\t'url': url, \n\t\t\t'data':  JSON.stringify(data),\n\t\t\t'contentType': 'application/json; charset=utf-8'\n\t\t}, onDone);\n\t}\n\n\tvar updateRanking = function(params, onDone) {\n\t\tvar url = this.urls.urank || this.urls.update_ranking;\n\t\tvar data = $.extend(true, { 'operation': 'update' }, params);\n\t\tpostUrank(url, data, onDone);\n\t};\n\n\tvar clearRanking = function(onDone) {\n\t\tvar url = this.urls.urank || this.urls.clear_ranking;\n\t\tvar data = { 'operation': 'clear' };\n\t\tpostUrank(url, data, onDone);\n\t};\n\n\tvar showMoreRanking = function(onDone){\n\t\tvar url = this.urls.urank || this.urls.show_more_ranking;\n\t\tvar data = { 'operation': 'show_more' };\n\t\tpostUrank(url, done, onDone);\n\t};\n\n\tvar getDocumentDetails = function(params, onDone){\n\t\tvar url = this.urls.urank || this.urls.get_document_details;\n\t\tvar data = $.extend(true, { 'operation': 'get_document_details' }, params);\n\t\tpostUrank(url, data, onDone);\n\t};\n\n\n\tDataConnector.prototype = {\n\t\tgetData: getData,\n\t\tgetKeywords: getKeywords,\n\t\tgetTags: getTags,\n\t\tgetUsertags: getUsertags,\n\t\tgetNeighbors: getNeighbors,\n\t\tupdateRanking: updateRanking,\n\t\tclearRanking, clearRanking,\n\t\tshowMoreRanking : showMoreRanking,\n\t\tgetDocumentDetails: getDocumentDetails\n\t};\n\n\treturn DataConnector;\n\n})()\n\n\nmodule.exports = DataConnector;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/model/dataConnector.js\n// module id = 11\n// module chunks = 0 1 2","\nvar KeywordExtractor = (function(){\n\n    var _this,\n        s = {},\n        stemmer, tokenizer, nounInflector, tfidf, stopWords, pos, lexer, tagger,\n        POS = {\n            NN: 'NN',           // singular noun\n            NNS: 'NNS',         // plural noun\n            NNP: 'NNP',         // proper noun\n            JJ: 'JJ'            // adjective\n        };\n\n    //  CONSTRUCTOR\n    function KeywordExtractor(options) {\n        s = $.extend(true, {\n            minDocFrequency: 2,\n            minRepetitionsInDocument: 1,\n            maxKeywordDistance: 5,\n            minRepetitionsProxKeywords: 4\n        }, options);\n        _this = this;\n        this.collection = [];\n        this.documentKeywords = [];\n        this.collectionKeywords = [];\n        this.collectionKeywordsDict = {};\n\n        stemmer = natural.PorterStemmer; //natural.LancasterStemmer;\n        stemmer.attach();\n        tokenizer = new natural.WordTokenizer;\n        nounInflector = new natural.NounInflector();\n        nounInflector.attach();\n        //tfidf = new natural.TfIdf(),\n        stopWords = natural.stopwords;\n        pos = new Pos();\n        lexer = new pos.Lexer();\n        tagger = new pos.Tagger();\n    }\n\n\n/************************************************************************************************************************************\n*\n*   PRIVATE METHODS\n*\n************************************************************************************************************************************/\n\n\n\n    var extractDocumentKeywords = function(collection) {\n\n        //POS tagging\n        collection.forEach(function(d, i) {\n            d.taggedWords = tagger.tag(lexer.lex(d.text));\n        });\n\n        // Find out which adjectives are potentially important and worth keeping\n        var keyAdjectives = getKeyAdjectives(collection);\n\n        // Create each item's document to be processed by tf*idf\n        collection.forEach(function(d) {\n            d.tokens = getFilteredTokens(d.taggedWords, keyAdjectives);                                       // d.tokens contains raw nouns and important adjectives\n            tfidf.addDocument(d.tokens.map(function(term){ return term.stem(); }).join(' '));                 // argument = string of stemmed terms in document array\n        });\n\n        // Save keywords for each document\n        var documentKeywords = [];\n        collection.forEach(function(d, i){\n            documentKeywords.push(getDocumentKeywords(i));\n        });\n\n        return documentKeywords;\n    };\n\n\n\n    var getKeyAdjectives = function(_collection) {\n\n        var candidateAdjectives = [],\n            keyAdjectives = [];\n\n        _collection.forEach(function(d, i) {\n            // Find out which adjectives are potentially important and worth keeping\n            d.taggedWords.forEach(function(tw){\n                if(tw[1] == 'JJ'){\n                    var adjIndex = _.findIndex(candidateAdjectives, function(ca){ return ca.adj === tw[0].toLowerCase() });\n                    if(adjIndex == -1)\n                        candidateAdjectives.push({ 'adj': tw[0].toLowerCase(), 'count': 1 });\n                    else\n                        candidateAdjectives[adjIndex].count++;\n                }\n            });\n        });\n\n        candidateAdjectives.forEach(function(ca){\n            if(ca.count >= parseInt(_collection.length * 0.25))\n                keyAdjectives.push(ca.adj);\n        });\n        return keyAdjectives;\n    }\n\n\n    // Filter out meaningless words, keeping only nouns (plurals are singularized) and key adjectives\n    var getFilteredTokens = function(taggedWords, keyAdjectives) {\n        var filteredTerms = [];\n        taggedWords.forEach(function(tw){\n            switch(tw[1]){\n                case POS.NN:          // singular noun\n                    tw[0] = (tw[0].isAllUpperCase()) ? tw[0] : tw[0].toLowerCase();\n                    filteredTerms.push(tw[0]); break;\n                case POS.NNS:         // plural noun\n                    filteredTerms.push(tw[0].toLowerCase().singularizeNoun());\n                    break;\n                case POS.NNP:         // proper noun\n                    tw[0] = (tagger.wordInLexicon(tw[0].toLowerCase())) ? tw[0].toLowerCase().singularizeNoun() : tw[0];\n                    filteredTerms.push(tw[0]); break;\n                case POS.JJ:\n                    if(keyAdjectives.indexOf(tw[0]) > -1)\n                        filteredTerms.push(tw[0]); break;\n            }\n        });\n        return filteredTerms;\n    }\n\n\n    var getDocumentKeywords = function(dIndex) {\n        var docKeywords = {};\n        // console.log('index = ' + dIndex);\n        tfidf.listTerms(dIndex).forEach(function(item){\n            if( item.term.toUpperCase().includes('ERROR')) {\n                console.log('term =' + item.term);\n            }\n            if(isNaN(item.term) && parseFloat(item.tfidf) > 0 ) {\n                docKeywords[item.term] = item.tfidf;\n            }\n        });\n\n        // var words = Object.keys(docKeywords).map(function(key){ return key; });\n        // console.log(words.join(' -- '));\n        return docKeywords;\n    }\n\n\n\n\n    /////////////////////////////////////////////////////////////////////////////\n\n    var extractCollectionKeywords = function(collection, documentKeywords, minDocFrequency) {\n\n        minDocFrequency = minDocFrequency ? minDocFrequency : s.minDocFrequency;\n        var keywordDict = getKeywordDictionary(collection, documentKeywords, minDocFrequency);\n\n        // get keyword variations (actual terms that match the same stem)\n        collection.forEach(function(d){\n            d.tokens.forEach(function(token){\n                var stem = token.stem();\n                if(keywordDict[stem] && stopWords.indexOf(token.toLowerCase()) == -1)\n                    keywordDict[stem].variations[token] =\n                        keywordDict[stem].variations[token] ? keywordDict[stem].variations[token] + 1 : 1;\n            });\n        });\n\n        // compute keywords in proximity\n        keywordDict = computeKeywordsInProximity(collection, keywordDict);\n        var collectionKeywords = [];\n\n        var cleanKeywordDict = {};\n        _.keys(keywordDict).forEach(function(kw, i) {\n            kw.num_keyphrases = Object.keys(kw.keywordsInProximity).length;\n            // get human-readable term for each stem key in the dictionary\n            var kw_term = getRepresentativeTerm(keywordDict[kw]);\n\n            if(kw_term !== 'ERROR') {\n                // Copy to clean dict only if rep. term isn't ERROR and assign the term to entry in clean dict\n                cleanKeywordDict[kw] = keywordDict[kw];\n                cleanKeywordDict[kw].term = kw_term;\n\n                // Put keywords in proximity in sorted array\n                var proxKeywords = [];\n                _.keys(cleanKeywordDict[kw].keywordsInProximity).forEach(function(proxKeyword){\n                    var proxKeywordsRepetitions = cleanKeywordDict[kw].keywordsInProximity[proxKeyword];\n                    if(proxKeywordsRepetitions >= s.minRepetitionsProxKeywords)\n                        proxKeywords.push({ stem: proxKeyword, count: proxKeywordsRepetitions });\n                });\n                cleanKeywordDict[kw].keywordsInProximity = proxKeywords.sort(function(proxK1, proxK2){\n                    if(proxK1.count < proxK2.count) return 1;\n                    if(proxK1.count > proxK2.count) return -1;\n                    return 0;\n                });\n\n                // store each key-value in an array\n                collectionKeywords.push(cleanKeywordDict[kw]);\n            }\n        });\n        keywordDict = $.extend(true, {}, cleanKeywordDict);\n\n        // sort keywords in array by document frequency\n        collectionKeywords = collectionKeywords.sort(function(k1, k2){\n                if(k1.df < k2.df) return 1;\n                if(k1.df > k2.df) return -1;\n                return 0;\n            });\n        collectionKeywords.forEach(function(k, i){\n            keywordDict[k.stem].index = i;\n        });\n\n        return { array: collectionKeywords, dict: keywordDict };\n    };\n\n\n\n    var getKeywordDictionary = function(_collection, _documentKeywords, _minDocFrequency) {\n\n        var keywordDict = {};\n        _documentKeywords.forEach(function(docKeywords, i){\n\n            _.keys(docKeywords).forEach(function(stemmedTerm){\n                if(!keywordDict[stemmedTerm]) {\n                    keywordDict[stemmedTerm] = {\n                        stem: stemmedTerm,\n                        term: '',\n                        df: 1,\n                        num_keyphrases: 0,\n                        variations: {},\n                        inDocument : [_collection[i].id],\n                        keywordsInProximity: {}\n                    };\n                }\n                else {\n                    keywordDict[stemmedTerm].df++;\n                    keywordDict[stemmedTerm].inDocument.push(_collection[i].id);\n                }\n            });\n        });\n\n        _.keys(keywordDict).forEach(function(keyword){\n            if(keywordDict[keyword].df < _minDocFrequency)\n                delete keywordDict[keyword];\n        });\n        return keywordDict;\n    };\n\n\n    var computeKeywordsInProximity = function(_collection, _keywordDict) {\n        _collection.forEach(function(d){\n            d.tokens.forEach(function(token, i, tokens){\n\n                var current = token.stem();\n                if(_keywordDict[current]) {   // current word is keyword\n\n                    for(var j=i-s.maxKeywordDistance; j <= i+s.maxKeywordDistance; j++){\n                        var prox = tokens[j] ? tokens[j].stem() : undefined;\n\n                        if(_keywordDict[prox] && current != prox) {\n                            //var proxStem = prox.stem();\n                            _keywordDict[current].keywordsInProximity[prox] = _keywordDict[current].keywordsInProximity[prox] ? _keywordDict[current].keywordsInProximity[prox] + 1 : 1;\n                        }\n                    }\n                }\n            });\n        });\n        return _keywordDict;\n    };\n\n\n    var getRepresentativeTerm = function(k){\n\n        var keys = _.keys(k.variations);\n\n        if(keys.length == 0)\n            return 'ERROR';\n\n        // Only one variations\n        if(keys.length == 1)\n            return keys[0];\n\n        // 2 variations, one in lower case and the other starting in uppercase --> return in lower case\n        if(keys.length == 2 && !keys[0].isAllUpperCase() && !keys[1].isAllUpperCase() && keys[0].toLowerCase() === keys[1].toLowerCase())\n            return keys[0].toLowerCase();\n\n        // One variation is repeated >= 75%\n        var repetitions = 0;\n        for(var i = 0; i < keys.length; ++i)\n            repetitions += k.variations[keys[i]];\n\n        for(var i = 0; i < keys.length; ++i)\n            if(k.variations[keys[i]] >= parseInt(repetitions * 0.75))\n                return keys[i];\n\n        // One variation end in 'ion', 'ment', 'ism' or 'ty'\n        for(var i = 0; i < keys.length; ++i)\n            if(keys[i].match(/ion$/) || keys[i].match(/ment$/) || keys[i].match(/ism$/) || keys[i].match(/ty$/))\n                return keys[i].toLowerCase();\n\n        // One variation matches keyword stem\n        if(k.variations[k.stem])\n            return k.stem;\n\n        // Pick shortest variation\n        var shortestTerm = keys[0];\n        for(var i = 1; i < keys.length; i++){\n            if(keys[i].length < shortestTerm.length)\n                shortestTerm = keys[i];\n        }\n        return shortestTerm.toLowerCase();\n    };\n\n\n\n/********************************************************************************************************************************************\n*\n*   PROTOTYPE\n*\n*********************************************************************************************************************************************/\n\n    KeywordExtractor.prototype = {\n        addDocument: function(document, id) {\n            document = (!Array.isArray(document)) ? document : document.join(' ');\n            id = id || this.collection.length;\n            this.collection.push({ id: id, text: document });\n        },\n        processCollection: function() {\n            tfidf = new natural.TfIdf();\n            var timestamp = $.now();\n            this.documentKeywords = extractDocumentKeywords(this.collection);\n            var collectionKeywords = extractCollectionKeywords(this.collection, this.documentKeywords);\n            this.collectionKeywords = collectionKeywords.array;\n            this.collectionKeywordsDict = collectionKeywords.dict;\n\n            var miliseconds = $.now() - timestamp;\n            var seconds = parseInt(miliseconds / 1000);\n            console.log('Keyword extraction finished in ' + seconds + ' seconds, ' + miliseconds%1000 + ' miliseconds (=' + miliseconds + ' ms)');\n        },\n        listDocumentKeywords: function(index) {\n            return this.documentKeywords[index];\n        },\n        getCollectionKeywords: function() {\n            return this.collectionKeywords;\n        },\n        getCollectionKeywordsDictionary: function() {\n            return this.collectionKeywordsDict;\n        },\n        clear: function() {\n            tfidf = null;\n            this.collection = [];\n            this.documentKeywords = [];\n            this.collectionKeywords = [];\n            this.collectionKeywordsDict = {};\n        }\n    };\n\n    return KeywordExtractor;\n})();\n\n\nmodule.exports = KeywordExtractor;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/model/keywordExtractor.js\n// module id = 12\n// module chunks = 0 1 2","var Globals = require('../config/globals');\nvar RSContent = require('./RSContent');\n\n\nvar RankingModel = (function() {\n    'use strict';\n\n\n    var _this;\n    function RankingModel(config, dataConn){\n        this.conf = config;\n        this.dataConn = dataConn || null;\n        this.clear();\n        _this = this;\n    }\n\n\n    /*******************************************\n    * Functions\n    *******************************************/\n    var assignRankingPositionsAndShift = function(_data, _score){\n        var currentScore = Number.MAX_VALUE;\n        var currentPos = 1;\n        var itemsInCurrentPos = 0;\n        _data.forEach(function(d, i){\n            if(d.ranking[_score] > 0){\n                if( d.ranking[_score] < currentScore ){\n                    currentPos = currentPos + itemsInCurrentPos;\n                    currentScore = d.ranking[_score];\n                    itemsInCurrentPos = 1;\n                } else{\n                    itemsInCurrentPos++;\n                }\n                d.ranking.pos = currentPos;\n            } else{\n                d.ranking.pos = 0;\n            }\n            // shift computation\n            d.ranking.posChanged = d.ranking.prev_pos > 0 ? d.ranking.prev_pos - d.ranking.pos : 1000;\n        });\n        return _data;\n    };\n\n\n    /**\n     *\tCreates the ranking items with default values and calculates the weighted score for each selected keyword (tags in tag box)\n     * */\n     // FIX!!!!!!!!!!\n    var updateRanking =  function(oldRanking, query, rs_conf){\n        var cbWeight = rs_conf.CB.weight; // (score == RANKING_MODE.overall.attr) ? opt.rWeight : 1;\n        var tuWeight = rs_conf.TU.weight; // (score == RANKING_MODE.overall.attr) ? (1- opt.rWeight) : 1;\n        var score =  rs_conf[rs_conf.rankBy].name;\n        var newRanking = oldRanking.slice();\n        // MAKE ONE LOOP\n        newRanking.forEach(function(d){ d.ranking.prev_pos = d.ranking.pos; });\n        if(cbWeight)            \n            newRanking = RSContent.getCBScores({ data: newRanking, keywords: opt.query, options: { rWeight: cbWeight } });\n        // if(tuWeight)\n        //     ranking = _this.tuRS.getTagUserScores({ user: opt.user, keywords: opt.query, data: ranking, options: { rWeight: tuWeight } });\n        newRanking.forEach(function(d){\n            d.ranking.total_score = 0;\n            if(cbWeight)\n                d.ranking.total_score += d.ranking.cb_score;\n            // if(tuWeight)\n            //     d.ranking.total_score += d.ranking.tu_score;\n        });\n\n        var secScore = undefined;\n        if(score === 'CB' && tuWeight) secScore = rs_conf.TU.name;\n        if(score === 'TU' && cbWeight) secScore = rs_conf.CB.name;\n        newRanking = newRanking.sort(function(d1, d2){\n            if(d1.ranking[score] > d2.ranking[score]) return -1;\n            if(d1.ranking[score] < d2.ranking[score]) return 1;\n            if(d1.ranking[secScore] && d1.ranking[secScore] > d2.ranking[secScore]) return -1;\n            if(d1.ranking[secScore] && d1.ranking[secScore] < d2.ranking[secScore]) return 1;\n            return 0;\n        });\n        newRanking = assignRankingPositionsAndShift(newRanking, score);\n        return newRanking;\n    };\n\n\n\n    var updateStatus =  function(ranking, curStatus) {\n\n        // if(_this.ranking.length === 0)\n        //     return Globals.RANKING_STATUS.no_ranking;\n\n        // if(_this.status === Globals.RANKING_STATUS.no_ranking)\n        //     return Globals.RANKING_STATUS.new;\n\n        // for(var i in _this.ranking) {\n        //     if(_this.ranking[i].ranking.posChanged > 0)\n        //         return Globals.RANKING_STATUS.update;\n        // }\n        if(ranking.length === 0)\n            return Globals.RANKING_STATUS.no_ranking;\n\n        if(curStatus === Globals.RANKING_STATUS.no_ranking)\n            return Globals.RANKING_STATUS.new;\n\n        for(var i in ranking) {\n            if(ranking[i].ranking.pos_changed > 0)\n                return Globals.RANKING_STATUS.update;\n        }\n        return Globals.RANKING_STATUS.unchanged;\n    };\n\n\n\n    var _setData = function(data) {\n        if(this.useLocal) {\n            this.status = Globals.RANKING_STATUS.no_ranking;\n            this.data = data.slice() || [];\n            this.ranking = this.data.slice();\n            this.ranking.forEach(function(d){\n                d.ranking = {\n                    pos: 0,\n                    pos_changed: 0,\n                    prev_pos: 0,\n                    total_core: 0,\n                    cb_score: 0,\n                    cb_max_score: 0,\n                    cb_details: [],\n                    tu_score: 0,\n                    tu_details: {}\n                };\n            });\n        }\n        return this;\n    };\n\n\n\n    var _update = function(params, onDone) {\n        // CONF\n        // rs : [\n        //     {\n        //         name: 'CB',\n        //         active: true,\n        //         weight : 0.5,\n        //         attr : 'keywords'\n        //     },\n        //     {\n        //         name: 'CF',\n        //         active: true,\n        //         weight : 0.5,\n        //         attr : 'neighbors'\n        //     }\n        // ],\n        // rankBy : 'CB'\n\n        // this.query = params.query;\n        this.features = params.features;\n        this.conf = params.rs_conf;\n        this.rankBy = this.conf.rankBy;\n\n        var onRankingUpdated = function(ranking) {\n            _this.ranking = ranking;\n            _this.status = updateStatus(ranking, _this.status);\n            // onDone(this.ranking, _this.status);\n            onDone(_this.ranking, _this.status);\n        };\n\n        if(this.conf.useLocal) {\n            // sync\n            // var ranking = this.query.length ? updateRanking(this.ranking, params) : [];\n            var ranking = this.features.keywords.length ? updateRanking(this.ranking, params) : [];\n            onRankingUpdated(ranking);\n        } else { \n            // async\n            _this.dataConn.updateRanking(params, function(ranking) {\n                onRankingUpdated(ranking);\n            });    \n        }\n    };\n\n\n    var _reset = function() {\n        this.previousRanking = [];\n        this.ranking = [];\n        this.status = updateStatus();\n        this.query = [];\n        return this;\n    };\n\n\n\n    var _clear = function() {        \n        this.ranking = [];\n        this.data = [];\n        this.query = [];\n        this.status = Globals.RANKING_STATUS.no_ranking;\n        // if(!this.useLocal)\n        //     this.dataConn.clearRanking();\n        return this;\n    };\n\n\n\n\n/****************************************************************************************************\n *\n *   RankingModel Prototype\n *\n ****************************************************************************************************/\n    RankingModel.prototype = {\n    //return {\n\n        setData: _setData,\n\n        update: _update,\n\n        reset: _reset,\n\n        clear: _clear,\n\n        getRanking: function() {\n            // return this.ranking;\n            return this.ranking;\n        },\n\n        getStatus: function() {\n            // return this.status;\n            return this.status;\n        },\n\n        getOriginalData: function() {\n            // return this.data;\n            return this.data;\n        },\n\n        getQuery: function() {\n            // return this.query;\n            return this.query;\n        },\n\n        getRankingDict: function(){\n            var dict = {};\n            // this.ranking.forEach(function(d){ dict[d.id] = d; });\n            this.ranking.forEach(function(d){ dict[d.id] = d; });\n            return dict;\n        },\n\n        getMaxTagFrequency: function(){\n            return this.tuRS.getmaxSingleTagFrequency();\n        },\n\n        getActualIndex: function(index){\n            // if(this.status == Globals.RANKING_STATUS.no_ranking)\n            //     return index;\n            // return this.ranking[index].originalIndex;\n            if(this.status == Globals.RANKING_STATUS.no_ranking)\n                return index;\n            return this.ranking[index].originalIndex;\n        },\n        getDocumentById: function(id) {\n            var getId = function(d){ return d.id === id };\n            // return this.status === Globals.RANKING_STATUS.no_ranking ? this.data[_.findIndex(this.data, getId)] : this.ranking[_.findIndex(this.ranking, getId)];\n            return this.status === Globals.RANKING_STATUS.no_ranking ? this.data[_.findIndex(this.data, getId)] : this.ranking[_.findIndex(this.ranking, getId)];\n        },\n        getDocumentByIndex: function(index) {\n            // return this.status === Globals.RANKING_STATUS.no_ranking ? this.data[index] : this.ranking[index];\n            return this.status === Globals.RANKING_STATUS.no_ranking ? this.data[index] : this.ranking[index];\n        }\n    };\n\n    return RankingModel;\n})();\n\n\nmodule.exports = RankingModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/model/rankingModel.js\n// module id = 13\n// module chunks = 0 1 2","var Globals = require('../config/globals');\n\nvar ContentList = (function() {\n\n    var _this;\n    // Settings\n    var s = {};\n    // Classes\n    var contentListClass = 'urank-list',\n        hiddenScrollbarClass = 'urank-hidden-scrollbar',\n        hiddenScrollbarInnerClass = 'urank-hidden-scrollbar-inner',\n        listContainerClass = 'urank-list-container',\n        ulClass = 'urank-list-ul',\n        ulPaddingBottomclass = 'urank-list-ul-padding-bottom',\n        liClass = 'urank-list-li',\n        liLightBackgroundClass = 'urank-list-li-lightbackground',\n        liDarkBackgroundClass = 'urank-list-li-darkbackground',\n        liUnrankedClass = 'urank-list-li-unranked',\n        liMovingUpClass = 'urank-list-li-movingup',\n        liMovingDownClass = 'urank-list-li-movingdown',\n        liNotMovingClass = 'urank-list-li-notmoving',\n        liRankingContainerClass = 'urank-list-li-ranking-container',\n        rankingPosClass = 'urank-list-li-ranking-pos',\n        rankingPosMovedClass = 'urank-list-li-ranking-posmoved',\n        liTitleContainerClass = 'urank-list-li-title-container',\n        liTitleClass = 'urank-list-li-title',\n        liButtonsContainerClass = 'urank-list-li-buttons-container',\n        faviconClass = 'urank-list-li-button-favicon',\n        faviconDefaultClass = 'urank-list-li-button-favicon-default',\n        watchiconClass = 'urank-list-li-button-watchicon',\n        watchiconDefaultClass = 'urank-list-li-button-watchicon-default',\n        onClass = 'on',\n        offClass = 'off',\n        selectedClass = 'selected',\n        dimmedClass = 'dimmed',\n        hoveredClass = 'hovered',\n        watchedClass = 'watched',\n        // default-style classes\n        ulClassDefault = ulClass + '-default',\n        liClassDefault = liClass + '-default',\n        // header classes\n        headerClass = 'urank-list-header',\n        headerPosAndshiftClass = 'urank-list-header-pos-and-shift',\n        headerTitleClass = 'urank-list-header-title',\n        headerStyleClass = 'urank-header-style';\n\n    // Ids\n    var liItem = '#urank-list-li-';\n\n    var urankIdAttr = 'urank-id',\n        originalIndex = 'original-index';\n    // Helper\n    var $root = $(''), $header = $(''), $listContainer = $(''), $scrollable = $(''), $ul = $('');\n\n    var onScroll = function(event){\n        event.stopPropagation();\n        s.cb.onScroll.call(this, _this, $(this).scrollTop());\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Constructor\n\n    function ContentList(params) {\n        _this = this;\n        s = $.extend({\n            root: '',    \n            attr : {},\n            options : {},\n            cb : {\n                onItemClicked: function(documentId, index){},\n                onItemMouseEnter: function(documentId, index){},\n                onItemMouseLeave: function(documentId, index){},\n                onFaviconClicked: function(documentId, indext){},\n                onWatchiconClicked: function(documentId, index){},\n                onScroll: function(caller, scrollTop){},\n                onRatingClicked: function(documentId, index, rating){}\n            }\n        }, params);\n\n        this.data = [];\n        this.selectedKeywords = [];\n        this.multipleHighlightMode = false;\n    }\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Internal functions\n\n    var bindEventHandlers = function($li, id, index) {\n        var onLiClick = function(event){\n            event.stopPropagation();\n            hideUnrankedListItems();\n            if(!$(this).hasClass(liUnrankedClass))\n                s.cb.onItemClicked.call(this, id, index);\n        };\n        var onLiMouseEnter = function(event){\n            event.stopPropagation(); s.cb.onItemMouseEnter.call(this, id, index);\n        };\n        var onLiMouseLeave = function(event){\n            event.stopPropagation(); s.cb.onItemMouseLeave.call(this, id, index);\n        };\n        var onWatchiconClick = function(event){\n            event.stopPropagation();\n            s.cb.onWatchiconClicked.call(this, id, index);\n        };\n        var onFaviconClick = function(event){\n            event.stopPropagation();\n            // update current state. if class 'on' then new state is 'off'. Class will be toggled later\n            state = $(this).hasClass(onClass) ? 'off' : 'on';\n            // s.cb.onFaviconClicked.call(this, $li.attr(urankIdAttr), $li.attr(originalIndex), state);\n            console.log('Index in content list = ' + index);\n            s.cb.onFaviconClicked.call(this, id, index, state);\n        };\n\n        $li.off({\n            click: onLiClick,\n            mouseenter: onLiMouseEnter,\n            mouseleave: onLiMouseLeave\n        }).on({\n            click: onLiClick,\n            mouseenter: onLiMouseEnter,\n            mouseleave: onLiMouseLeave\n        });\n        // Fav Icon Event\n        $li.find('.'+faviconClass).off().on('click', onFaviconClick);\n        // Watch Icon Event\n        $li.find('.'+watchiconClass).off().on('click', onWatchiconClick);\n    };\n\n\n    var formatTitles = function(colorScale) {\n        _this.data.forEach(function(d, i){\n            var title = d[s.attr.title];\n            title = (title.length > 80) ? (title.substring(0, 80) + '...') : title;\n            formattedTitle = (_this.selectedKeywords.length == 0) ? title : getStyledText(title, _this.selectedKeywords, colorScale);\n            $('.'+liClass+'['+urankIdAttr+'=\"'+d[s.attr.id]+'\"]').find('.'+liTitleClass).html(formattedTitle);\n        });\n    }\n\n\n    var updateLiBackground = function(){\n        $('.'+liClass).removeClass(liLightBackgroundClass).removeClass(liDarkBackgroundClass).removeClass(liUnrankedClass);\n\n        _this.data.forEach(function(d, i) {\n            var backgroundClass = (i % 2 == 0) ? liLightBackgroundClass : liDarkBackgroundClass;\n            $('.'+liClass+'['+urankIdAttr+'=\"'+d[s.attr.id]+'\"]').addClass(backgroundClass);\n        });\n    };\n\n\n    // var getColor = function(d) {\n    //     if(d.ranking.pos_changed > 0) return \"rgba(0, 200, 0, 0.8)\";\n    //     if(d.ranking.pos_changed < 0) return \"rgba(250, 0, 0, 0.8)\";\n    //     return \"rgba(128, 128, 128, 0.8)\";\n    // };\n\n    // var getPosMoved = function(d) {\n    //     if(d.ranking.pos_changed == 1000) return Globals.STR.JUST_RANKED;\n    //     if(d.ranking.pos_changed > 0) return \"+\" + d.ranking.pos_changed;\n    //     if(d.ranking.pos_changed < 0) return d.ranking.pos_changed;\n    //     return \"=\";\n    // };\n\n\n\n    var showRankingPositions = function() {\n\n        var color = function(d) {\n            if(d.ranking.pos_changed > 0) return \"rgba(0, 200, 0, 0.8)\";\n            if(d.ranking.pos_changed < 0) return \"rgba(250, 0, 0, 0.8)\";\n            return \"rgba(128, 128, 128, 0.8)\";\n        };\n\n        var posMoved = function(d) {\n            if(d.ranking.pos_changed == 1000) return Globals.STR.JUST_RANKED;\n            if(d.ranking.pos_changed > 0) return \"+\" + d.ranking.pos_changed;\n            if(d.ranking.pos_changed < 0) return d.ranking.pos_changed;\n            return \"=\";\n        };\n\n        _this.data.forEach(function(d, i){\n                // if(d.ranking.overall.score ){\n                if(d.ranking.pos){\n                    try {\n                    //var rankingDiv = $(liItem + '' + d[s.attr.id]).find('.'+liRankingContainerClass);\n                    var rankingDiv = $('.'+liClass+'['+urankIdAttr+'=\"'+d[s.attr.id]+'\"]').find('.'+liRankingContainerClass);\n                    rankingDiv.css('visibility', 'visible');\n                    rankingDiv.find('.'+rankingPosClass).text(d.ranking.pos);\n                    rankingDiv.find('.'+rankingPosMovedClass).css('color', color(d)).text(posMoved(d));    \n                } catch(e){\n                    console.log(e)\n                }\n                \n            }\n        });\n    };\n\n\n    var hideUnrankedListItems = function() {\n\n//        if(_this.status !== Globals.RANKING_STATUS.no_ranking) {\n//            _this.data.forEach(function(d){\n//                var display = d.ranking.total_score > 0 ? '' : 'none';\n//                //$(liItem + '' + d[s.attr.id]).css('display', display);\n//                $('.'+liClass+'['+urankIdAttr+'=\"'+d[s.attr.id]+'\"]').css('display', display);\n//            });\n//            $ul.addClass(ulPaddingBottomclass);\n//        }\n        _this.multipleHighlightMode = false;\n    };\n\n\n    var removeMovingStyle = function() {\n        $('.'+liClass).removeClass(liMovingUpClass).removeClass(liMovingDownClass).removeClass(liNotMovingClass);\n    };\n\n\n    var stopAnimation = function(){\n        $('.'+liClass).stop(true, true);\n        removeMovingStyle();\n        //if(_this.animationTimeout) clearTimeout(_this.animationTimeout);\n    };\n\n\n\n    var sortList = function(){\n\n        var liHtml = [];\n        _this.data.forEach(function(d, i){\n            var $current = $('.'+liClass+'['+urankIdAttr+'=\"'+d[s.attr.id]+'\"]').css('top', '');\n            var $clon = $current.clone(true);\n            liHtml.push($clon);\n            $current.remove();\n        });\n\n        $ul.empty();\n        liHtml.forEach(function($li){\n            $ul.append($li);\n            var id = $li.attr(urankIdAttr),\n                index = parseInt($li.attr(originalIndex));\n            bindEventHandlers($li, id, index);\n        });\n    };\n\n\n    var animateAccordionEffect = function() {\n        var timeLapse = 50;\n        var easing = 'swing';\n\n        $('.'+liClass).each(function(i, item){\n            var $item = $(item);\n            var shift = (i+1) * 5;\n            var duration = timeLapse * (i+1);\n\n            $item.addClass(liMovingUpClass);\n            if(i < 40) {\n                $item.animate({ top: shift }, 0, easing).queue(function(){\n                    $(this).animate({ top: 0 }, duration, easing)\n                }).queue(function(){\n                    $(this).css('top', '');\n                }).dequeue();\n            }\n        });\n    };\n\n\n\n    var animateResortEffect = function() {\n        var duration = 1000;\n        var easing = 'swing';\n        var acumHeight = 0;\n        var listTop = $ul.position().top;        \n        var itemHeight = $ul.find(':first-child').fullHeight();\n        var options = [];\n\n        // Compute shifts\n        _this.data.forEach(function(d, i) { \n            var shift = 0;\n            // if((_this.status === Globals.RANKING_STATUS.new && d.ranking.pos > 0 && d.ranking.pos < 40) ||\n            //    (d.ranking.pos > 0 && d.ranking.pos < 30) ||\n            //    (d.ranking.prev_pos > 0 && d.ranking.prev_pos < 30)) {\n            //     shift = listTop + (d.ranking.prev_pos - d.ranking.pos) * itemHeight - curTop;\n            // }\n            if(d.ranking.pos > 0 && d.ranking.pos < 30) {\n                var curTop = $('.'+liClass+'['+urankIdAttr+'=\"'+d[s.attr.id]+'\"]').position().top;\n                var prevTop = listTop + (d.ranking.prev_pos - 1) * itemHeight;                \n                shift = prevTop - curTop;\n            } \n            options.push({\n                shift: shift,\n                movingClass: (d.ranking.pos_changed > 0) ? liMovingUpClass : \n                    ((d.ranking.pos_changed < 0) ? liMovingDownClass : '')\n            });\n        });\n\n        //  Animate \n        $('.'+liClass).each(function(i, item){\n            var $item = $(item);\n            $item.addClass(options[i].movingClass);\n            if(options[i].shift !== 0) {\n                $item.css('top', options[i].shift +'px')\n                .animate({ top: '0px' }, duration, easing, function(){\n                    $(this).css('top', '');\n                });\n            }\n        });\n    };\n\n\n    var animateUnchangedEffect = function () {\n        var duration = 1000;\n        var easing = 'linear';\n\n        _this.data.forEach(function(d, i) {\n            //var $item = $(liItem +''+ d[s.attr.id]);\n            var $item = $('.'+liClass+'['+urankIdAttr+'=\"'+d[s.attr.id]+'\"]');\n            var startDelay = (i+1) * 30;\n\n            setTimeout(function() {\n                $item.addClass(liNotMovingClass);\n                // item.removeClass(liNotMovingClass, duration, easing);\n            }, startDelay);\n        });\n    };\n\n\n\n    var buildCustomList = function() {\n\n        var c = {\n            root: s.options.customOptions.selectors.root,\n            ul: s.options.customOptions.selectors.ul,\n            liClass: s.options.customOptions.selectors.liClass,\n            liTitle: s.options.customOptions.selectors.liTitle,\n            liRankingContainer: s.options.customOptions.selectors.liRankingContainer,\n            watchicon: s.options.customOptions.selectors.watchicon,\n            favicon: s.options.customOptions.selectors.favicon,\n            liHoverClass: s.options.customOptions.classes.liHoverClass,\n            liLightBackgroundClass: s.options.customOptions.classes.liLightBackgroundClass,\n            liDarkBackgroundClass: s.options.customOptions.classes.liDarkBackgroundClass,\n            hideScrollbar: s.options.customOptions.misc.hideScrollbar\n        };\n\n        $ul = $(c.ul).addClass(ulClass);\n        $root = $(c.root);\n\n        if(c.hideScrollbar) {\n            var $ulCopy = $ul.clone(true);\n            $root.empty().addClass(hiddenScrollbarClass);\n            $scrollable = $('<div></div>').appendTo($root)\n                .addClass(hiddenScrollbarInnerClass)\n                .on('scroll', onScroll)\n                .append($ulCopy);\n            $ul = $('.'+ulClass);\n        }\n        else {\n            $scrollable = $root;\n        }\n\n        $(c.liClass).each(function(i, li){\n            var $li = $(li),\n                id = _this.data[i][s.attr.id];\n\n            $li.addClass(liClass).attr(urankIdAttr, id);\n            $li.find(c.liTitle).addClass(liTitleClass);\n\n            var $rankingDiv = $li.find(c.liRankingContainer).empty().addClass(liRankingContainerClass).css('visibility', 'hidden');\n            $(\"<div></div>\").appendTo($rankingDiv).addClass(rankingPosClass);\n            $(\"<div></div>\").appendTo($rankingDiv).addClass(rankingPosMovedClass);\n\n            $li.find(c.watchicon).addClass(watchiconClass+' off');\n            $li.find(c.favicon).addClass(faviconClass+' off');\n\n            bindEventHandlers($li, id, i);\n        });\n\n        hoveredClass = c.liHoverClass == '' ? hoveredClass : c.liHoverClass;\n        liLightBackgroundClass = c.liLightBackgroundClass == '' ? liLightBackgroundClass : c.liLightBackgroundClass;\n        liDarkBackgroundClass = c.liDarkBackgroundClass == '' ? liDarkBackgroundClass : c.liDarkBackgroundClass;\n    };\n\n\n    var buildDefaultList = function() {\n\n        $root.find('.'+listContainerClass).remove();\n        $root.find('.'+hiddenScrollbarInnerClass).remove();\n\n        $listContainer = $('<div/>').appendTo($root).addClass(listContainerClass + ' ' + hiddenScrollbarClass);\n        $scrollable = $('<div/>').appendTo($root)\n            .addClass(hiddenScrollbarInnerClass)\n            .on('scroll', onScroll);\n\n        $ul = $('<ul></ul>').appendTo($scrollable).addClass(ulClass +' '+ ulClassDefault);\n\n        _this.data.forEach(function(d, i) {\n            // li element\n            var $li = $('<li></li>', { 'urank-id': d[s.attr.id], 'original-index': d.idx || i }).appendTo($ul).addClass(liClass +' '+ liClassDefault);\n            // ranking section\n            var $rankingDiv = $(\"<div></div>\").appendTo($li).addClass(liRankingContainerClass).css('visibility', 'hidden');\n            $(\"<div></div>\").appendTo($rankingDiv).addClass(rankingPosClass);\n            $(\"<div></div>\").appendTo($rankingDiv).addClass(rankingPosMovedClass);\n            // title section\n            var $titleDiv = $(\"<div></div>\").appendTo($li).addClass(liTitleContainerClass);\n            $('<h3></h3>', { id: 'urank-list-li-title-' + i, class: liTitleClass, html: d[s.attr.title]/*, title: d[s.attr.title] + '\\n' + d.description*/ }).appendTo($titleDiv);\n            // buttons section\n            var $buttonsDiv = $(\"<div></div>\").appendTo($li).addClass(liButtonsContainerClass);\n            $(\"<span>\").appendTo($buttonsDiv).addClass(watchiconClass+' '+watchiconDefaultClass+' '+offClass);\n            var favIconStateClass = d.bookmarked ? onClass : offClass;\n            $(\"<span>\").appendTo($buttonsDiv).addClass(faviconClass+' '+faviconDefaultClass+' '+favIconStateClass);\n            // Subtle animation\n//            $li.animate({ opacity: 0 }, 0)\n//                .queue(function(){\n//                $(this).animate({ opacity: 1 }, (i+1)*100, 'swing')\n//            }).queue(function(){\n//                $(this).css('opacity', '');\n//                bindEventHandlers($li, d[s.attr.id], i);\n//            }).dequeue();\n            $li.hide().fadeIn((i+1)*100);\n            bindEventHandlers($li, d[s.attr.id], i);\n        });\n    };\n\n\n    var buildHeader = function(height){\n\n        $('.'+headerClass).remove();\n        $header = $('<div/>').appendTo($root).addClass(headerClass).css('height', height);\n        var $headerPos = $('<div/>').appendTo($header).addClass(headerPosAndshiftClass + ' ' + headerStyleClass);\n        $('<div/>', { text: 'Position'}).appendTo($headerPos).addClass('label-container');\n\n        var $headerShift = $('<div/>').appendTo($header).addClass(headerPosAndshiftClass + ' ' + headerStyleClass);\n        $('<div/>', { text: 'Shift'}).appendTo($headerShift).addClass('label-container');\n\n        var $headerTitle = $('<div/>').appendTo($header).addClass(headerTitleClass + ' ' + headerStyleClass);\n        $('<p/>', { text: 'Document Titles'}).appendTo($headerTitle);\n    };\n\n\n    var buildEntries = function(data){\n        $ul.empty();\n        data.forEach(function(d, i) {\n            // li element\n            var $li = $('<li></li>', { 'urank-id': d[s.attr.id], 'original-index': i }).appendTo($ul).addClass(liClass +' '+ liClassDefault);\n            // ranking section\n            var $rankingDiv = $(\"<div></div>\").appendTo($li).addClass(liRankingContainerClass).css('visibility', 'hidden');\n            $(\"<div></div>\").appendTo($rankingDiv).addClass(rankingPosClass);\n            $(\"<div></div>\").appendTo($rankingDiv).addClass(rankingPosMovedClass);\n            // title section\n            var $titleDiv = $(\"<div></div>\").appendTo($li).addClass(liTitleContainerClass);\n            $('<h3></h3>', { id: 'urank-list-li-title-' + i, class: liTitleClass, html: d[s.attr.title]/*, title: d[s.attr.title] + '\\n' + d.description*/ }).appendTo($titleDiv);\n            // buttons section\n            var $buttonsDiv = $(\"<div></div>\").appendTo($li).addClass(liButtonsContainerClass);\n            $(\"<span>\").appendTo($buttonsDiv).addClass(watchiconClass+' '+watchiconDefaultClass+' '+offClass);\n            var favIconStateClass = d.bookmarked ? onClass : offClass;\n            $(\"<span>\").appendTo($buttonsDiv).addClass(faviconClass+' '+faviconDefaultClass+' '+favIconStateClass);\n            // $li.hide().fadeIn((i+1)*100);\n            bindEventHandlers($li, d[s.attr.id], i);\n        });\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Prototype methods\n\n    var _build = function(data, headerHeight) {\n        this.originalData = data.slice();\n        this.data = data.slice();\n        this.selectedKeywords = [];\n        this.status = Globals.RANKING_STATUS.no_ranking;\n        this.headerHeight = headerHeight || _this.headerHeight;\n        $root = $(s.root).addClass(contentListClass);\n\n        if(s.options.header)\n            buildHeader(_this.headerHeight);\n\n        if(s.options.custom)\n            buildCustomList();\n        else\n            buildDefaultList();\n\n        formatTitles();\n        updateLiBackground();\n    };\n\n\n\n    /**\n    * @private     * Description\n    * @param {type} data : current ranking\n    * @param {type} status Description\n    */\n    var _update = function(params) {\n\n        this.status = params.status;\n        this.data = params.ranking.length ? params.ranking : this.data;\n        \n        _this.timestamp = $.now();\n        $('.'+liClass).stop(true, true)\n            .removeClass(liMovingUpClass).removeClass(liMovingDownClass).removeClass(liNotMovingClass)  //stop animation\n            .removeClass(selectedClass).removeClass(dimmedClass);                                        // deselect all classes\n\n        //        console.log('Stop Animation');\n        //        stopAnimation();\n        //        console.log('Deselect items');\n        //        this.deselectAllListItems();\n        //        formatTitles(options.colorScale);\n\n        //        console.log('Hide unranked');\n        //        hideUnrankedListItems();\n        var updateFunc = {};\n        updateFunc[Globals.RANKING_STATUS.new] = animateAccordionEffect; //animateResortEffect;\n        updateFunc[Globals.RANKING_STATUS.update] = animateResortEffect;\n        updateFunc[Globals.RANKING_STATUS.unchanged] = animateUnchangedEffect;\n        updateFunc[Globals.RANKING_STATUS.no_ranking] = _this.reset;\n\n        buildEntries(this.data);\n        updateLiBackground();\n        // sortList();\n        console.log(this.status)\n        updateFunc[this.status]();\n        console.log('In update data.length = ' + this.data.length);\n        showRankingPositions();\n        setTimeout(removeMovingStyle, 3000);\n        //  When animations are triggered too fast and they can't finished in order, older timeouts are canceled and only the last one is executed\n        //  (list is resorted according to last ranking state)\n    };\n\n\n\n    var _reset = function() {\n        _this.build(_this.originalData, s.options);\n/*        this.data = _this.originalData.slice();\n        this.selectedKeywords = [];\n        updateLiBackground();\n        sortList();\n        formatTitles();\n        $('.'+liClass).show().find('.'+liRankingContainerClass).css('visibility', 'hidden');\n\n        $ul.removeClass(ulPaddingBottomclass);*/\n    };\n\n\n\n    var _selectListItem = function(id) {\n        stopAnimation();\n        $('.'+liClass+'['+urankIdAttr+'!='+id+']').addClass(dimmedClass);\n        $('.'+liClass+'['+urankIdAttr+'=\"'+id+'\"]').addClass(selectedClass);\n    };\n\n\n    var _deselectAllListItems = function() {\n        $('.'+liClass).removeClass(selectedClass, 1200, 'easeOutCirc').removeClass(dimmedClass);\n    };\n\n\n    // receives actual index\n    var _hover = function(id) {\n        $('.'+liClass+'['+urankIdAttr+'=\"'+id+'\"]').addClass(hoveredClass);\n    };\n\n\n    var _unhover = function(id) {\n        $('.'+liClass+'['+urankIdAttr+'=\"'+id+'\"]').removeClass(hoveredClass);\n    };\n\n\n    var _highlightListItems = function(idArray) {\n        stopAnimation();\n        $('.'+liClass).each(function(i, li){\n            var $li = $(li);\n            if(idArray.indexOf($li.attr(urankIdAttr)) === -1)\n                $li.addClass(dimmedClass);\n//            else {\n//                if(!$li.is(':visible'))\n//                    $li.removeClass(liDarkBackgroundClass).removeClass(liLightBackgroundClass).addClass(liUnrankedClass);\n//                $li.css({ display: '', opacity: ''});\n//            }\n        });\n\n\n\n        $ul.removeClass(ulPaddingBottomclass);\n        _this.multipleHighlightMode = true;\n    };\n\n\n\n    var _clearAllFavicons = function(){\n        $('.'+liClass).find(' .' + faviconClass).removeClass(onClass);//.addClass(offClass);\n    };\n\n\n    var _toggleFavicon = function(id, index, state){\n        //var favIcon = $(liItem + '' + id).find(' .' + faviconClass);\n        var $favIcon = $('.'+liClass+'['+urankIdAttr+'=\"'+id+'\"]').find(' .' + faviconClass);\n        var classToAdd = state === 'on' ? onClass : offClass;\n        var classToRemove = state === 'on' ? offClass : onClass;\n        $favIcon.switchClass(classToRemove, classToAdd);\n\n        if(state === 'on') {\n            // background\n            $bgCover = $('<div/>', { class: 'bg-cover' }).appendTo($('body'));\n            var top = $favIcon.offset().top;\n            var left = $favIcon.offset().left;\n            console.log(top + ' - ' + left);\n            var $rating = $('<div/>', { class: 'tooltip-rating'}).appendTo($('body'));\n            $rating.css({\n                top: (parseInt(top) - 76) + 'px', \n                left: parseInt(left) + 15 + 'px'\n            });\n            // .appendTo($favIcon.parent());\n            $('<div/>', { class: 'rating-message', html: Globals.LEGENDS.rating }).appendTo($rating);\n            var $starContainer = $('<div/>', { class: 'star-container' }).appendTo($rating);\n            // append stars\n            for(i = 1; i <= 5; i++) {\n                var $star = $('<div/>', { class: 'star', id: 'star-'+i, pos: i }).appendTo($starContainer);\n                $star.on({\n                    mouseover: function(evt) {\n                        evt.stopPropagation();\n                        var pos = parseInt($(this).attr('pos'));\n                        for(j=1; j<=pos; j++) {\n                            $('#star-'+j).addClass('hovered');\n                        }\n                    },\n                    mouseleave: function(evt) {\n                        evt.stopPropagation();\n                        $('.star').removeClass('hovered');\n                    },\n                    click : function(evt) {\n                        evt.stopPropagation();\n                        var rating = parseInt($(this).attr('pos'));\n                        s.cb.onRatingClicked(id, index, rating)\n\n                        setTimeout(function(){\n                            $bgCover.remove();\n                            $rating.remove();\n                        }, 800);\n                    }\n                })\n            }\n        }\n    };\n\n\n    var _toggleWatchListItem = function(id){\n        var $li = $('.'+liClass+'['+urankIdAttr+'=\"'+id+'\"]');\n        var watchIcon = $li.find(' .' + watchiconClass);\n        var classToAdd = watchIcon.hasClass(offClass) ? onClass : offClass;\n        var classToRemove = classToAdd === onClass ? offClass : onClass;\n        watchIcon.switchClass(classToRemove, classToAdd);\n        $li.toggleClass(watchedClass);\n    };\n\n\n    var _clearEffects = function() {\n        this.deselectAllListItems();\n        if(this.multipleHighlightMode) hideUnrankedListItems();\n    };\n\n\n    var _clear = function() {\n        console.log(s.options);\n        if(!s.options.custom)\n            $root.empty();\n        /* todo else */\n    };\n\n\n    var _destroy = function() {\n        if(!s.options || !s.options.custom) return;\n\n        if(!s.options.custom)\n            $root.empty().removeClass(contentListClass+' '+hiddenScrollbarClass);\n        else {\n            if($listContainer.hasClass(hiddenScrollbarClass)) {\n                var $ulCopy = $ul.clone(true);\n                $root.empty().append($ulCopy);\n            }\n            $root.removeClass(contentListClass);\n            $('.'+ulClass).removeClass(ulClass);\n            $('.'+liClass).removeAttr(urankIdAttr)\n                .removeClass(liClass+' '+liLightBackgroundClass+' '+liDarkBackgroundClass+' '+liUnrankedClass+' '+liMovingUpClass+' '+liMovingDownClass+' '+liNotMovingClass);\n            $('.'+liRankingContainerClass).empty().removeClass(liRankingContainerClass);\n            $('.'+liTitleClass).removeClass(liTitleClass);\n            $('.'+watchiconClass).removeClass(watchiconClass+' '+offClass+' '+onClass);\n            $('.'+faviconClass).removeClass(faviconClass+' '+offClass+' '+onClass);\n        }\n    };\n\n\n    var _scrollTo = function(scroll) {\n        $scrollable.off('scroll', onScroll)\n            .scrollTop(scroll)\n            .on('scroll', onScroll);\n    };\n\n    var _getListHeight = function() {\n        return $ul.fullHeight();\n    };\n\n    // Prototype\n    ContentList.prototype = {\n        build: _build,\n        reset: _reset,\n        update: _update,\n        hover: _hover,\n        unhover: _unhover,\n        selectListItem: _selectListItem,\n        deselectAllListItems: _deselectAllListItems,\n        highlightListItems: _highlightListItems,\n        clearAllFavicons: _clearAllFavicons,\n        toggleFavicon: _toggleFavicon,\n        toggleWatchListItem: _toggleWatchListItem,\n        clearEffects: _clearEffects,\n        clear: _clear,\n        destroy: _destroy,\n        scrollTo: _scrollTo,\n        getListHeight: _getListHeight\n    };\n\n    return ContentList;\n})();\n\nmodule.exports = ContentList;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/contentList.js\n// module id = 14\n// module chunks = 0 1 2","var DocViewer = (function(){\n\n    var _this;\n    // Settings\n    var s = {};\n    // Classes\n    var docViewerOuterClass = 'urank-docviewer-outer',\n        docViewerContainerClass = 'urank-docviewer-container',\n        defaultDocViewerContainerClass = 'urank-docviewer-container-default',\n        detailsSectionClass = 'urank-docviewer-details-section',\n        contentSectionOuterClass = 'urank-docviewer-content-section-outer',\n        contentSectionClass = 'urank-docviewer-content-section';\n    // Id prefix\n    var detailItemIdPrefix = '#urank-docviewer-details-';\n    // Selectors\n    var $root = $(''), $container = $(''), $detailsSection = $(''), $contentSectionOuter = $(''), $contentSection = $('');\n    // Helper\n    var customScrollOptions = {\n        axis: 'y',\n        theme: 'light',\n        scrollbarPosition: 'outside',\n        autoHideScrollbar: true,\n        scrollEasing: 'linear',\n        mouseWheel: {\n            enable: true,\n            axis: 'y'\n        },\n        keyboard: {\n            enable: true\n        },\n        advanced: {\n            updateOnContentResize: true\n        }\n    };\n\n\n\n    function DocViewer(params) {\n        s = $.extend({\n            root: '',\n            attr : {},\n            options : {\n                attrToShow: [],\n                aes: {\n                    defaultBlockStyle: true,\n                    customScrollBars: true,\n                    textDecoration: 'background'\n                }\n            },\n            cb : {\n                onDocViewerHidden: function(){}  \n            } \n        }, params);\n        _this = this;\n    }\n\n\n    var _build = function() {\n\n        if(s.root === '') {\n            $('.'+docViewerOuterClass).remove();\n            $root = $('<div/>').appendTo('body').addClass(docViewerOuterClass).hide();\n            $container = $('<div/>').appendTo($root).addClass(docViewerContainerClass);\n        }\n        else {\n            $root = $(s.root).empty();\n            $container = $root;\n        }\n\n        $root.on('click', function(event){ event.stopPropagation(); s.cb.onDocViewerHidden.call(this); });\n        $container.on('click', function(event){ event.stopPropagation() });\n\n        // Append details section, titles and placeholders for doc details\n        $detailsSection = $(\"<div class='\" + detailsSectionClass + \"'></div>\").appendTo($container);\n\n        var $titleContainer = $('<div/>').appendTo($detailsSection);\n        $(\"<label>Title:</label>\").appendTo($titleContainer);\n        $(\"<h3 id='urank-docviewer-details-title'></h3>\").appendTo($titleContainer);\n        // var $authorSection = $('<div/>').appendTo($detailsSection);\n        // $('<label/>').appendTo($authorSection).html('Author:');\n        // $('<span/>', { id: 'urank-docviewer-details-author' }).appendTo($authorSection);\n\n        s.options.attrToShow.forEach(function(field){\n            var field_name = field.attr.replace('.', '-')\n            var $fieldContainer = $('<div/>').appendTo($detailsSection);\n            if (field.style ) {\n                $fieldContainer.addClass(field.style)\n            }\n            $(\"<label id='label-'\" + field_name + \">\" + field.label + \":</label>\").appendTo($fieldContainer);\n            $(\"<span id='details-\" + field_name + \"'></span>\").appendTo($fieldContainer);\n        });\n\n        // Append content section for snippet placeholder\n        $contentSectionOuter = $('<div></div>').appendTo($container).addClass(contentSectionOuterClass);\n        $contentSection = $('<div></div>').appendTo($contentSectionOuter).addClass(contentSectionClass);\n        $('<p></p>').appendTo($contentSection);\n\n        $root.on('mousedown', function(event){ event.stopPropagation(); });\n\n        //if(s.options.aes.customScrollBars)\n            $contentSectionOuter/*.css('overflowY', 'hidden')*/.mCustomScrollbar(customScrollOptions);\n    };\n\n\n    var addField = function(field, doc){\n        var field_name = field.attr.replace('.', '-')\n        var attrs = field.attr.split('.')\n        var value = doc[attrs[0]]\n        for(var j=1; j < attrs.length; j++) {\n            value = value[attrs[j]]\n        }\n        $(\"#label-\" + field_name).html(field.label);\n        $(\"#details-\" + field_name).html(value);\n    };\n\n    /**\n    * @private\n    * Description\n    * @param {type} document Description\n    * @param {Array} keywords (only stems)\n    */\n    var _showDocument = function(doc, keywords, colorScale){\n\n        $root.show();\n        // var title = doc[s.attr.pretty_title] || doc[s.attr.title];\n        $(detailItemIdPrefix + 'title').html(doc[s.attr.title]);\n        // $(detailItemIdPrefix + 'title').html(getStyledText(doc[s.attr.title], keywords, colorScale));\n        // $(detailItemIdPrefix + 'author').html(doc.creator);\n        var fields = (s.options && s.options.attrToShow) ? s.options.attrToShow : [];\n        fields.forEach(function(field){\n            addField(field, doc)\n        });\n\n        $contentSection.empty();\n        // var $p = $('<p></p>').appendTo($contentSection).html(getStyledText(doc[s.attr.description], keywords, colorScale));\n        // var description = doc[s.attr.pretty_description] || doc[s.attr.description];\n        var $p = $('<p></p>').appendTo($contentSection).html(doc[s.attr.description]);\n        $p.hide().fadeIn('slow').scrollTo('top');\n        $contentSectionOuter.mCustomScrollbar('update');\n    };\n\n\n    var _clear = function(){\n        $root.hide();\n        // Clear details section\n        $(detailItemIdPrefix + 'title').empty();\n        // $(detailItemIdPrefix + 'author').empty();\n        // var facets = (s.options && s.options.attrToShow) ? s.options.attrToShow : [];\n        // facets.forEach(function(facet){\n        //     $(detailItemIdPrefix + '' + facet).empty();\n        // });\n        // Clear content section\n        $contentSection.empty();\n    };\n\n\n    var _destroy = function() {\n        $root.empty().removeClass(docViewerContainerClass)\n    };\n\n\n    // Prototype\n    DocViewer.prototype = {\n        build: _build,\n        clear: _clear,\n        showDocument: _showDocument,\n        destroy: _destroy\n    };\n\n    return DocViewer;\n})();\n\n\nmodule.exports = DocViewer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/docViewer.js\n// module id = 15\n// module chunks = 0 1 2","var NeighborsCloud = (function(){\n\n\tvar _this, $root, $neighborcloud, $tooltip;\n\tvar s;\n\tvar simFeat = {\n\t\t\t'C': 'Co-authorship', \n\t\t\t'G': 'Geographic Distance', \n\t\t\t'I': 'Similar Interests', \n\t\t\t'P': 'Publication Similarity', \n\t\t\t'S': 'Social Context'\n\t\t};\n\n\tfunction NeighborsCloud(params){\n\t\t_this = this;\n\t    s = $.extend({\n\t        root: '',\n\t        attr: {},\n\t        options: {},\n\t        cb:{\n\t            onNeighborTagMouseEnter: function(index, id){},\n\t            onNeighborTagMouseLeave: function(index, id){},\n\t            onNeighborTagClick: function(index, id){},\n\t            onNeighborTagSelected: function(index, id){}\n\t        }\n\t    }, params);\n\t    this.neighbors = [];\n\n\t   \t$root = $(s.root);\n\t}\n\n\tvar setTagProperties = function($tag, t, index) {\n\t\t$tag.off().on({\n\t\t\t\t'click': function(evt){\n\t\t\t\t\tvar tid = '#urank-neighbortag-' + t.neighbor.id;\n\t\t\t\t\tvar $tag = $(tid)\n\t\t\t\t\tif(!$tag.hasClass('selected')) {\n\t\t\t\t\t\ts.cb.onNeighborTagSelected(index, t.neighbor.id);\t\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'mouseenter': function(evt){\n\t\t\t\t\ts.cb.onNeighborTagMouseEnter(index, t.neighbor.id)\n\t\t\t\t},\n\t\t\t\t'mouseleave': function(evt){\n\t\t\t\t\ts.cb.onNeighborTagMouseLeave(index, t.neighbor.id)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.css({\n\t\t\t\t'color': _this.colors(t.neighbor.name),\n\t\t\t\t'font-size': (s.options.minFontSize + t.score * s.options.fontSizeGrowth)+'px',\n\t\t\t\t'background': ''\n\t\t\t});\n\n\t}\n\n\tvar addTooltip = function(tag, $tag){\n\t\t$('.tag-tooltip').remove();\n\t\t$tooltip = $('<div/>', { id: 'neighbor-tag-tooltip', class: 'tag-tooltip' }).appendTo($root);\n\t\n\t\tvar $titleWrapper = $('<div/>', { class: 'title-wrapper' }).appendTo($tooltip);\n\t\t$('<div/>', { class: 'title', html: tag.neighbor.name }).appendTo($titleWrapper);\n\t\t$('<div/>', { class: 'friend' }).appendTo($tooltip);\n\n\t\tif(tag.explanations.friend)\n\t\t\tvar $feat = $('<div/>', { class: 'sim-feature' }).appendTo($tooltip);\n\t\t\t$('<span/>', { name: 'friend', html: 'Friend' }).appendTo($feat)\n\t\t\t\t.css('font-size', '18px');\n\t\tfor(feat in simFeat){\n\t\t\tif(simFeat[feat]) {\n\t\t\t\tvar $feat = $('<div/>', { class: 'sim-feature' }).appendTo($tooltip);\n\t\t\t\tvar fontSize = Math.min(6 + tag.explanations[feat] * 8, 20);\n\t\t\t\t$('<span/>', { name: feat, html: simFeat[feat] }).appendTo($feat)\n\t\t\t\t\t.css('font-size', fontSize+'px');\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tvar height = $tooltip.height();\n\t\tvar width = $tooltip.width();\n\t\tvar top = parseInt($tag.offset().top) - height+50;\n\t\tvar left = parseInt($neighborcloud.offset().left) - width;\n\t\t$tooltip.css({ top: top, left: left, width: width });\n\n\t};\n\n\tvar build = function(neighbors, colors){\n\t\tthis.neighbors = neighbors;\n\t\tthis.colors = colors;\n\n\t\t$root.addClass('urank-tag-container');\n\t\t$container = $('<div/>', { class: 'urank-tag-container-outer'}).appendTo($root);\n\t\t$('<div/>', { class: 'urank-hidden-scrollbar' }).appendTo($container)\n\t\t$scrollable = $('<div/>').appendTo($container).addClass('urank-hidden-scrollbar-inner')\n            // .on('scroll', onRootScrolled);\n        $neighborcloud = $('<div/>').appendTo($scrollable).addClass('urank-tag-container-inner');\n\t\t// $neighborcloud = $('<div/>', { class: 'urank-tag-container-inner' }).appendTo($scrollable);\n\t\t// addTooltip();\n\n\t\tthis.neighbors.forEach(function(t, index) {\n\t\t\tvar $tag = $('<div/>', {\n\t\t\t\tid: 'urank-neighbortag-' + t.neighbor.id,\n\t\t\t\t'class': 'urank-tag',\n\t\t\t\t'name': t.tag,\n\t\t\t\t'html': t.neighbor.name\n\t\t\t}).appendTo($neighborcloud);\n\t\t\t// Bind event handlers and set style\n\t\t\tsetTagProperties($tag, t, index);\n\t\t});\n\t};\n\n\n\tvar selectNeighborTag = function(index, id, color) {\n\t\tvar $tag = $('#urank-neighbortag-' + id);\n\t\tif(!$tag.hasClass('selected')) {\n\t\t\tvar $clone = $tag.clone().attr('id', 'urank-neighbortag-'+id+'-clon');\n\t\t\t$tag.after($clone);\n\t\t\t$tag.addClass('selected').css({\n\t\t\t\t'color': 'white',\n\t\t\t\t'background': color\n\t\t\t});\n\t\t}\n\t};\n\n\tvar tooltipTimeout, fadeOutTimeOut;\n\n\tvar onNeighborTagMouseEntered = function(index, id){\n\t\tvar $tag = $('#urank-neighbortag-' + id);\n\t\tif(!$tag.hasClass('selected'))\n\t\t\t$tag.addClass('hovered');\n\n\t\t// fill tooltip\n\t\ttooltipTimeout = setTimeout(function(){\n\t\t\tvar tag = _this.neighbors[index];\n\t\t\taddTooltip(tag, $tag);\n\t\t\t\n\t\t\t$tooltip.fadeIn();\n\t\t\tfadeOutTimeOut = setTimeout(function(){\n\t\t\t    $tooltip.fadeOut();\n\t\t\t}, 4000);\n\t\t}, 100);\n\t\t\n\t};\n\n\n\tvar onNeighborTagMouseLeft = function(index, id){\n\t\tvar $tag = $('#urank-neighbortag-' + id);\n\t\t$tag.removeClass('hovered');\n\t\tclearTimeout(tooltipTimeout);\n        clearTimeout(fadeOutTimeOut);\n        if($tooltip)\n        \t$tooltip.hide();\n\t};\n\n\n\tvar restoreTag = function(index, id){\n\t\tvar $tag = $('#urank-neighbortag-' + id);\t\t            // is in tagcloud\n\t\tvar $clonedTag = $('#urank-neighbortag-' + id + '-clon');   // is in tagbox, will be deleted sync\n\t\tvar $dummyTag = $clonedTag.clone();                     \t// need dummy for animation, clone is removed\n\t\t$dummyTag.attr('id', 'dummy-tag-' + id);\n\t\tconsole.log('Animating ' + $dummyTag.attr('id'));\n\t\t//  Save offset in tagBox before detaching\n\t\tvar oldOffset = $clonedTag.offset();\n\t\tvar newOffset = $tag.offset();\n\t\t// Detach tag from tag cloud, attach temporarily to body and place it in old position (in tagBox)\n\t\t$dummyTag.appendTo('body')\n\t\t    .css({ position: 'absolute', top: oldOffset.top, left: oldOffset.left, 'z-index': 9999 });\n\t\t// Animate tag moving from tag box to tag cloud\n\t\t$dummyTag.animate({ top: newOffset.top, left: newOffset.left }, 800, 'swing', function() {\n\t\t    //  Detach from body after motion animation is complete and append to tag container again\n\t\t    $dummyTag.remove();\n\t\t    $tag.removeClass().addClass('urank-tag'); //.setTagStyle();\n\t\t    setTagProperties($tag, _this.neighbors[index], index);\n\t\t    // $tag = $tag.detach();\n\t\t    // $clonedTag.after($tag);\n\t\t    // $clonedTag.remove();\n\t\t    // $tag.css({ position: '', top: '', left: '', 'z-index': '' }).setTagStyle();\n\t\t    // setTagProperties($tag);\n\t\t});\n\n\t}\n\n\t\n\n\tNeighborsCloud.prototype = {\n\t\t// init\n\t\tbuild : build,\n\t\t// when user selects a tag, node, ot person icon\n\t\tselectNeighborTag: selectNeighborTag,\n\t\t// mouse over\n\t\tonNeighborTagMouseEnter: onNeighborTagMouseEntered,\n\t\t// mouse leave\n\t\tonNeighborTagMouseLeave: onNeighborTagMouseLeft,\n\t\t// when tag deleted in tagbox (box above ranking)\n\t\trestoreTag: restoreTag\n\t};\n\n\treturn NeighborsCloud;\n})()\n\nmodule.exports = NeighborsCloud;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/neighborsCloud.js\n// module id = 16\n// module chunks = 0 1 2","var Globals = require('../config/globals');\nvar utils = require('../helper/utils');\n\nvar TagBox = (function(){\n\n    var _this;\n    // Settings\n    var s = {};\n    //  Classes\n    var tagboxClass = 'urank-tagbox',\n        tagboxContainerClass = 'urank-tagbox-container',\n        clearBtnClass = 'urank-tagbox-clear-btn',\n        tagInBoxClass = 'urank-tagbox-tag',\n        tagDeleteButtonClass = 'urank-tagbox-tag-delete-button',\n        tagWeightsliderClass = 'urank-tagbox-tag-weight-slider',\n        weightSliderRangeClass = 'urank-tagbox-tag-weight-slider-range',\n        weightSliderHandleClass = 'urank-tagbox-tag-weight-slider-handle',\n        rankingModeHeaderClass = 'urank-tagbox-ranking-mode-header',\n        rankingModeHeaderInnerClass = 'urank-tagbox-ranking-mode-header-inner',\n        headerSectionClass = 'urank-tagbox-ranking-mode-header-section',\n        highlightedClass = 'urank-tagbox-ranking-mode-header-highlighted',\n        headerStyleClass = 'urank-header-style',\n        modeLegendClass = 'urank-ranking-mode-legend',\n        legendWeightBar = 'urank-tagbox-ranking-weight-bar';\n\n    //  Id prefixes\n    var kwtagIdPrefix = '#urank-tag-';\n    var utagIdPrefix = '#urank-usertag-';\n    var neighborTagPrefix = '#urank-neighbortag-';\n    //  Attribute\n    var tagPosAttr = 'tag-pos';\n    //  Helpers\n    var $root = $(''), \n        $tagContainer, \n        $rankingModeHeader, \n        $splitRankings = $(''), \n        $sumRankings = $(''), \n        $contentHeader, \n        $socialHeader, \n        $resetBtn, \n        $message;\n\n    // Contructor\n    function TagBox(params) {\n        _this = this;\n        s = $.extend({\n            root: '',\n            options: {\n                header: {\n                    enabled: false,\n                    useHybrid: false,\n                    useSplit: false\n                },    \n                aes :{\n                    defaultBlockStyle: true,    \n                }\n            },\n            cb :{\n                onModeChanged: function(mode){},\n                onRankingWeightChanged: function(rWeight) {},\n                onTagDropped: function(arr_index_id){},\n                onTagDeleted: function(index, id){},\n                onTagWeightChanged: function(index, id, weight){},\n                onTagInBoxMouseEnter: function(index, id){},\n                onTagInBoxMouseLeave: function(index, id){},\n                onTagInBoxClick: function(index, id){},\n                onReset: function(){}\n            },\n            droppableClass: 'urank-tagcloud-tag',\n        }, params);\n\n        $root = $(s.root);\n\n        s.ui = {\n            // droppable tags\n            droppableOptions : {\n                tolerance: 'touch',\n                drop: function(event, ui){\n                    ui.draggable.data('dropped', true);\n                    var index = $(ui.draggable).attr('tag-pos');\n                    var id = $(ui.draggable).attr('tag-id');\n                    // sibling tags for multiple drag\n                    var addedTags = ui.draggable.data('addedTags'); \n                    // ui.draggable.data('addedTags').forEach(function(addedTag){\n                    //     addedTagIndices.push(addedTag);\n                    // });\n                    if(addedTags.length) {\n                        s.cb.onMultipleTagsSelected($.merge([ \n                            { 'index': index, 'id': id }, //original tag\n                            addedTags\n                        ]));\n                    } else {\n                        s.cb.onTagSelected.call(this, index, id);    \n                    }\n                }\n            },\n            // tag weight slider\n            sliderOptions : {\n                orientation: 'horizontal',\n                animate: true,\n                range: \"min\",\n                min: 0,\n                max: 1,\n                step: 0.1,\n                value: 1,\n                start: function(event, ui) {},\n                slide: function(event, ui) {\n                    var $tag  = $(this.parentNode);\n                    var color = $tag.data('queryTermColor');\n                    $tag.css(\"background\", \"rgba(\"+ utils.hexToR(color) + ', ' + utils.hexToG(color) + ', ' + utils.hexToB(color) + \",\" + ui.value + \")\");\n                },\n                stop: function(event, ui) {\n                    var index =  $(this.parentNode).attr('tag-pos'),\n                        id =  $(this.parentNode).attr('tag-id'),\n                        weight = ui.value;\n                    s.cb.onTagWeightChanged.call(this, index, id, weight);\n                }\n            },\n            // CB-TU weight slider\n            rankingWeightSliderOptions : {\n                animate: true,\n                //range: 'min',\n                min: 0,\n                max: 1,\n                step: 0.1,\n                value: 0.5,\n                slide: function(event, ui) {\n                    $('.'+legendWeightBar+\"[name='CB']\").css('background', 'rgba(0,0,0,' + (1 - ui.value) + ')');\n                    $('.'+legendWeightBar+\"[name='CF']\").css('background', 'rgba(0,0,0,' + ui.value + ')');\n                },\n                stop: function(event, ui) {\n                    s.cb.onRankingWeightChanged.call(this, ui.value);\n                }\n            }    \n        };\n\n    }\n\n\n\n    var buildRankingModeHeader = function(ranking_conf) {\n\n        $rankingModeHeader = $('<div/>').appendTo($root).addClass(rankingModeHeaderClass);\n\n        // Split rankings\n        if(s.options.header.useSplit) {\n            $splitRankings = $('<div/>').appendTo($rankingModeHeader)\n                .addClass(rankingModeHeaderInnerClass);//.hide();\n            // One column per RS \n            ranking_conf.rs.forEach(function(rs) {\n                if(rs.active) {\n                    $rsHeader = $('<div/>', {id: 'header-'+rs.name }).appendTo($splitRankings)\n                        .addClass(headerSectionClass)\n                        .on('click', function(evt){ \n                            evt.stopPropagation();\n                            s.cb.onModeChanged.call(this, rs.name)\n                        });\n                    if(rs.name === ranking_conf.rankBy) {\n                        $rsHeader.addClass(highlightedClass);\n                    }\n                $('<div/>', { class: modeLegendClass, text: rs.pretty }).appendTo($rsHeader)\n                    .append($('<span/>'));\n\n                }\n            });\n            // Sum button (add only if useHybrid = true)\n            if(s.options.header.useHybrid) {\n                $('<button/>', { class: 'my-btn', title: 'Aggregate rankings' }).appendTo($splitRankings)\n                    .addClass('sum')\n                    .html(\"<span></span>\")\n                    .on('click', function(evt){ \n                        evt.stopPropagation();\n                        s.cb.onModeChanged.call(this, 'overall') \n                    });\n            }\n        }\n\n        // Aggregated rankings\n        if(s.options.header.useHybrid) {\n            $sumRankings = $('<div/>').appendTo($rankingModeHeader)\n                .addClass(rankingModeHeaderInnerClass)\n                .hide();\n\n            var $sumHeader = $('<div/>').appendTo($sumRankings)\n                .addClass(headerSectionClass + ' long ' + highlightedClass)\n                // .on('click', function(evt){ \n                //     evt.stopPropagation();\n                //     s.cb.onModeChanged.call(this, 'overall') \n                // });\n\n            // header legend\n            ranking_conf.rs.forEach(function(rs, i){\n                if(rs.active) {\n                    //  add grey-shaded square and RS label\n                    $('<div/>', { name: rs.name }).appendTo($sumHeader).addClass(legendWeightBar)\n                    $('<div/>', { name: rs.anme , text: ' '+rs.pretty+' ' }).appendTo($sumHeader).addClass(modeLegendClass);\n                    if(i < ranking_conf.length - 1) {\n                        // add plus button in between\n                        $('<div/>', { text: ' + ' }).appendTo($sumHeader).addClass(modeLegendClass + ' plus-symbol').html('<span></span>');    \n                    }\n\n                    // HARD FIX !! ranking weight slider\n                    if(i==0){\n                        $('<div/>', { title: \"Move left to increase Content Ranking's weight\" })\n                            .appendTo($sumHeader).slider(s.ui.rankingWeightSliderOptions);\n                    }\n                }\n            });\n\n            // // ranking weight slider\n            // $('<div/>', { title: \"Move right to increase Content Ranking's weight\" })\n            //     .appendTo($sumHeader).slider(s.ui.rankingWeightSliderOptions);\n\n            // Split button (show only if useSplit = true)\n            if(s.options.header.useSplit) {\n                $('<button/>', { title: 'Split rankings' }).appendTo($sumRankings).addClass('split').html(\"<span></span>\")\n                    .on('click', function(evt){ \n                        evt.stopPropagation();\n                        s.cb.onModeChanged.call(this, 'CB') \n                    });\n            }\n        }\n        _updateRankingMode(ranking_conf.rankBy)\n    };\n\n\n\n\n    var _build = function(ranking_conf) {\n        this.destroy();\n        $root = $(s.root).addClass(tagboxClass);\n\n        var tagboxContainerClasses = (s.options.aes.defaultBlockStyle) ? tagboxContainerClass +' '+ headerStyleClass : tagboxContainerClass;\n        $tagContainer = $('<div/>').appendTo($root)\n            .addClass(tagboxContainerClasses);\n        $tagContainer.droppable(s.ui.droppableOptions);                       // bind droppable behavior to tag box;\n        $message = $('<div/>', { class: 'message', html: Globals.STR.DROP_TAGS_HERE}).appendTo($tagContainer);\n        $resetBtn = $('<a/>', { href: '#' }).appendTo($tagContainer)\n            .addClass(clearBtnClass)\n            .on('click', function(){ s.cb.onReset.call(this); }).hide();\n\n        if(!s.options.header.enabled) {\n            $tagContainer.addClass('large');\n        }\n        else {\n            buildRankingModeHeader(ranking_conf);\n        }\n        return this;\n    };\n\n\n    var _clear = function() {\n        if($tagContainer) {\n            $tagContainer.find('.'+tagInBoxClass).remove();\n            //$tagContainer.append('<p>' + STR_DROP_TAGS_HERE + '</p>');\n            $message.show();\n            $resetBtn.hide();\n        }\n        //$root.find('.'+tagboxContainerClass).empty().append('<p>' + STR_DROP_TAGS_HERE + '</p>');\n        return this;\n    };\n\nvar getTagPrefix = function(tag){\n    if(tag.type === 'keyword')\n        return kwtagIdPrefix;\n    if(tag.type === 'usertag')\n        return utagIdPrefix; \n    if(tag.type === 'neighbor')\n        return neighborTagPrefix;\n};\n\n\n/*\n    tag = { index, stem, term, color }\n*/\n    var _appendTag = function(tag){\n        var prefix = getTagPrefix(tag)\n        var $tag = $(prefix + '' + tag.id + '-clon');\n\n        //if ($tag.hasClass(s.droppableClass)) {\n            // Append dragged/clicked tag to tag box, refactor classes\n            $tag = $tag.detach().appendTo($tagContainer)\n                .removeClass().addClass(tagInBoxClass);\n            // Append \"delete\" button\n            $('<span></span>').appendTo($tag).addClass(tagDeleteButtonClass);\n            // Add new div to make it a slider\n            var weightSlider = $(\"<div class='\" + tagWeightsliderClass + \"'></div>\").appendTo($tag)\n                .slider($.extend(true, s.ui.sliderOptions, {\n                    slide: function(event, ui) {\n                        // var $tag  = $(this.parentNode);\n                        var color = $tag.data('queryTermColor');\n                        $tag.css(\"background\", \"rgba(\"+ utils.hexToR(color) + ', ' + utils.hexToG(color) + ', ' + utils.hexToB(color) + \",\" + ui.value + \")\");\n                    },\n                    stop: function(event, ui) {\n                        // var tag ={\n                        //     index: $tag.attr('tag-pos'),\n                        //     id: $tag.attr('tag-id'),\n                        //     weight: ui.value   \n                        // };\n                        console.log(tag);\n                        tag.weight = ui.value\n                        s.cb.onTagWeightChanged.call(this, tag);\n                    }\n                }));\n            weightSlider.find('.ui-slider-range')\n                .addClass(weightSliderRangeClass)\n                .css('background', tag.color);\n            weightSlider.find('.ui-slider-handle')\n                .addClass(weightSliderHandleClass);\n            // Retrieve color in weightColorScale for the corresponding label\n            var rgbSequence = utils.hexToR(tag.color) + ', ' + utils.hexToG(tag.color) + ', ' + utils.hexToB(tag.color);\n            // Set tag's style\n            $tag.data('queryTermColor', tag.color).css({\n                background: 'rgba(' + rgbSequence + ', 1)',\n                color: '',\n                border: 'solid 1px ' + tag.color\n            }).off().on({\n                mouseenter: s.cb.onTagInBoxMouseEnter(tag.index, tag.id),\n                mouseleave: s.cb.onTagInBoxMouseLeave(tag.index, tag.id),\n                click: s.cb.onTagInBoxClick(tag.index, tag.id)\n            }).on('click', '.'+tagDeleteButtonClass, function(event){  //  Event handler for delete button\n                    event.stopPropagation();\n                    s.cb.onTagDeleted.call(this, tag);\n            });\n        //}\n        this.refresh();\n        return this;\n    };\n\n\n    var _deleteTag = function(tag) {\n        // fix identifier\n        var prefix = getTagPrefix(tag);\n        $(prefix + '' + tag.id + '-clon').remove();\n        console.log('Deleted clon of tag with id = ' + tag.id);\n        this.refresh();\n        return this;\n    };\n\n    var _reset = function() {\n        // Remove all buttons and sliders\n        $('.'+tagDeleteButtonClass).remove();\n        $('.'+tagWeightsliderClass).remove();\n        return this;\n    };\n\n    var _destroy = function() {\n        if($(s.root).hasClass(tagboxClass)) {\n            $tagContainer.droppable('destroy');\n            $root.empty().removeClass(tagboxContainerClass);\n        }\n        return this;\n    };\n\n\n    var _getHeight = function(){\n        return $(s.root).height();\n    };\n\n\n    var _updateRankingMode = function(mode) {\n        // FIX!!\n        console.log(mode);\n        if(mode == 'overall') {\n            $splitRankings.hide();\n            $sumRankings.show();\n        }\n        else {\n            $splitRankings.show();\n            $sumRankings.hide();\n            hid = '#header-'+mode;\n            console.log(hid);\n            $(hid).addClass(highlightedClass);\n            $('.'+headerSectionClass).not($(hid)).removeClass(highlightedClass);\n        }\n        return this;\n    };\n\n\n    var _updateRankingWeight = function(rWeight) {\n        console.log($('.'+legendWeightBar+\"[name='content']\"));\n    };\n\n\n    var _refresh = function(){\n        var is_empty = $tagContainer.find('.'+tagInBoxClass).length ? false : true;\n        if(is_empty) {\n            // $message.show();\n            // $resetBtn.hide();\n            this.clear();\n        }\n        else {\n            $resetBtn.css('display', '');\n            $message.hide();\n        }\n        return this;\n    };\n\n    // Prototype\n    TagBox.prototype = {\n        build: _build,\n        reset: _reset,\n        clear: _clear,\n        appendTag: _appendTag,      // tag added via drand and drop\n        deleteTag: _deleteTag,\n        updateRankingMode: _updateRankingMode,\n        refresh: _refresh,\n        destroy: _destroy,\n        getHeight: _getHeight\n    };\n\n    return TagBox;\n})();\n\n\nmodule.exports = TagBox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/tagBox.js\n// module id = 17\n// module chunks = 0 1 2","// var $ = require('jquery');\n// var _ = require('underscore');\nvar VIEWS = require('../config/views');\n\n\nvar TagCloud = (function() {\n\n    var _this, $root = $('');\n    // Settings\n    var s = {};\n    //  Classes\n    var tagcloudClass = 'urank-tagcloud',\n        tagcloudControlsClass = 'urank-tagcloud-controls',\n        notFoundClass = 'not-found',\n        tagFreqSliderClass = 'urank-tagcloud-freq-slider',\n        tagContainerOuterClass = 'urank-tagcloud-tag-container-outer',\n        tagClass = 'urank-tagcloud-tag';\n\n    var $tagInput = $(''), $notFoundLabel = $(''), $tagFreqLabel = $(''), $tagFreqSlider = $(''), $outerTagContainer = $(''), minFreq = 0, maxFreq = 0;\n\n    //  Constructor\n    function TagCloud(params) {\n        _this = this;\n        s = $.extend({\n            root: '',\n            attr: {},\n            options: {},\n            view : 'default',\n            cb:{\n                onTagInCloudMouseEnter: function(index){},\n                onTagInCloudMouseLeave: function(index){},\n                onTagInCloudClick: function(index){},\n                onKeywordEntered: function(keyword){},\n                onTagFrequencyChanged: function(min, max){},\n                onTagClickedChange: function(index){}\n            }\n        }, params);\n        // s.root = '.'+tagContainerOuterClass; // change sub-root\n\n        this.keywords = [];\n        this.keywordsDict = {};\n        init();\n        // Initialize selected tagcloud module\n        var tagcloudView = VIEWS.TAGCLOUD[s.options.view];\n        var tagcloudConf = _.omit(s, 'view');\n        tagcloudConf.root = '.'+tagContainerOuterClass; // change sub-root\n        this.tagcloud = new tagcloudView(tagcloudConf);\n    }\n\n    function init() {\n        // Empty tag container and add appropriateclass\n        $root = $(s.root);\n        $root.empty().addClass(tagcloudClass);\n        //  Create tagcloud controls\n        var $tagcloudControls = $('<div/>').appendTo($root).addClass(tagcloudControlsClass);\n        $tagFreqLabel = $('<label/>').appendTo($tagcloudControls).addClass('tag-freq');\n        $tagFreqSlider = $('<div/>').appendTo($tagcloudControls);\n\n        // Notfound message label\n        $notFoundLabel = $('<a/>').appendTo($tagcloudControls);\n        // Keyword search input\n        $tagInput = $('<input>', { type: 'text', placeholder: 'Enter keyword' }).appendTo($tagcloudControls);\n        // Search icon in text input\n        $('<a/>').appendTo($tagcloudControls).addClass('search-icon');\n\n        // Create tag container\n        $outerTagContainer = $('<div></div>').appendTo($root).addClass(tagContainerOuterClass);\n    }\n\n    var onTextEntered = function() {\n        var stemmedText = $tagInput.val().stem();\n        if(_this.keywordsDict[stemmedText])\n            s.cb.onKeywordEntered.call(this, _this.keywordsDict[stemmedText]);\n        else\n            $notFoundLabel.addClass(notFoundClass);\n    };\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Prototype methods\n\n    /**\n    * * @param {array of objects} keywords Description\n    */\n    var _build = function(keywords, data, colorScale, opt, keywordsDict){\n\n        _this.keywords = keywords;\n        _this.keywordsDict = keywordsDict;\n\n        minFreq = _this.keywords[_this.keywords.length - 1].df;\n        maxFreq = _this.keywords[0].df;\n        $tagFreqLabel.html('Keyword frequency: <strong>' + minFreq + '</strong> - <strong>' + maxFreq + '</strong>');\n\n        $tagFreqSlider.slider({\n            range: true,\n            animate: true,\n            min: minFreq,\n            max: maxFreq,\n            values: [minFreq, maxFreq],\n            slide: function(event, ui) {\n                $tagFreqLabel.html('Keyword frequency: <strong>' + ui.values[0] + '</strong> - <strong>' + ui.values[1] + '</strong>');\n                s.cb.onTagFrequencyChanged.call(this, ui.values[0], ui.values[1]);\n            },\n            stop: function(event, ui) {\n//                s.onTagFrequencyChanged.call(this, ui.values[0], ui.values[1]);\n            }\n        });\n\n        // Keyword search input\n        $tagInput.autocomplete({\n            source: _this.keywords.map(function(k){ return k.term })\n        }).off('keyup').on('keyup', function(e){\n            $notFoundLabel.removeClass(notFoundClass);\n            if(e.keyCode == 13 && $(this).val() != '')\n                onTextEntered();\n        });\n\n        // // Initialize selected tagcloud module\n        // var tagcloudView = s.view; //TAGCLOUD_MODULES[opt.module] || TAGCLOUD_MODULES.default;\n        // this.tagcloud = new tagcloudView($.extend(s, { root: '.'+tagContainerOuterClass }));\n        this.tagcloud.clear();\n        // Build tagcloud module\n        //var options = $.extend(opt.misc, { draggableClass: tagClass });\n        this.tagcloud.build(keywords, data, colorScale, keywordsDict);\n        return this;\n    };\n\n\n    var _reset = function() {\n        if(this.tagcloud) this.tagcloud.reset();\n        return this;\n    };\n\n\n    var _restoreTag = function(index, id){\n        if(this.tagcloud) this.tagcloud.restoreTag(index, id);\n        return this;\n    };\n\n\n    var _hoverTag = function(index, id) {\n        if(this.tagcloud) this.tagcloud.hoverTag(index, id);\n        return this;\n    };\n\n\n    var _unhoverTag = function(index, id) {\n        if(this.tagcloud) this.tagcloud.unhoverTag(index, id);\n        return this;\n    };\n\n\n    var _tagClicked = function(index, id) {\n        if(this.tagcloud) this.tagcloud.tagClicked(index, id);\n        return this;\n    };\n\n    var _updateClonOfDroppedTag = function(index, id, queryColor) {\n        if(this.tagcloud) this.tagcloud.updateClonOfDroppedTag(index, id, queryColor);\n        return this;\n    };\n\n\n    var _focusTag = function(keyword) {\n        this.tagcloud.focusTag(keyword);\n    };\n\n    var _showTagsWithinRange = function(min, max) {\n        this.tagcloud.showTagsWithinRange(min, max);\n    };\n\n    var _clearEffects = function() {\n        if(this.tagcloud) this.tagcloud.clearEffects();\n        return this;\n    };\n\n\n    var _clear = function() {\n\n        if(this.tagcloud) {\n            $tagFreqSlider.slider('destroy');\n            $tagInput.val('').autocomplete('destroy');\n            $notFoundLabel.removeClass(notFoundClass);\n            $outerTagContainer.empty();\n            this.tagcloud.clear();\n        }\n        return this;\n    };\n\n\n    var _destroy = function() {\n        if(this.tagcloud) this.tagcloud.destroy();\n        $root.removeClass(tagcloudClass);\n        return this;\n    };\n\n\n    TagCloud.prototype = {\n        build: _build,\n        reset: _reset,\n        restoreTag: _restoreTag,\n        hoverTag: _hoverTag,\n        tagClicked:_tagClicked,\n        unhoverTag: _unhoverTag,\n        updateClonOfDroppedTag: _updateClonOfDroppedTag,\n        focusTag: _focusTag,\n        showTagsWithinRange: _showTagsWithinRange,\n        clearEffects: _clearEffects,\n        clear: _clear,\n        destroy: _destroy\n    };\n\n    return TagCloud;\n})();\n\nmodule.exports = TagCloud;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/tagCloud.js\n// module id = 18\n// module chunks = 0 1 2","\nrequire('../../helper/jquery_func');\n\nvar TagCloudDefault = (function(){\n\n    var _this;\n    // Settings\n    var s = {};\n    //  Classes\n    var tagcloudDefaultClass = 'urank-tagcloud-default',\n        hiddenScrollbarClass = 'urank-hidden-scrollbar',\n        hiddenScrollbarInnerClass = 'urank-hidden-scrollbar-inner',\n        tagContainerClass = 'urank-tagcloud-tag-container',\n        tagClass = 'urank-tagcloud-tag',\n        activeClass = 'active',\n        hoveredClass = 'hovered',\n        selectedClass = 'selected',\n        disabledClass = 'disabled',\n        droppedClass = 'dropped',\n        focusedClass = 'focused',\n        hiddenClass = 'hidden',\n        addableClass = 'addable',\n        addedClass = 'added',\n        tagHintClass = 'urank-tagcloud-tag-hint',\n        keywordHintClass = 'urank-tagcloud-tag-cooccurence-hint',\n        documentHintClass = 'urank-tagcloud-tag-document-hint',\n        tooltipClass = 'urank-tagcloud-tag-tooltip',\n        addIconClass = 'urank-tagcloud-tag-add-icon';\n    //  Ids\n    var tagIdPrefix = '#urank-tag-',\n        tagPiePrefix = '#urank-tag-pie-';\n    //   Attributes\n    var tagPosAttr = 'tag-pos';\n    //  Helpers\n    var backgroudGradient = \"top, rgb(0, 102, 255), rgb(20, 122, 255), rgb(0, 102, 255)\";\n    var $root = $(''), $scrollable = $(''), $tagContainer = $(''), $tooltip = $(''),\n        tooltipTimeOut, fadeOutTimeOut,\n\n        tagHintPinOptions = {\n            document: { top: -6, right: -10, container: '.'+tagcloudDefaultClass },\n            cooccurence: { bottom: -10, right: -10, container: '.'+tagcloudDefaultClass }\n        },\n\n        pieOptions = {\n            size: { pieOuterRadius: '100%', canvasHeight: '14', canvasWidth: '14' },\n            effects: {\n                load: { effect: \"none\" },\n                pullOutSegmentOnClick: { effect: 'none', speed: 0, size: 0 },\n                highlightSegmentOnMouseover: false\n            },\n            labels: {\n                inner: { format: '' },\n                lines: { enabled: false}\n            },\n            data: {\n                content: [\n                    { label: 'documentsIn', value: 0, color: '#65BA20' },\n                    { label: 'documentsNotIn', value: 0, color: '#fafafa' },\n                ]\n            },\n            misc: {\n                colors: { segmentStroke: '#65a620' },\n                canvasPadding: { top: 0, right: 0, bottom: 0, left: 0 },\n                gradient: { enabled: true, percentage: 100, color: \"#888\" },\n            }\n        };\n\n    //  Constructor\n    function TagCloudDefault(params) {\n        _this = this;\n        s = $.extend({\n            root: '',\n            attr: {},\n            options: {}, // numCategories, tagStyle\n            cb:{\n                onTagInCloudMouseEnter: function(index, id){},\n                onTagInCloudMouseLeave: function(index, id){},\n                onTagInCloudClick: function(index, id){},\n                onTagSelected: function(index, id){}    // used when selction == 'click'\n            }\n        }, params);\n\n        this.keywords = [];\n        this.isTagBeingDragged = false;\n        this.tagHintMode = false;\n        this.selectedTag = undefined;\n        this.addedTags = [];\n    }\n\n    // jquery function to change tag style\n    $.fn.setTagStyle = function() {\n        var $tag = $(this);\n        var idx = parseInt($tag.attr('tag-pos'));\n        var kw = _this.keywords[idx];\n\n        if($tag.hasClass('disabled'))\n            return $tag.css({ background: '', border: '' });\n\n        if($tag.hasClass('active') && ($tag.hasClass('hovered') || $tag.hasClass('selected') || $tag.hasClass('added')))\n            return $tag.css({ background: '', border: '' });\n\n        // dropped class is always for a cloned tag\n        if($tag.hasClass('dropped')) {\n            var color = $tag.data('queryColor');\n            var border = 'solid 1px ' + color;\n            var bg = s.options.highlight === 'background' ? color : 'transparent';\n            var fontColor = s.options.highlight === 'background' ? 'white' : kw.color;\n            return $tag.css({ 'background': bg, 'border': border, 'color': fontColor });\n        }\n            \n        if($tag.hasClass('active')/* || $tag.hasClass('addable')*/) {\n            if(s.options.tagStyle === 'badge') {\n                return $tag.addClass('badge').css({\n                    background: function() { return getGradientString($tag.data('originalColor')) },\n                    border: '',\n                });\n            } else if(s.options.tagStyle === 'word') {\n                // console.log(s.options.minFontSize + s.options.fontSizeGrowth * kw.score);\n                return $tag.addClass('word').css({\n                    // 'color': kw.color,\n                    'color': $tag.data('originalColor'),\n                    'font-size': (s.options.minFontSize + s.options.fontSizeGrowth * kw.score) + 'px',\n                    'border': '', 'background': ''\n                });\n            }\n        }\n            \n        return $tag;\n    };\n\n    /// Tag Cloud root and container event handlers\n    var onRootScrolled = function(event) {\n        event.stopPropagation();\n        if(_this.tagHintMode)\n            pinTagHints($('.'+tagClass+'.'+selectedClass));\n    };\n\n    ////////////////////////////////////////////////\n    // DRAGGABLE EVENTS AND OPTIONS\n    ////////////////////////////////////////////////\n\n    var $draggedTag = undefined;\n    var originalOffset = {};\n\n    var draggableEvt = {\n        // ON DRAG STARTED\n        onTagDragStarted : function(event, ui){\n            _this.isTagBeingDragged = true;\n            $tooltip.hide();\n            clearTimeout(tooltipTimeOut);\n            clearTimeout(fadeOutTimeOut);\n\n            $(this).data('dropped', false).data('addedTags', _this.addedTags)\n            //.removeClass(hoveredClass)\n            //.setTagStyle()\n            ;\n\n            $(ui.helper).addClass('dragging');\n\n            $draggedTag = $(this).clone()\n                .attr('id', $(this).attr('id') + '-clon')\n                .data('originalColor', $(this).data('originalColor'))\n                .removeClass('ui-draggable').removeClass('ui-draggable-handle')\n                .setTagStyle()\n                .hide();\n            $(this).after($draggedTag);\n\n            // Start added tag animation\n            originalOffset = { top: event.pageY, left: event.pageX };\n\n            $('.'+addedClass).each(function(i, addedTag){\n                var $addedTag = $(addedTag);\n                var $clonAddedTag = $addedTag.clone()\n                    .attr('id', $(this).attr('id') + '-clon')\n                    .data('originalColor', $(this).data('originalColor'))\n                    .removeClass('ui-draggable').removeClass('ui-draggable-handle')\n                    .setTagStyle();\n\n                var tagOffset = $addedTag.position();\n                $addedTag.after($clonAddedTag);\n                $addedTag.detach()\n                .appendTo('body')\n                .css({\n                    position: 'absolute',\n                    left: tagOffset.left,\n                    top: tagOffset.top,\n                    'z-index': 9999\n                });\n            });\n        },\n\n        // ON DRAGGED\n        onTagDragged : function(event, ui){\n            var currentOffset = { top: event.pageY - originalOffset.top, left: event.pageX - originalOffset.left };\n            originalOffset = { top: event.pageY, left: event.pageX };\n\n            _this.addedTags.forEach(function(tag, i){\n                var $addedTag = $(tagIdPrefix + '' + tag.id);\n                var tagOffset = $addedTag.position();\n                $addedTag.css({ left: tagOffset.left + currentOffset.left, top: tagOffset.top + currentOffset.top });\n            });\n\n        },\n\n        // DRAG STOPPED\n        onTagDragStopped : function(event, ui){\n            _this.isTagBeingDragged = false;\n            var $tag = $(this).data('addedTags', '');\n\n            if($tag.data('dropped')) {\n                $tag.draggable(\"destroy\");\n                $draggedTag.show().removeClass(hoveredClass);\n            }\n            else {\n                $tag.removeClass(hoveredClass).removeClass(disabledClass).setTagStyle();\n                $draggedTag.remove();\n            }\n\n            //  Added tags\n            _this.addedTags.forEach(function(addedTag){\n                var $addedTag = $(tagIdPrefix + '' + addedTag.id);\n                var $clonAddedTag = $(tagIdPrefix + '' + addedTag.id + '-clon');\n                // Restore added tag position\n                $addedTag = $addedTag.css({ position: '', left: '', top: '', 'z-index': '' });\n\n                // If dragged tag isn't drop, re-attach added tags and remove clones\n                if(!$tag.data('dropped')) {\n                    $addedTag = $addedTag.detach();\n                    $clonAddedTag.after($addedTag);\n                    $clonAddedTag.remove();\n                }\n            });\n            originalOffset = {};\n        }\n\n    };\n\n\n    var draggableOptions = {\n        revert: 'invalid',\n        helper: 'clone',\n        appendTo: '.urank-tagbox-container',\n        zIndex: 999,\n        start: draggableEvt.onTagDragStarted,\n        drag: draggableEvt.onTagDragged,\n        stop: draggableEvt.onTagDragStopped\n    };\n\n    ////////////////////////////////////////////////\n    // End DRAGGABLE EVENTS AND OPTIONS\n    ////////////////////////////////////////////////\n\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Internal functions\n\n    var extendKeywordsWithColorCategory = function(keywords, numCategories){\n\n        var extent = d3.extent(keywords, function(k){ return k.df; });\n        var range = (extent[1] - 1) * 0.1;   // / TAG_CATEGORIES;\n\n        keywords.forEach(function(k){\n            var colorCategory = parseInt((k.df - 1/*extent[0]*/) / range);\n            k['colorCategory'] = (colorCategory < numCategories) ? colorCategory : numCategories - 1;\n        });\n        return keywords;\n    };\n\n\n    var pinTagHints = function($tag) {\n        $tag.find('.'+documentHintClass).css('visibility', 'visible').pin(tagHintPinOptions.document);\n        $tag.find('.urank-doc-hint').pin(tagHintPinOptions.document);\n    };\n\n\n    var setTagProperties = function($tag) {\n        var index = $tag.attr(tagPosAttr);\n        var id = $tag.attr('tag-id');\n        $tag.off().on({\n            mousedown : function(event){ if(event.which == 1) event.stopPropagation(); },\n            mouseenter: function(event){ s.cb.onTagInCloudMouseEnter(index, id) },\n            mouseleave: function(event){ s.cb.onTagInCloudMouseLeave(index, id) },\n            click: function(event){ _tagClicked(index, id) }\n        });\n    \n        // if it's not clon of dropped tag, add class active and make it drggable\n        if(!$tag.hasClass(droppedClass)) {\n            // Set default style\n            $tag.addClass(activeClass);\n            // Set draggable if selection = 'drag'\n            if(s.options.selection === 'drag') {\n                if($tag.is('.ui-draggable'))\n                    $tag.draggable('destroy');\n                $tag.draggable(draggableOptions);    \n            }\n        } \n        // if ($tag.hasClass(hiddenClass))\n        //     $tag.hide();    \n    \n        // Reset hints visibility\n        $tag.find('.'+documentHintClass).css('visibility', '')\n    \n        return $tag.setTagStyle();\n    };\n\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Prototype methods\n\n    /**\n    * * @param {array of objects} keywords Description\n    */\n    var _build = function(keywords, data, colorScale){\n        this.keywords = extendKeywordsWithColorCategory(keywords.slice(), s.options.numCategories);\n        this.data = data;\n        this.colorScale = colorScale;\n\n        // Empty tag container and add appropriate class/es\n        $root = $(s.root).empty().addClass(tagcloudDefaultClass);\n\n        $tooltip = $('<div/>').appendTo($root).addClass(tooltipClass).width($root.width() - 10);\n        // $(\"<p><strong name='num-docs'></strong> items contain</p>\").appendTo($tooltip);\n        // // $(\"<p><strong name='num-docs'></strong> (<strong name='pctg-docs'></strong>) documents contain</p>\").appendTo($tooltip);\n        // $(\"<p><strong name='tag'></strong></p>\").appendTo($tooltip);\n        // // $(\"<p>Appears in <strong name='num-kw'></strong> phrases</p>\").appendTo($tooltip);\n        // // $(\"<p><strong name='num-kw'></strong> other keywords in proximity</p>\").appendTo($tooltip);\n\n        $(\"<p><strong name='tag'></strong></p>\").appendTo($tooltip);\n        $(\"<p>appears in <strong name='num-docs'></strong> items</p>\").appendTo($tooltip);\n\n        $tooltip.css('top', $root.position().top - $tooltip.fullHeight()).hide();\n\n        $('<div/>').appendTo($root).addClass(hiddenScrollbarClass);\n\n        $scrollable = $('<div/>').appendTo($root).addClass(hiddenScrollbarInnerClass)\n            .on('scroll', onRootScrolled);\n        $tagContainer = $('<div/>').appendTo($scrollable).addClass(tagContainerClass);\n\n        this.keywords.forEach(function(k, i){\n            // Append tag\n            k.color = _this.colorScale(k.colorCategory);\n            var $tag = $('<div/>', { \n                'id': 'urank-tag-' + k.id, \n                'tag-id': k.id || i,\n                'tag-pos': i,\n                'name': k.term \n            }).appendTo($tagContainer)\n                .addClass(tagClass + ' ' + activeClass/* + ' hint--info hint--left'*/)\n                .data({ \n                    'originalColor': _this.colorScale(k.colorCategory)\n                })\n                .html(k.term)\n                .hide()\n                .fadeIn((i+1)*20);\n            // Pie chart section for document hint\n            // var docPctg = parseInt((k.df * 100) / _this.data.length);\n            // if(docPctg > 0 && docPctg < 5) { docPctg = 5; }\n            // else {\n            //     if(docPctg%5 < 3) docPctg = docPctg - docPctg%5;\n            //     else docPctg = docPctg + 5 - docPctg%5;\n            // }\n            // var $docHint = $('<a/>', { class: 'urank-doc-hint urank-doc-hint-'+docPctg, href: '#' }).appendTo($tag);\n//            var $docHint = $('<div/>', { class: tagHintClass+' '+documentHintClass, id: 'urank-tag-pie-' + i }).appendTo($tag);\n//            pieOptions.data.content[0].value = k.df;\n//            pieOptions.data.content[1].value = _this.data.length - k.df || 0.1;\n//            var tagPie = new d3pie(tagPiePrefix+''+i, pieOptions);\n            // Red circle for keywords in proximity hint\n            if(k.num_keyphrases)\n                // $('<a/>', { class: keywordHintClass, 'data-content': k.num_keyphrases, href: '#' }).appendTo($tag);\n                $('<a/>', { class: keywordHintClass, 'data-content': k.df, href: '#' }).appendTo($tag);\n            // Add/remove icon\n            $('<a/>', { href: '#' }).appendTo($tag).addClass(addIconClass);\n            setTagProperties($tag);\n        });\n        return this;\n    };\n\n\n\n    var _reset = function() {\n        return this.build(this.keywords, this.data, this.colorScale, s.options);\n    };\n\n\n    var _hoverTag = function(index, id) {\n        var $tag = $(tagIdPrefix + '' + id);\n        if(!_this.tagHintMode && !_this.isTagBeingDragged) {\n            if(!$tag.hasClass(droppedClass))\n                $tag.addClass(hoveredClass).setTagStyle();\n                    //.css(tagStyle.hover);\n            pinTagHints($tag);\n            tooltipTimeOut = setTimeout(function(){\n                $tooltip.find(\"[name='num-docs']\").html(_this.keywords[index].df);\n                $tooltip.find(\"[name='pctg-docs']\").html(Math.floor(_this.keywords[index].df/_this.data.length * 100) + '%');\n                $tooltip.find(\"[name='tag']\").html(_this.keywords[index].term.toUpperCase());\n                $tooltip.find(\"[name='num-kw']\").html(_this.keywords[index].num_keyphrases);\n                $tooltip.fadeIn();\n                fadeOutTimeOut = setTimeout(function(){\n                    $tooltip.fadeOut();\n                }, 4000);\n            }, 500);\n        }\n    };\n\n\n    var _unhoverTag = function(index, id) {\n        var $tag = $(tagIdPrefix + '' + id);\n\n        if(!_this.tagHintMode && !_this.isTagBeingDragged) {\n            $tag.find('.'+documentHintClass).css('visibility', '');\n            //if(!$tag.hasClass(droppedClass)) {\n                $tag.removeClass(hoveredClass).setTagStyle();\n            //}\n            clearTimeout(tooltipTimeOut);\n            clearTimeout(fadeOutTimeOut);\n            $tooltip.hide();\n        }\n    };\n\n\n    var _tagClicked = function(index, id) {\n        var $tag = $(tagIdPrefix + '' + id);\n\n        if (s.options.selection === 'click' && !$tag.hasClass(droppedClass)) {\n            $clonTag = $tag.clone().attr('id', $tag.attr('id') + '-clon')\n                //.addClass('dropped');//.setTagStyle(); //change color for background\n                //css({ 'color': 'white', 'background-color': $tag.data('originalColor')});\n            $tag.after($clonTag).addClass('dropped');\n            s.cb.onTagSelected(index, id); // will append tag to tagbox and restyle clon here\n            return;\n        }\n\n        if(s.options.selection === 'drag' && !_this.isTagBeingDragged) {\n            // Add or remove tag from this.addedTags for multiple selection\n            if(_this.selectedTag) {\n                if($tag.hasClass(addableClass)) {\n                    // _this.addedTags.push($tag.attr(tagPosAttr));\n                    _this.addedTags.push({ 'index': index, 'id': id });\n                    $tag.addClass(addedClass).removeClass(addableClass).setTagStyle();\n                }\n                else if($tag.hasClass(addedClass)) {\n                    // _this.addedTags.splice(_this.addedTags.indexOf($tag.attr(tagPosAttr)), 1);\n                    indexToExclude = _.findIndex(_this.addedTags, function(tag) {\n                        return tag.id == id;\n                    })\n                    _this.addedTags.splice(indexToExclude, 1);\n                    $tag.addClass(addableClass).removeClass(addedClass).setTagStyle();                    \n                }\n            }\n            // \n            else {\n                s.cb.onTagInCloudClick(index, id);  // so that urank shows/hides items in the list and ranking\n                _this.selectedTag = index;\n                $tag.addClass(selectedClass).removeClass(hiddenClass).setTagStyle();\n\n                if(!$tag.hasClass(droppedClass)) {\n                    if($tag.is('.ui-draggable'))\n                        $tag.draggable('destroy');\n                    $tag.draggable(draggableOptions);\n                }\n\n                // SIBLINGS\n                var proxKeywords = _this.keywords[index].keywordsInProximity || {};\n                $tag.siblings().each(function(i, sibling){\n\n                    var $siblingTag = $(sibling);\n                    if($siblingTag.is('.ui-draggable'))\n                        $siblingTag.draggable('destroy');\n\n                    $siblingTag.find('.'+documentHintClass).off().css('visibility', 'hidden');\n\n                    // sibling tags that are not KW in proximity of current tag are dimmend and active class removed so they can't be dragged\n                    if(_.findIndex(proxKeywords, function(proxKw){ return proxKw.id == $siblingTag.attr('tag-id') }) === -1) {\n                        $siblingTag.addClass(disabledClass).removeClass(activeClass).setTagStyle();\n                    }\n                    else {                                      // Active tags are the ones co-occuring with the selected tag. A tooltip is added during proxKeywordsmode\n                        if(!$siblingTag.hasClass(droppedClass)) {\n                            $siblingTag.addClass(activeClass).addClass(addableClass);\n                            $siblingTag.show();\n                        }\n                    }\n                    pinTagHints($tag);\n                });\n                _this.tagHintMode = true;\n            }\n        } \n    };\n\n\n    /**\n\t *\tDetach tag from tag box and return it to container (tag cloud)\n\t *\n\t * */\n    var _restoreTag = function(index, id){\n\n        var $tag = $(tagIdPrefix + '' + id);                    // is in tagcloud\n        var $clonedTag = $(tagIdPrefix + '' + id + '-clon');    // is in tagbox, will be deleted sync\n        var $dummyTag = $clonedTag.clone();                     // need dummy for animation, clone is removed\n        $dummyTag.attr('id', 'dummy-tag-' + id);\n        console.log('Animating ' + $dummyTag.attr('id'));\n        //  Save offset in tagBox before detaching\n        var oldOffset = $clonedTag.offset();\n        var newOffset = $tag.offset();\n        // Detach tag from tag cloud, attach temporarily to body and place it in old position (in tagBox)\n        $dummyTag.appendTo('body')\n            .css({ position: 'absolute', top: oldOffset.top, left: oldOffset.left, 'z-index': 9999 });\n        // Animate tag moving from tag box to tag cloud\n        $dummyTag.animate({ top: newOffset.top, left: newOffset.left }, 800, 'swing', function() {\n            //  Detach from body after motion animation is complete and append to tag container again\n            $dummyTag.remove();\n            $tag.removeClass().addClass(tagClass + ' ' + activeClass); //.setTagStyle();\n            setTagProperties($tag);\n            // $tag = $tag.detach();\n            // $clonedTag.after($tag);\n            // $clonedTag.remove();\n            // $tag.css({ position: '', top: '', left: '', 'z-index': '' }).setTagStyle();\n            // setTagProperties($tag);\n        });\n    };\n\n\n    var _focusTag = function(keyword/*, newOffset*/) {\n        var $tag = $('.'+tagClass + '[tag-pos=' + keyword.index + ']');\n        $tag.addClass(focusedClass).removeClass(hiddenClass); //.show();\n\n        setTimeout(function(){\n            $tag.removeClass(focusedClass, 2000);\n        }, 5000);\n\n        $scrollable.scrollTo('.'+tagClass + '[tag-pos=' + keyword.index + ']', { offsetTop: 10 });\n        return this;\n    };\n\n\n    var _updateClonOfDroppedTag = function(index, id, queryColor) {\n        var $tag = $(tagIdPrefix + '' + id)\n            .data('queryColor', queryColor)\n            .removeClass(activeClass).removeClass(disabledClass).removeClass(selectedClass)\n            .addClass(droppedClass);\n        $tag.setTagStyle();\n        // setTagProperties($tag);\n        return this;\n    };\n\n\n\n    var _showTagsWithinRange = function(min, max) {\n        _this.keywords.forEach(function(k, i){\n            // class selector before id selector avoids hiding tags in tagbox. cloned tags remain visible\n            var $tag = $('.'+tagClass + '' + tagIdPrefix + '' + i);\n\n            if(k.df >= min && k.df <= max)\n                $tag.removeClass(hiddenClass); //.show();\n            else\n                $tag.addClass(hiddenClass); //.hide();\n        });\n    };\n\n    var _clearEffects = function() {\n\n        _this.selectedTag = undefined;\n        _this.addedTags = [];\n        if(_this.tagHintMode) {\n            $('.'+tagClass).each(function(i, tag){\n                var $tag = $(tag);\n                $tag.removeClass(disabledClass).removeClass(selectedClass).removeClass(hoveredClass).removeClass(addedClass).removeClass(addableClass)\n                setTagProperties($tag);\n            });\n            _this.tagHintMode = false;\n        }\n        return this;\n    };\n\n\n\n    var _clear = function() {\n        $root.empty();\n        return this;\n    };\n\n\n    var _destroy = function() {\n        $root.empty();\n        return this;\n    };\n\n\n    TagCloudDefault.prototype = {\n        build: _build,\n        reset: _reset,\n        restoreTag: _restoreTag,\n        hoverTag: _hoverTag,\n        tagClicked:_tagClicked,\n        unhoverTag: _unhoverTag,\n        focusTag: _focusTag,\n        updateClonOfDroppedTag: _updateClonOfDroppedTag,\n        showTagsWithinRange: _showTagsWithinRange,\n        clearEffects: _clearEffects,\n        clear: _clear,\n        destroy: _destroy\n    };\n\n    return TagCloudDefault;\n})();\n\nmodule.exports = TagCloudDefault;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/tagcloud/tagCloudDefault.js\n// module id = 19\n// module chunks = 0 1 2","var UsertagBox = (function(){\n\n\tvar _this, $root, $usertagbox;\n\tvar usertags, s;\n\n\tfunction UsertagBox(params){\n\t\t_this = this;\n\t    s = $.extend({\n\t        root: '',\n\t        attr: {},\n\t        options: {},\n\t        cb:{\n\t            onUsertagMouseEnter: function(index, id){},\n\t            onUsertagMouseLeave: function(index, id){},\n\t            onUsertagClick: function(index, id){},\n\t            onUsertagSelected: function(index, id){}\n\t        }\n\t    }, params);\n\t    this.usertags = [];\n\n\t   \t$root = $(s.root);\n\t}\n\n\tvar build = function(usertags, colors){\n\t\tthis.usertags = usertags;\n\n\t\t$root.attr('class', 'urank-usertagbox');\n\t\t$usertagbox = $('<div/>', { class: 'urank-usertagbox-inner' }).appendTo($root);\n\n\t\tthis.usertags.forEach(function(t, index) {\n\t\t\tvar $tag = $('<div/>', {\n\t\t\t\tid: 'urank-usertag-' + t.id,\n\t\t\t\t'utag-id': t.id,\n\t\t\t\t'utag-pos': index,\n\t\t\t\t'class': 'urank-usertag',\n\t\t\t\t'name': t.tag,\n\t\t\t\t'html': t.tag\n\t\t\t}).appendTo($usertagbox);\n\t\t\t// Bind event handlers and set style\n\t\t\t$tag.off()\n\t\t\t\t.on({\n\t\t\t\t\t'click': function(evt){\n\t\t\t\t\t\ts.cb.onUsertagSelected(index, t.id);\n\t\t\t\t\t},\n\t\t\t\t\t'mouseenter': function(evt){\n\t\t\t\t\t\ts.cb.onUsertagMouseEnter(index, t.id)\n\t\t\t\t\t},\n\t\t\t\t\t'mouseleave': function(evt){\n\t\t\t\t\t\ts.cb.onUsertagMouseLeave(index, t.id)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.css({\n\t\t\t\t\t'color': colors(t.tag),\n\t\t\t\t\t'font-size': (s.options.minFontSize + t.count * s.options.fontSizeGrowth)+'px'\t\n\t\t\t\t});\n\n\t\t});\n\t};\n\n\n\tvar selectUsertag = function(index, id, color) {\n\t\tvar $tag = $('#urank-usertag-' + id);\n\t\tvar $clone = $tag.clone().attr('id', 'urank-usertag-'+id+'-clon');\n\t\t$tag.after($clone);\n\t\t$tag.addClass('selected').css({\n\t\t\t'color': 'white',\n\t\t\t'background': color\n\t\t});\n\t};\n\n\n\tvar onUsertagMouseEntered = function(index, id){\n\t\tvar $tag = $('#urank-usertag-' + id);\n\t\tif(!$tag.hasClass('selected'))\n\t\t\t$tag.addClass('hovered');\n\t};\n\n\tvar onUsertagMouseLeft = function(index, id){\n\t\tvar $tag = $('#urank-usertag-' + id);\n\t\t$tag.removeClass('hovered');\n\t};\n\n\n\t\n\n\tUsertagBox.prototype = {\n\t\tbuild : build,\n\t\tselectUsertag: selectUsertag,\n\t\tonUsertagMouseEnter: onUsertagMouseEntered,\n\t\tonUsertagMouseLeave: onUsertagMouseLeft\n\t};\n\n\treturn UsertagBox;\n})()\n\nmodule.exports = UsertagBox;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/usertagBox.js\n// module id = 20\n// module chunks = 0 1 2","var VIEWS = require('../config/views');\n\nvar VisCanvas = (function(){\n\n    //  Settings\n    var _this, s = {};\n    // Classes\n    var viscanvasClass = 'urank-viscanvas',\n        viscanvasContainerClass = 'urank-viscanvas-container',\n        visCanvasMessageClass = 'urank-viscanvas-message',\n        hiddenScrollbarClass = 'urank-hidden-scrollbar',\n        hiddenScrollbarInnerClass = 'urank-hidden-scrollbar-inner';\n    // Helper\n    var $root = $(''), $scrollable = $(''), $visContainer = $(''), $visContainerSocial = $('');\n\n    var onScroll = function(event) {\n        event.stopPropagation();\n        s.cb.onScroll.call(this, _this, $(this).scrollTop());\n    };\n\n\n    function VisCanvas(params) {\n        _this = this;\n        s = $.extend(true, {\n            root: '',\n            options : {\n                view : 'ranking',\n                aes: {\n                    lightBackgroundColor: '',\n                    darkBackgroundColor: '',\n                    hideScrollbar: false\n                }\n            },\n            cb : {\n                onItemClicked: function(doc, i){},\n                onItemMouseEnter: function(doc, i){},\n                onItemMouseLeave: function(doc, i){},\n                onScroll: function(caller, scrollTop){}\n            }\n        }, params);\n        init();\n\n        var viscanvasView = VIEWS.VISCANVAS[s.options.view];\n        var viscanvasConf = _.omit(s, 'view');\n        viscanvasConf.root = '.'+viscanvasContainerClass;\n        this.vis = new viscanvasView(viscanvasConf);\n    }\n\n\n    function init(){\n        $root = $(s.root).empty().addClass(viscanvasClass);\n\n        //  Set scrolling\n        if(s.options.aes.hideScrollbar) {\n            $root.addClass(hiddenScrollbarClass);\n            $scrollable = $('<div/>').appendTo($root).addClass(hiddenScrollbarInnerClass);\n            $scrollable = $root.mCustomScrollbar(customScrollOptions);\n        }\n        else {\n            $scrollable = $root;\n        }\n        $scrollable.on('scroll', onScroll);\n        $visContainer = $('<div/>').appendTo($scrollable).addClass(viscanvasContainerClass);\n    };\n\n    var _build = function(data, height) {\n        // this.height = height;\n        // $root = $(s.root).empty().addClass(viscanvasClass);\n\n        // //  Set scrolling\n        // if(opt.misc.hideScrollbar) {\n        //     $root.addClass(hiddenScrollbarClass);\n        //     $scrollable = $('<div/>').appendTo($root).addClass(hiddenScrollbarInnerClass);\n        //     $scrollable = $root.mCustomScrollbar(customScrollOptions);\n        // }\n        // else {\n        //     $scrollable = $root;\n        // }\n        // $scrollable.on('scroll', onScroll);\n        // $visContainer = $('<div/>').appendTo($scrollable).addClass(viscanvasContainerClass).height(this.height);\n\n        // var viscanvasView = opt.view;\n        // var visOptions = {\n        //     root: '.'+viscanvasContainerClass,\n        //     onItemClicked: s.onItemClicked,\n        //     onItemMouseEnter: s.onItemMouseEnter,\n        //     onItemMouseLeave: s.onItemMouseLeave,\n        //     lightBackgroundColor: opt.customOptions.lightBackgroundColor,\n        //     darkBackgroundColor: opt.customOptions.darkBackgroundColor,\n        // };\n        // this.vis = new viscanvasView(visOptions);\n\n        this.height = height;\n        $visContainer.height(this.height);\n        this.vis.build(data, height);\n        return this;\n    };\n\n\n    var _update = function(params) {\n        $scrollable.scrollTo('top');\n        this.vis.update(params);\n        $visContainer.height(this.vis.getHeight());\n        return this;\n    };\n\n    var _resize = function(listHeight){\n        if(this.vis) this.vis.resize(listHeight);\n        return this;\n    };\n\n    var _clear = function(){\n        if(this.vis) this.vis.clear();\n    //    $root.append(\"<p class='\" + visCanvasMessageClass + \"'>\" + STR_NO_VIS + \"</p>\");\n        return this;\n    };\n\n    var _reset = function() {\n        if(this.vis) this.vis.reset();\n        $visContainer.height(this.height);\n        return this;\n    };\n\n    var _selectItem =function(id, index) {\n        if(this.vis) this.vis.selectItem(id, index);\n        return this;\n    };\n\n    var _deselectAllItems =function() {\n        if(this.vis) this.vis.deselectAllItems();\n        return this;\n    };\n\n    var _hoverItem = function(id, index) {\n        if(this.vis) this.vis.hoverItem(id, index);\n        return this;\n    };\n\n    var _unhoverItem = function(id, index) {\n        if(this.vis) this.vis.unhoverItem(id, index);\n        return this;\n    };\n\n    var _highlightItems = function(idsArray) {\n        if(this.vis) this.vis.highlightItems(idsArray);\n        return this;\n    };\n\n    var _clearEffects = function() {\n        if(this.vis) if(this.vis) this.vis.clearEffects();\n        $visContainer.css('height', '');\n        return this;\n    };\n\n    var _destroy = function() {\n        if(this.vis) this.vis.clear();\n        $root.removeClass(viscanvasClass+' '+hiddenScrollbarClass);\n        return this;\n    };\n\n    var _scrollTo = function(offset) {\n        $scrollable.off('scroll', onScroll)\n            .scrollTop(offset)\n            .on('scroll', onScroll);\n    };\n\n\n    VisCanvas.prototype = {\n        build: _build,\n        update: _update,\n        clear: _clear,\n        reset: _reset,\n        resize: _resize,\n        selectItem: _selectItem,\n        deselectAllItems: _deselectAllItems,\n        hoverItem: _hoverItem,\n        unhoverItem: _unhoverItem,\n        highlightItems: _highlightItems,\n        clearEffects: _clearEffects,\n        destroy: _destroy,\n        scrollTo: _scrollTo\n    };\n\n    return VisCanvas;\n})();\n\nmodule.exports = VisCanvas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/visCanvas.js\n// module id = 21\n// module chunks = 0 1 2","\nvar Globals = require('../../config/globals');\n\nvar Ranking = (function(){\n\n    var RANKING = {};\n    var s, _this;\n    var width, height, margin;\n    var x, y, color, xAxis, yAxis, xUpperLimit;\n    var svg;\n    var data;\n    var $root = $('');\n\n    //  Classes\n    var svgClass = 'urank-ranking-svg',\n        axisClass = 'urank-ranking-axis',\n        xClass = 'urank-ranking-x',\n        xAxisLabelClass = 'urank-ranking-label',\n        yClass = 'urank-ranking-y',\n        stackedbarClass = 'urank-ranking-stackedbar',\n        backgroundClass = 'urank-ranking-background',\n        lightBackgroundClass = 'urank-ranking-light-background',\n        darkBackgroundClass = 'urank-ranking-dark-background',\n        selectedClass = 'selected',\n        dimmedClass = 'dimmed',\n        barClass = 'urank-ranking-bar',\n        tuSectionClass = 'urank-tag-user-section';\n\n    // Id\n    var stackedbarPrefix = '#urank-ranking-stackedbar-';\n\n    function Ranking(params) {\n        _this = this;\n        s = $.extend({\n            root: '.urank-viscanvas-container',\n            attr : {},\n            options : {\n                aes: {\n                    lightBackgroundColor: '',\n                    darkBackgroundColor: ''\n                }\n            },\n            cb : {\n                onItemClicked: function(doc, i){},\n                onItemMouseEnter: function(doc, i){},\n                onItemMouseLeave: function(doc, i){}\n            }\n        }, params);\n        this.isRankingDrawn = false;\n        this.selectedItem = null;\n    }\n\n    RANKING.Settings = {\n        getExtendedData: function(params){\n            var ranking = params.ranking.slice();\n            var features = params.features;\n            var conf = params.conf;\n            var rankBy = params.conf.rankBy;\n            var a = [];\n            var colors = {};\n            // Get tag name -> color mapping\n            for(var fkey in features) {\n                features[fkey].forEach(function(tag){\n                    colors[tag.name] = tag.color;\n                })\n            }\n\n            ranking.forEach(function(d, i) {\n                d.bars = [];\n                var x0 = 0.0;\n                conf.rs.forEach(function(rs, j) {\n                    if(rs.active) {\n                        var RS = rs.name;\n                        // x0 = rankBy === 'overall' ? x0 : j;\n                        d.ranking[RS].details.forEach(function(item) {\n                            var x1 = x0 + item.score; \n                            d.bars.push({\n                                desc: item.name,\n                                x0: x0,\n                                x1: x1,\n                                color: colors[item.name]\n                            });\n                            x0 = x1;\n                        });\n                        // update baseline x0 for next RS\n                        x0 = rankBy === 'overall' ? x0 : j+1;\n                    }\n                });\n                a.push(d);\n            });\n            return a;\n        },\n        getXUpperLimit: function(conf) {\n            if(conf.rankBy === 'overall')\n                return 1.0;\n            var x_limit = conf.rs.filter(function(rs){ return rs.active }).length;\n            return x_limit;\n        }\n    };\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    RANKING.Evt = {};\n\n\n    RANKING.Evt.itemClicked = function(d, i){\n        d3.event.stopPropagation();\n        s.cb.onItemClicked.call(this, d[s.attr.id], i);\n    };\n\n    RANKING.Evt.itemMouseEntered = function(d, i){\n        d3.event.stopPropagation();\n        s.cb.onItemMouseEnter.call(this, d[s.attr.id], i);\n    };\n\n    RANKING.Evt.itemMouseLeft = function(d, i){\n        d3.event.stopPropagation();\n        s.cb.onItemMouseLeave.call(this, d[s.attr.id], i);\n    };\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    RANKING.Render = {\n\n        /******************************************************************************************************************\n        *\n        *\tDraw ranking at first instance\n        *\n        * ***************************************************************************************************************/\n        drawNew: function(data, containerHeight){\n            margin = { top: 0, bottom: 0, left: 0, right: 0 };\n            width = $root.width() - margin.left - margin.right;\n            height = containerHeight;\n            xUpperLimit = 1;\n\n            // Define scales\n            x = d3.scale.linear()\n                .domain([0, xUpperLimit])\n                .rangeRound( [0, width] );\n\n            y = d3.scale.ordinal()\n                .domain(data.map(function(d){ return d[s.attr.id]; }))\n                .rangeBands( [0, height]);\n\n            // Define axis' function\n            xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\")\n                .tickValues('');\n\n            yAxis = d3.svg.axis()\n                .scale(y)\n                .orient(\"left\")\n                .tickValues(\"\");\n\n            // Draw chart main components\n            //// Add svg main components\n            svg = d3.select(s.root).append(\"svg\")\n                .attr(\"class\", svgClass)\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            svg.append(\"g\")\n                .attr(\"class\", xClass + ' ' + axisClass)\n                .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n                .call(xAxis)\n                .selectAll('text');\n\n            svg.append(\"g\")\n                .attr(\"class\", yClass +' '+axisClass)\n                .call(yAxis)\n                .selectAll(\"text\");\n\n            var stackedBars = svg.selectAll('.'+stackedbarClass)\n            .data(data).enter()\n            .append(\"g\")\n            .attr(\"class\", stackedbarClass)\n            .attr(\"id\", function(d){ return \"urank-ranking-stackedbar-\" + d[s.attr.id]; })\n            .attr( \"transform\", function(d) {return \"translate(0, \" + y(d[s.attr.id]) + \")\"; })\n            .on('click', RANKING.Evt.itemClicked)\n            .on('mouseover', RANKING.Evt.itemMouseEntered)\n            .on('mouseout', RANKING.Evt.itemMouseLeft);\n\n            stackedBars.append('rect')\n                .attr('class', function(d, i){ return (i%2) ? backgroundClass+' '+darkBackgroundClass : backgroundClass+' '+lightBackgroundClass; })\n                .attr('x', 0)\n                .attr('width', width)\n                .attr('height', y.rangeBand())\n                .style('fill', function(d, i){\n                if(s.options.aes.lightBackgroundColor != '' && s.options.aes.darkBackgroundColor != '') {\n                    if(i%2) return s.options.aes.darkBackgroundColor;\n                    return s.options.aes.lightBackgroundColor;\n                }\n                return  '';\n            });\n            return this;\n        },\n\n        /******************************************************************************************************************\n        *\n        *\tRedraw updated ranking and animate with transitions to depict changes\n        *\n        * ***************************************************************************************************************/\n        redrawUpdated: function(params){\n            data = RANKING.Settings.getExtendedData(params);   //(params.ranking, ranking_conf, params.colorScale);\n//            width = $root.width();\n            RANKING.Render.updateCanvasDimensions(params.listHeight);\n\n            // Redefine x & y scales' domain\n            d3.select(s.root).select('.'+svgClass).attr(\"width\", width)\n            svg.attr(\"width\", width);\n\n            // xUpperLimit =  data[0].ranking.total_score * 2.0;\n            xUpperLimit =  RANKING.Settings.getXUpperLimit(params.conf);\n            x.rangeRound( [0, width] ).domain([0, xUpperLimit]).copy();\n\n//            y.rangeBands( [0, height], .02);\n            y.rangeBands( [0, height]);\n            y.domain(data.map(function(d){ return d[s.attr.id] })).copy();\n\n            var transition = svg.transition().duration(750);\n            var delay = function(d, i) { return i * 50; };\n\n            transition.select('.'+xClass+'.'+axisClass).call(xAxis)\n                .selectAll(\"g\").delay(delay);\n\n            transition.select('.'+yClass+'.'+axisClass).call(yAxis)\n                .selectAll(\"g\").delay(delay);\n\n            RANKING.Render.drawStackedBars();\n\n            ////////////////////////////////////////\n            // CHECK IF THIS NEEDS TO BE ENABLED!!\n            ////////////////////////////////////////\n            // if(opt.ranking.social)\n            //     RANKING.Render.drawTagsAndUsersHints(rankingModel.getQuery(), rankingModel.getMaxTagFrequency());\n\n            return this;\n        },\n\n\n\n        /******************************************************************************************************************\n        *\n        *\tDraw stacked bars either on draw or update methods. Animate with width transition\n        *\n        * ***************************************************************************************************************/\n        drawStackedBars: function(){\n            svg.selectAll('.'+stackedbarClass).data([]).exit();\n            svg.selectAll('.'+stackedbarClass).remove();\n            //svg.selectAll('.'+stackedbarClass).data(data).enter();\n\n            setTimeout(function(){\n\n                var stackedBars = svg.selectAll('.'+stackedbarClass)\n                    .data(data).enter()\n                    .append(\"g\")\n                    .attr(\"class\", stackedbarClass)\n                    .attr(\"id\", function(d){ return \"urank-ranking-stackedbar-\" + d[s.attr.id]; })\n                    .attr( \"transform\", function(d) {return \"translate(0, \" + y(d[s.attr.id]) + \")\"; })\n                    .on('click', RANKING.Evt.itemClicked)\n                    .on('mouseover', RANKING.Evt.itemMouseEntered)\n                    .on('mouseout', RANKING.Evt.itemMouseLeft);\n\n                stackedBars.append('rect')\n                    .attr('class', function(d, i){ return (i%2) ? backgroundClass+' '+darkBackgroundClass : backgroundClass+' '+lightBackgroundClass; })\n                    .attr('x', 0)\n                    .attr('width', width)\n                    .attr('height', y.rangeBand())\n                    .style('fill', function(d, i){\n                        if(s.options.aes.lightBackgroundColor != '' && s.options.aes.darkBackgroundColor != '') {\n                            if(i%2) return s.options.aes.darkBackgroundColor;\n                            return s.options.aes.lightBackgroundColor;\n                        }\n                        return  '';\n                    });\n\n                stackedBars.selectAll('.'+barClass)\n                    .data(function(d) { return d.bars })\n                    .enter()\n                    .append(\"rect\")\n                    .attr(\"class\", barClass)\n                    .attr(\"height\", y.rangeBand())\n                    .attr(\"x\", function(d) { return x(d.x0); })\n                    .attr(\"width\", 0)\n                    .attr('transform', 'translate(0, 0.2)')\n                    .style(\"fill\", function(d) { return d.color; });\n\n                var bars = stackedBars.selectAll('.'+barClass);\n\n                var getBarWidth = function(d) {\n                    var barWidth = x(d.x1) - x(d.x0) - 0.2;\n                    return barWidth > 0 ? barWidth : 0;    \n                }\n                \n                var t0 = bars.transition()\n                    .duration(800)\n                    .attr({ 'width': function(d) { return getBarWidth(d) } });\n\n            }, 800);\n            return this;\n        },\n\n        /******************************************************************************************************************\n        *\n        *\tDraw minimal views for tag- and user-based recommendations\n        *\n        * ***************************************************************************************************************/\n        drawTagsAndUsersHints: function(query, maxTagFreq) {\n\n            setTimeout(function(){\n\n                var tagHintWidth = query.length * 6 + 6;\n                var userHintWidth = 24;\n                var xTagHintOffset = x(xUpperLimit) - tagHintWidth - userHintWidth;\n                var xUserHintOffset = x(xUpperLimit) - userHintWidth;\n                var maxBarHeight = y.rangeBand();\n\n                // Define scales\n                var xTU = d3.scale.ordinal().domain(query.map(function(q){ return q.stem; })).rangeBands( [0, tagHintWidth-6], .2);\n                var yTU = d3.scale.linear().domain([0, maxTagFreq]).rangeRound([maxBarHeight, 0]);\n\n                // Define axis' function\n                var xAxisTU = d3.svg.axis().scale(xTU).orient(\"bottom\").tickValues('');\n                var yAxisTU = d3.svg.axis().scale(yTU).orient(\"left\").tickValues('');\n\n                var stackedbars = svg.selectAll('.'+stackedbarClass);\n\n                var tagHints = stackedbars.append('g')\n                    .attr('width', tagHintWidth)\n                    .attr('height', maxBarHeight)\n                    .attr(\"transform\", function(d, i){ \"translate(\" + xTagHintOffset + \",\" + y(i) + \")\" });\n\n                // draw x axis\n                tagHints.append('g')\n                    .attr('class', xClass + ' ' + axisClass)\n                    .attr('width', xTU.rangeBand())\n                    .attr('transform', function(d, i){ return 'translate(' + xTagHintOffset + ',' + maxBarHeight + ')' })\n                    .call(xAxisTU)\n                    .selectAll('text');\n\n                // draw y axis\n                tagHints.append('g')\n                    .attr('class', yClass + ' ' + axisClass)\n                    .attr('height', maxBarHeight)\n                    .attr('transform', function(d, i){ return 'translate(' + xTagHintOffset + ',0)' })\n                    .call(yAxisTU)\n                    .selectAll('text');\n\n                // draw vertical tag bars\n                tagHints.selectAll('.tag-bar')\n                    .data(function(d) { return d.tags })\n                    .enter()\n                    .append(\"rect\")\n                    .attr(\"class\", 'tag-bar')\n                    .attr(\"x\", function(t) { return xTagHintOffset + xTU(t.stem); })\n                    .attr(\"width\", xTU.rangeBand())\n                    .attr(\"y\", function(t) { return yTU(t.tagged); })\n                    .attr(\"height\", function(t){ return maxBarHeight - yTU(t.tagged); })\n                    .style(\"fill\", function(t) { return t.color; });\n\n                // draw user hint\n                var userHints = stackedbars.append('g')\n                    .attr('class', 'urank-ranking-user-hint')\n                    .attr('transform', function(d, i){ 'translate(' + xUserHintOffset + ',' + y(i) + ')' });\n\n                userHints.append('svg:image')\n                    .attr('xlink:href', function(d){ return d.ranking.tuMisc.users > 0 ? '../media/user.png' : '' })\n                    .attr('x', xUserHintOffset)\n                    .attr('width', 13)\n                    .attr('y', 12)\n                    .attr('height', 13)\n\n                userHints.append('text')\n                    .attr('dx', xUserHintOffset + 9)\n                    .attr('dy', 15)\n                    .text(function(d){ return d.ranking.tuMisc.users > 0 ? d.ranking.tuMisc.users : '' });\n\n            }, 801);\n\n            return this;\n        },\n\n        /******************************************************************************************************************\n        *\n        *\tCreate drop shadow for click effect on bars\n        *\n        * ***************************************************************************************************************/\n        createShadow: function(){\n            // filters go in defs element\n            var defs = svg.append(\"defs\");\n            // create filter with id #drop-shadow\n            // height=130% so that the shadow is not clipped\n            var filter = defs.append(\"filter\")\n            .attr(\"id\", \"drop-shadow\")\n            .attr(\"height\", \"130%\");\n            // SourceAlpha refers to opacity of graphic that this filter will be applied to\n            // convolve that with a Gaussian with standard deviation 3 and store result\n            // in blur\n            filter.append(\"feGaussianBlur\")\n                .attr(\"in\", \"SourceAlpha\")\n                .attr(\"stdDeviation\", 2)\n                .attr(\"result\", \"blur\");\n            // translate output of Gaussian blur to the right and downwards with 2px\n            // store result in offsetBlur\n            filter.append(\"feOffset\")\n                .attr(\"in\", \"blur\")\n                .attr(\"dx\", 0)\n                .attr(\"dy\", 2)\n                .attr(\"result\", \"offsetBlur\");\n            // overlay original SourceGraphic over translated blurred opacity by using\n            // feMerge filter. Order of specifying inputs is important!\n            var feMerge = filter.append(\"feMerge\");\n            feMerge.append(\"feMergeNode\").attr(\"in\", \"offsetBlur\")\n            feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\");\n            return this;\n        },\n\n        /******************************************************************************************************************\n        *\n        *\tCreate drop shadow for click effect on bars\n        *\n        * ***************************************************************************************************************/\n        createBarHoverGradient: function(){\n            var defs = svg.append(\"defs\");\n            var linearGradient = defs.append('linearGradient').attr('id', 'bar-shadow').attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n            // linearGradient.append('stop').attr('offset', '25%').style('stop-color', 'rgba(150,150,150,0.3)');\n            // linearGradient.append('stop').attr('offset', '75%').style('stop-color', 'rgba(150,150,150,0.6)');\n            // linearGradient.append('stop').attr('offset', '100%').style('stop-color', 'rgba(150,150,150,0.3)');\n            linearGradient.append('stop').attr('offset', '100%').style('stop-color', 'rgba(200,200,200,1)');\n            return this;\n        },\n\n        /*****************************************************************************************************************\n        *\n        *\tAdjust height of svg and other elements when the ranking changes\n        *\n        * ***************************************************************************************************************/\n        updateCanvasDimensions: function(listHeight){\n            height = listHeight;\n            y.rangeBands(height, .01);\n\n            d3.select(svg.node().parentNode)    // var svg = svg > g\n                .attr('height', height + margin.top + margin.bottom);\n\n            svg.attr(\"height\", height + 30)\n                .attr(\"transform\", \"translate(\" + (margin.left) + \", 0)\");\n\n            // update axes\n            svg.select('.'+xClass+'.'+axisClass).attr(\"transform\", \"translate(0,\" + (height) + \")\").call(xAxis.orient('bottom'));\n            return this;\n        },\n\n        /*****************************************************************************************************************\n        *\n        *\tRedraw without animating when the container's size changes\n        *\n        * ***************************************************************************************************************/\n        resizeCanvas: function(containerHeight) {\n\n            //  Resize container if containerHeight is specified\n            if(containerHeight)\n                $root.css('height', containerHeight);\n\n            //  Recalculate width\n            width = $root.width() - margin.left - margin.right;\n\n            x.rangeRound([0, width]);\n            y.rangeBands(height, .02);\n\n            d3.select(svg.node().parentNode).attr('width', width + margin.left + margin.right);\n            svg.attr(\"width\", width);\n\n            svg.selectAll('.' + darkBackgroundClass)\n                .attr('width', width)\n            svg.selectAll('.' + lightBackgroundClass)\n                .attr('width', width)\n\n            // update x-axis\n            svg.select('.'+xClass + '.'+axisClass).call(xAxis.orient('bottom'));\n\n            // Update bars\n            svg.selectAll('.'+stackedbarClass).attr('width', width);\n            svg.selectAll('rect.'+backgroundClass).attr('width', width);\n\n            svg.selectAll('.'+barClass)\n                .attr(\"x\", function(d) { return x(d.x0); })\n                .attr(\"width\", function(d) { return x(d.x1) - x(d.x0); });\n            return this;\n        }\n    };\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //  Prototype methods\n\n    var _build = function(data, containerHeight) {\n        $root = $(s.root);\n        _this.originalData = data;\n        _this.originalHeight = containerHeight;\n        RANKING.Render.drawNew(data, containerHeight).createBarHoverGradient();\n        return this;\n    }\n\n\n    var _update = function(params){\n        var updateFunc = {};\n        updateFunc[Globals.RANKING_STATUS.new] = RANKING.Render.redrawUpdated;\n        updateFunc[Globals.RANKING_STATUS.update] = RANKING.Render.redrawUpdated;\n        updateFunc[Globals.RANKING_STATUS.unchanged] = RANKING.Render.redrawUpdated;\n        updateFunc[Globals.RANKING_STATUS.no_ranking] = _this.reset;\n        updateFunc[params.status].call(this, params);\n        return this;\n    };\n\n    var _clear = function(){\n        this.isRankingDrawn = false;\n        $root.empty();\n        return this;\n    };\n\n\n    var _reset = function() {\n        _this.clear();\n        _this.build(_this.originalData, _this.originalHeight);\n        return this;\n    };\n\n    var _selectItem = function(id, index){\n        _this.selectedItem = id;\n        svg.selectAll('.'+stackedbarClass).style('opacity', 0.2);\n        svg.select(stackedbarPrefix + '' + id).style('opacity', 1).select('.'+backgroundClass).style('fill', 'rgba(150,150,150,.5)');\n        return this;\n    };\n\n    var _highlightItems = function(ids) {\n        svg.selectAll('.'+stackedbarClass).style('opacity', function(d){ return (ids.indexOf(d[s.attr.id]) > -1) ? 1 : 0.2 });\n        return this;\n    };\n\n\n    var _deSelectAllItems = function(){\n        _this.selectedItem = undefined;\n        svg.selectAll('.'+stackedbarClass).style('opacity', '')\n            .select('.'+backgroundClass).style('fill', '');\n        return this;\n    };\n\n\n    var _hoverItem = function(id, index) {\n        svg.select(stackedbarPrefix +''+ id).selectAll('.'+backgroundClass).style('fill', 'url(#bar-shadow)')\n        svg.select(stackedbarPrefix +''+ id).selectAll('.'+barClass)\n            // .attr('transform', 'translate(0, 0.1)')\n           // .style('filter', 'url(#drop-shadow)')\n            .text(function(d){ return d.score });\n        return this;\n    };\n\n\n    var _unhoverItem = function(id, index) {\n        if(!_this.selectedItem) {\n            svg.select(stackedbarPrefix +''+ id).selectAll('.'+backgroundClass).style('fill', '')\n            svg.select(stackedbarPrefix +''+ id).selectAll('.'+barClass)\n                // .attr('transform', 'translate(0, 0.2)')\n                .style('filter', '')\n                .text('');\n        }\n        return this;\n    };\n\n\n    var _clearEffects = function() {\n        this.deselectAllItems();\n        return this;\n    };\n\n\n    //  Redraw without animating when the container's size changes\n    var _resize = function(containerHeight){\n        if(this.isRankingDrawn) RANKING.Render.resizeCanvas(containerHeight);\n        return this;\n    };\n\n    var _getHeight = function() {\n        return $('.'+svgClass).height();\n    };\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    Ranking.prototype = {\n        build: _build,\n        update: _update,\n        clear: _clear,\n        reset: _reset,\n        selectItem: _selectItem,\n        deselectAllItems : _deSelectAllItems,\n        hoverItem: _hoverItem,\n        unhoverItem: _unhoverItem,\n        highlightItems: _highlightItems,\n        clearEffects: _clearEffects,\n        resize: _resize,\n        getHeight: _getHeight\n    };\n\n    return Ranking;\n})();\n\n\nmodule.exports = Ranking;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/urank/js/views/viscanvas/ranking.js\n// module id = 22\n// module chunks = 0 1 2","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./conf_navigator_eval/static/conf_navigator_eval/css/style.scss\n// module id = 25\n// module chunks = 0 3","var ServerConnector = (function(){\n\tvar host = '/urank/cn_urank_eval';\n\n\tvar sendRrequest = function(options, cb){\n\t\t$.ajax(options)\n\t\t.fail(function(jqXHR, textStatus){\n\t        console.log(textStatus);\n\t    }).done(function(resp) {\n\t        console.log('ServerConnector: successful request');\n\t        console.log(resp);\n\t        if(cb) cb(resp.results);\n\t    });\n\t};\n\n\tvar startFirstTask = function(){\n\t\twindow.location = host + '/set-task/';\n\t};\n\n\n\tvar submitTask = function(params){\n\t\tsendRrequest({\n\t\t\ttype: 'POST',\n\t\t\turl: host + '/submit-task/',\n\t\t\tdata: JSON.stringify(params),\n\t\t\tcontentType: '\"application/x-www-form-urlencoded\"'\n\t\t}, function(){\n\t\t\twindow.location = host + '/questions/'\n\t\t})\n\t};\n\n\tvar submitQuestions = function(params){\n\t\tsendRrequest({\n\t\t\ttype: 'POST',\n\t\t\turl: host + '/submit-questions/',\n\t\t\tdata: JSON.stringify(params),\n\t\t\tcontentType: '\"application/x-www-form-urlencoded\"'\t\t\t\n\t\t}, function(){\n\t\t\twindow.location = host + '/set-task/'\n\t\t});\n\t};\n\n\tvar submitFinalSurvey = function(params){\n\t\tsendRrequest({\n\t\t\ttype: 'POST',\n\t\t\turl: host + '/submit-final-survey/',\n\t\t\tdata: JSON.stringify(params),\n\t\t\tcontentType: '\"application/x-www-form-urlencoded\"'\t\t\t\n\t\t}, function(){\n\t\t\twindow.location = host + '/finish-task/'\n\t\t});\n\t}\n\n\tvar bookmarkCN = function(content_id){\n\t\tsendRrequest({\n\t\t\turl: host + '/bookmark-cn/' + content_id\n\t\t}, function(){\n\t\t\tconsole.log('Bookmarked paper #' + content_id + ' in CN')\n\t\t})\n\t};\n\n\tvar unbookmarkCN = function(content_id){\n\t\tsendRrequest({\n\t\t\turl: host + '/unbookmark-cn/' + content_id\n\t\t}, function(){\n\t\t\tconsole.log('Unbookmarked paper #' + content_id + ' in CN')\n\t\t})\n\t}\n\n\treturn {\n\t\tstartFirstTask: startFirstTask,\n\t\tsubmitTask: submitTask,\n\t\tsubmitQuestions: submitQuestions,\n\t\tsubmitFinalSurvey: submitFinalSurvey,\n\t\tbookmarkCN: bookmarkCN,\n\t\tunbookmarkCN: unbookmarkCN\n\t}\n\n})();\n\nmodule.exports = ServerConnector;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./conf_navigator_eval/static/conf_navigator_eval/js/server-connector.js\n// module id = 26\n// module chunks = 0 3","\nvar Urank = require('urank');\nvar server = require('./server-connector');\nvar ActionLogger = require('./action-logger')\n\nmodule.exports = (function(){\n    var logger = new ActionLogger();\n    var bookmarks = [];  // { id, pos, title }\n\n    var $message = $('.processing-message'),\n        $numResultsMsg = $('.num-results-msg'),\n        $bookmarks = $('.control-panel .container .bookmark-area'),\n        $bookmarkTitle = $('.control-panel h4'),\n        $btnDone = $('#btn-done');\n\n    var rs = $('#rs').text();\n    var options = require('./urank_options')(rs);\n    // console.log(urank_options);\n\n\n    var callbacks = {\n        // Click on item on list or ranking\n        onItemClicked: function(obj){\n            // { index , id, title }\n            logger.log({\n                'action': logger.action.documentClicked, 'pos': obj.index+1, 'id': obj.id, 'description': obj.title\n            });\n        },\n        // Bookmark or unbookmark\n        onFaviconClicked: function(obj) {\n            // { index, id, title, state }\n            var action;\n            var pos = parseInt(obj.index + 1);\n            if(obj.state === 'on') {\n                bookmarks.push({ 'id': obj.id, 'pos': pos, 'title': obj.title });\n                // assign action\n                action = logger.action.documentBookmarked;\n                // call server to bookmark in CN\n                server.bookmarkCN(obj.id);\n            } else {\n                var idx = _.findIndex(bookmarks, function(bm){ return bm.id === obj.id });\n                bookmarks.splice(idx, 1);\n                // assign action\n                action = logger.action.documentUnbookmarked;\n                // call server to unbookmark in CN\n                server.unbookmarkCN(obj.id);\n            }\n            console.log('Pos in main = ' + pos);\n            // console.log(bookmarks);\n            // log action\n            logger.log({ 'action': action, 'pos': pos, 'id': obj.id, 'description': obj.title })\n        },\n        onRatingClicked: function(documentId, index, rating) {\n            bookmarks[bookmarks.length - 1].rating = rating;\n            console.log(bookmarks);\n        },\n        onTagSelected: function(tag){\n            var action = logger.action.tagSelected;\n            var obj = { 'action': action, 'pos': parseInt(tag.index)+1, 'id': tag.id, 'description': tag.type+'-'+tag.name }\n            console.log(obj);\n            logger.log(obj);\n        },\n        onTagWeightChanged: function(tag){\n            var action = logger.action.tagWeightChanged;\n            var obj = { 'action': action, 'pos': parseInt(tag.index)+1, 'id': tag.id, 'description': tag.type+'-'+tag.name+'-'+tag.weight }\n            console.log(obj);\n            logger.log(obj);\n        },\n        onTagDeleted: function(tag){\n            var action = logger.action.tagDeleted;\n            var obj = { 'action': action, 'pos': parseInt(tag.index)+1, 'id': tag.id, 'description': tag.type+'-'+tag.name }\n            console.log(obj);\n            logger.log(obj);\n        },\n        onRankingWeightChanged: function(rsWeight){\n            var action = logger.action.rsWeightChanged;\n            var obj = { 'action':action, 'pos': null, 'id': null, 'description': rsWeight }\n            logger.log(obj);\n            console.log(obj);\n        }\n\n\n    }\n    options.callbacks = callbacks;\n    console.log(options);\n    var urank = new Urank(options);\n    urank.load();\n  \n\n    $btnDone.click(function(evt){\n        evt.stopPropagation();\n        if(bookmarks.length < 2) {\n            alert('Please bookmark at least 2 papers');\n            return;\n        }\n        var logs = logger.getAllLogs();\n        var elapsedTime = logger.getElapsedTime();\n        server.submitTask({ \n            action_logs: logs,\n            bookmarks: bookmarks,\n            elapsed_time: elapsedTime\n        });\n    });\n\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./conf_navigator_eval/static/conf_navigator_eval/js/main.js\n// module id = 30\n// module chunks = 0","// JS\nrequire('../conf_navigator_eval/static/conf_navigator_eval/js/main');\n\n// SCSS\nrequire('../conf_navigator_eval/static/conf_navigator_eval/css/style.scss');\nrequire('../plugins/urank/css/urank.scss');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/main_conf_nav_eval.js\n// module id = 43\n// module chunks = 0","\nvar ActionLogger = (function(){\n\n    var _this;\n    var storageKey = 'urank-test';\n\n    function ActionLogger(){\n        _this = this;\n        this.action = {\n            // urank\n            tagHovered: 'tag hovered',\n            tagSelected: 'tag selected',\n            tagDropped: 'tag dropped',\n            tagWeightChanged: 'tag weight changed',\n            tagDeleted: 'tag deleted',\n            documentClicked: 'document clicked',\n            documentBookmarked: 'document bookmarked',\n            documentUnbookmarked: 'document unbookmarked',\n            documentWatched: 'document watched',\n            documentUnwatched: 'document unwatched',\n            frequencyChanged: 'frequency range changed',\n            wordSearched: 'keyword searched',\n            rsWeightChanged: 'RS weight changed',\n            reset: 'reset'\n        };\n        this.buffer = [];\n        this.start_tmsp = $.now();\n    }\n\n\n    ActionLogger.prototype = {\n        action: function(){\n            return this.action;\n        },\n\n        log: function(params) {\n            var timestamp = $.now() - this.start_tmsp;\n            this.buffer.push({\n                timestamp: timestamp,\n                action: params.action,\n                pos: params.pos || -1,\n                id: params.id || -1,\n                description: params.description || ''\n            });\n            console.log(\"Logged \" + params.action + ' (' + timestamp + ')');\n        },\n \n        getAllLogs: function(){\n            return this.buffer;\n        },\n\n        getElapsedTime: function() {\n            return $.now() - this.start_tmsp;\n        }\n    };\n    return ActionLogger;\n})();\n\nmodule.exports = ActionLogger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./conf_navigator_eval/static/conf_navigator_eval/js/action-logger.js\n// module id = 45\n// module chunks = 0","var default_options = {\n    elem : {\n        tagBoxRoot: '#tagbox',\n        contentListRoot: '#contentlist',\n        visCanvasRoot: '#viscanvas',\n        tagCloudRoot: '#tagcloud',\n        neighborscloudRoot: '#neighborscloud'\n    },\n    dataAttr : {\n        id : 'id',\n        title : 'title',\n        description : 'abstract',\n        pretty_title: 'pretty_title',\n        pretty_description: 'pretty_abstract',\n        show :[\n            { name: 'author_list', pretty: 'Authors', type: 'string', exclude_null : true, exlude_empty : true },\n            { name: 'content_type', pretty: 'Type', type: 'string', exclude_null : true, exlude_empty : true }\n        ]\n    },\n    features:{\n        neighbors: true\n    },\n    dataConnector : {\n        urls: {\n            get_data: '/urank/cn_urank_eval/get-talks/',\n            get_keywords: '/urank/cn_urank_eval/get-keywords/',\n            get_neighbors: '/urank/cn_urank_eval/get-neighbors/',\n            urank: '/urank/cn_urank_eval/urank_service/'\n        }\n    },\n    keywordExtractor: {\n        useLocal: false,\n        minDocFrequency: 1,\n        minRepetitionsInDocument: 1,\n        maxKeywordDistance: 3,\n        minRepetitionsProxKeywords: 2\n    },\n    rankingModel: {\n        useLocal : false\n        // useLocal : true\n    },\n    tagCloud: {\n        numCategories : 1\n    },\n    tagBox: {\n\n    },\n    docViewer: {\n        attrToShow: [{\n            attr: 'author_list', label: 'Authors'\n        },{\n            attr: 'content_type', label: 'Type'\n        },{\n            attr: 'session.name', label: 'Session'\n        },{\n            attr: 'date', label: 'Date', style: 'inline'\n        },{\n            attr: 'begin_time', label: 'Begin Time', style: 'inline'\n        },{\n            attr: 'end_time', label: 'End Time', style: 'inline'\n        }] \n    },\n    rankingRepresentation: {\n        split_by: 'rs'                  // rs || feature\n    }\n};\n\nvar rs_options = {\n    'CB': {\n        elem: {\n            neighborscloudRoot: ''      // disable neighbors cluoud\n        },\n        features: {\n            keywords: true,\n            neighbors: false\n        },\n        rankingModel: {\n            rankBy: 'CB',\n            rs : [\n                {\n                    name: 'CB',\n                    active: true,\n                    weight : 1.0,\n                    attr : 'keywords',\n                    pretty: 'Content Ranking'\n                },\n                {\n                    name: 'CF',\n                    active: false,\n                    weight : 0,\n                    attr : 'neighbors',\n                    pretty: 'Social Ranking'\n                }\n            ]\n        }\n    },\n    'SF': {\n        elem: {\n            tagCloudRoot: ''            // disable tagcloud\n        },\n        features: {\n            keywords: false,\n            neighbors: true\n        },\n        rankingModel: {\n            rankBy: 'CF',\n            rs : [\n                {\n                    name: 'CB',\n                    active: false,\n                    weight : 0,\n                    attr : 'keywords',\n                    pretty: 'Content Ranking'\n                },\n                {\n                    name: 'CF',\n                    active: true,\n                    weight : 1.0,\n                    attr : 'neighbors',\n                    pretty: 'Social Ranking'\n                }\n            ]\n        }\n    },\n    'CB_SF': {\n        features: {\n            keywords: true,\n            neighbors: true\n        },\n        rankingModel: {\n            rankBy: 'CB',\n            rs : [\n                {\n                    name: 'CB',\n                    active: true,\n                    weight : 0.5,\n                    attr : 'keywords',\n                    pretty: 'Content Ranking'\n                },\n                {\n                    name: 'CF',\n                    active: true,\n                    weight : 0.5,\n                    attr : 'neighbors',\n                    pretty: 'Social Ranking'\n                }\n            ]\n        },\n        tagBox: {\n            header: {\n                enabled: true,\n                useHybrid: false,\n                useSplit: true\n            }\n        }\n    },\n    'HYB': {\n        rankingModel: {\n            rankBy: 'overall',\n            rs : [\n                {\n                    name: 'CB',\n                    active: true,\n                    weight : 0.5,\n                    attr : 'keywords',\n                    pretty: 'Content Ranking'\n                },\n                {\n                    name: 'CF',\n                    active: true,\n                    weight : 0.5,\n                    attr : 'neighbors',\n                    pretty: 'Social Ranking'\n                }\n            ]\n        },\n        tagBox: {\n            header: {\n                enabled: true,\n                useHybrid: true,\n                useSplit: false\n            }\n        }\n    }\n};\n\nvar get_options = function(rs) {\n    console.log('Send options for ' + rs);\n    var opt = $.extend(true, {}, default_options, rs_options[rs]);\n    return opt;\n}\n\nmodule.exports = get_options;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./conf_navigator_eval/static/conf_navigator_eval/js/urank_options.js\n// module id = 46\n// module chunks = 0"],"sourceRoot":""}